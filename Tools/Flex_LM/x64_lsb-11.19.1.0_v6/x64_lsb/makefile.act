#############################################################################
# Copyright (c) 1997-2020, 2022 Flexera. All Rights Reserved.
#############################################################################

# Use make PIE=1 for creating Position Independent Executable

# Use make SIMPLIFY_LMNEW=1 for generating a fixed value lm_new.c


MAINSRCDIR=..
PREPXMLDIR = $(MAINSRCDIR)/machind/activation/prep_xml
SRCDIR = $(MAINSRCDIR)/machind
EXAMPLESDIR=$(MAINSRCDIR)/examples
EZCALCSRC=$(EXAMPLESDIR)/ezcalc
ACTIVATIONSRC=$(EXAMPLESDIR)/activation
AAINCDIR = $(MAINSRCDIR)/machind/activation/include
AALIBDIR = ./activation/lib
SDTINCLUDES=$(SRCDIR)/sdt/Include

INCFLAGS = -I$(SRCDIR) -I.

THREADLIB = -lpthread

XTRACFLAG = -DFD_LIMIT_CHECK -DFLEX_INET6 -g -O2 -m64 -D__BITS64 -pipe -D_POSIX_C_SOURCE=199506L -D_GNU_SOURCE -DOS_LINUX -pthread -DECMC_DISABLE_FAKE_TPM=1 -DLM_INTERNAL -DFLEXLM_KITBUILD -DFLEX_STATIC -DVALIDATOR_UTILITY_SUPPORT -DLINUX 

XTRALIB = ${SSLLIB} -lrt -ldl

LDSHAREFLAGS = -shared -Wl,--dynamic-linker=/lib64/ld-lsb-x86-64.so.3

ifdef DONGLE
DONGLELIB = liblmgr_dongle.a
DONGLEPICLIB = liblmgr_dongle_pic.a
else
DONGLELIB = liblmgr_dongle_stub.a
DONGLEPICLIB = liblmgr_dongle_stub_pic.a
endif


#
#	Use XTRAOBJS to define your object files for vendor daemon
#	initialization routines, checkout filter, checkin callback, etc.
#


XTRAOBJS = 

LDFLAGS = -Wl,--dynamic-linker=/lib64/ld-lsb-x86-64.so.3

LINTFLAGS = -a -b -h

CFLAGS = -g $(INCFLAGS) $(XTRACFLAG)

SRCS	= $(SRCDIR)/lsvendor.c

STRIP = strip

OBJS = lmcrypt.o \
	lsvendor.o 
 
PIC = _pic

CFLAGS_PIC = -fPIC -DIS_PIC

#
#For GCC version > 6 PIE is configured as default.
#Checking GCC version based on which Linker flag will be decided when kit is built without PIE.
#
CHECK_ENABLE_DEFAULT_PIE=$(shell expr `gcc -dumpversion | cut -f1-2 -d.` \>= 6| bc)

#
#Enable PIE for Client application and utitlies
#
ifdef PIE
CFLAGS_PIE=-fpie
LDFLAGS_PIE =-pie
PIC_LIB= _pic
DONGLELIB=$(DONGLEPICLIB)
else
CFLAGS_PIE=-fno-pie
ifeq (${CHECK_ENABLE_DEFAULT_PIE},1)
LDFLAGS_PIE=-no-pie
endif
endif

#
#Enable dynamic SSL library linking
#
ifdef DYNSSL
ifdef DYNSSLDIR
BUILD_SSL_LIB=ld -shared -o libfnpssl.so fnp_ssl_wrapper.o -L $(DYNSSLDIR) -lssl -lcrypto
else
BUILD_SSL_LIB=ld -shared -o libfnpssl.so fnp_ssl_wrapper.o -lssl -lcrypto
endif
else
BUILD_SSL_LIB=ln -s libfnpssl_static.so libfnpssl.so
endif

#
#use pic library when building with PIE option, else use non PIC library
#
ACT_LIBRARY = libFNPload$(PIC_LIB).a
CLIENTLIB = liblmgr$(PIC_LIB)_trl.a libcrvs$(PIC_LIB).a libsb$(PIC_LIB).a $(BORROWOBJ) ${DONGLELIB}
LIBS = liblmgr_as$(PIC_LIB).a liblmgr_s$(PIC_LIB).a $(CLIENTLIB)
AALIB = $(AALIBDIR)/libact$(PIC_LIB).a
LM_NEW_OBJ = lm_new$(PIC_LIB).o
ASRGEN_OBJ = asrgen$(PIC_LIB).o
LIBLMSIGN = liblmsign$(PIC_LIB).a

#
#Disable PIE for lm_new.o
#
CFLAGS_NO_PIE=-fno-pie
ifeq (${CHECK_ENABLE_DEFAULT_PIE},1)
LDFLAGS_NO_PIE=-no-pie
endif

ACTSTUB = ls_getActivationsStub.o


PREPTOOL	= ./preptool

LD=$(CC)

DAEMON = demo

EXECS = Activation_binaries lmcrypt lmflex appactutil serveractutil comptranutil ezcalc ezcalcsdt ezcalcsdtplus liblmsign.a liblmsign$(PIC).a asrgen responsegenapi


LINTLIB =	llib-llmgr.a.ln

UTILS = lmhostid lmdown lminstall lmremove \
	lmreread lmswitchr lmstat lmdiag lmver lmpath lmborrow lmborrowl lmswitch lmnewlog lmvminfo lmlicvalidator

all: $(EXECS) $(DAEMON) utils

lmnewgen:	$(MAINSRCDIR)/machind/lsvendor.c $(MAINSRCDIR)/machind/lm_code.h
	./lmrand1 -i $(SRCDIR)/lsvendor.c
	$(CC) -c $(CFLAGS) $(CFLAGS_PIE) lmcode.c
	$(CC) $(CFLAGS) $(LDFLAGS_PIE) $(LDFLAGS) lmnewgen.o lmcode.o -L . -lsimplifier -Wl,-rpath,.  $(ACTSTUB) $(CLIENTLIB) $(XTRALIB) $(THREADLIB) \
						-o lmnewgen

daemon:	$(DAEMON)

$(DAEMON):	$(XTRAOBJS) $(LIBS) $(SRCDIR)/lsserver.h $(SRCDIR)/lm_code.h \
 $(LM_NEW_OBJ) 
	$(MAKE) -f makefile.act $(LM_NEW_OBJ)
	$(CC) -c $(CFLAGS_PIE) $(CFLAGS) lsrvend.c 
	mv lsrvend.o lsvendor.o
	rm -f lsrvend.c
	$(CC) $(CFLAGS) $(LDFLAGS_PIE) $(LDFLAGS) -o $(DAEMON) lsvendor.o $(LM_NEW_OBJ) \
 $(XTRAOBJS) $(LIBS) $(XTRALIB) $(THREADLIB) $(ACT_LIBRARY)
	$(STRIP) $(DAEMON)
	rm -f $(LM_NEW_OBJ)
	$(PREPTOOL) -v $(PREPXMLDIR)/vendor_daemon_unix.xml

Activation_binaries:
	cp publisher/tsreset ./tsreset_app
	-$(PREPTOOL) -v $(PREPXMLDIR)/tsreset_app_unix.xml
	cp publisher/tsreset ./tsreset_svr
	-$(PREPTOOL) -v $(PREPXMLDIR)/tsreset_svr_unix.xml
	

lm_new.o: $(SRCDIR)/lsvendor.c $(SRCDIR)/lm_code.h $(SRCDIR)/lmclient.h \
	$(CLIENTLIB)
	./lmrand1 -i $(SRCDIR)/lsvendor.c
	$(CC) -c $(CFLAGS) $(CFLAGS_NO_PIE) lmcode.c
	$(CC) $(CFLAGS) $(LDFLAGS_NO_PIE) $(LDFLAGS) lmnewgen.o lmcode.o -L . -lsimplifier -Wl,-rpath,.  $(ACTSTUB) $(CLIENTLIB) $(XTRALIB) $(THREADLIB) \
						-o lmnewgen
	rm -f lm_new.c
ifdef SIMPLIFY_LMNEW 
	 ./lmnewgen $(DAEMON) -s 
else 
	 ./lmnewgen $(DAEMON) 
endif
	$(CC) -c $(CFLAGS) $(CFLAGS_NO_PIE) lm_new.c
	$(CC) -c $(CFLAGS) $(CFLAGS_PIC) -o lm_new$(PIC).o lm_new.c

lm_new$(PIC).o: $(SRCDIR)/lsvendor.c $(SRCDIR)/lm_code.h $(SRCDIR)/lmclient.h \
	$(CLIENTLIB)
	./lmrand1 -i $(SRCDIR)/lsvendor.c
	$(CC) -c $(CFLAGS) $(CFLAGS_PIE) lmcode.c
	$(CC) $(CFLAGS) $(LDFLAGS_PIE) $(LDFLAGS) lmnewgen.o lmcode.o -L . -lsimplifier -Wl,-rpath,.  $(ACTSTUB) $(CLIENTLIB) $(XTRALIB) $(THREADLIB) \
						-o lmnewgen
	rm -f lm_new.c
ifdef SIMPLIFY_LMNEW 
	 ./lmnewgen $(DAEMON) -s 
else 
	 ./lmnewgen $(DAEMON) 
endif
	$(CC) -c $(CFLAGS) $(CFLAGS_PIC) -o lm_new$(PIC).o lm_new.c

liblmsign.a:	$(SRCDIR)/lmsign.c $(SRCDIR)/lmclient.h $(SRCDIR)/lm_code.h $(CLIENTLIB)
	$(CC) -c $(CFLAGS) $(CFLAGS_NO_PIE) $(SRCDIR)/lmsign.c -o lmsign.o
	ar cr liblmsign.a lmsign.o
	ranlib liblmsign.a
	rm lmsign.o

liblmsign$(PIC).a: $(SRCDIR)/lmsign.c $(SRCDIR)/lmclient.h $(SRCDIR)/lm_code.h $(CLIENTLIB)
	$(CC) -c $(CFLAGS) $(CFLAGS_PIC) $(SRCDIR)/lmsign.c -o lmsign$(PIC).o
	ar cr liblmsign$(PIC).a lmsign$(PIC).o
	ranlib liblmsign$(PIC).a
	rm lmsign$(PIC).o


asrgen:	$(ASRGEN_OBJ) $(LM_NEW_OBJ) $(LIBLMSIGN)
	$(CC) $(CFLAGS) $(LDFLAGS_PIE) $(LDFLAGS) -o asrgen $(ASRGEN_OBJ) $(LIBLMSIGN) $(ACTSTUB) $(CLIENTLIB) $(XTRALIB) $(THREADLIB)
	rm -f $(LM_NEW_OBJ)

lmcrypt: $(SRCDIR)/lmcrypt.c \
		$(SRCDIR)/lmclient.h $(SRCDIR)/lm_code.h lmprikey.h $(CLIENTLIB)
	$(CC) -c $(CFLAGS) $(CFLAGS_PIE) $(SRCDIR)/lmcrypt.c
	$(CC) $(CFLAGS) $(LDFLAGS_PIE) $(LDFLAGS) -o lmcrypt lmcrypt.o \
 $(ACTSTUB) $(CLIENTLIB) $(XTRALIB) $(THREADLIB)
	rm -f $(LM_NEW_OBJ)

lmprikey.h: $(LM_NEW_OBJ)


lmflex:	$(SRCDIR)/lmflex.c $(SRCDIR)/lm_code.h $(CLIENTLIB) $(LM_NEW_OBJ)
	$(MAKE) -f makefile.act $(LM_NEW_OBJ)
	$(CC) -c $(CFLAGS) $(CFLAGS_PIE) $(SRCDIR)/lmflex.c
	$(CC) $(CFLAGS) $(LDFLAGS_PIE) $(LDFLAGS) -o lmflex lmflex.o $(LM_NEW_OBJ) $(CLIENTLIB) $(XTRALIB) \
 $(THREADLIB) $(ACT_LIBRARY)
	rm lmflex.o
	$(STRIP) lmflex
	rm -f $(LM_NEW_OBJ)
	$(PREPTOOL) -v $(PREPXMLDIR)/lmflex_unix.xml

ezcalcsdt: $(EZCALCSRC)/ezcalcsdt.c $(SRCDIR)/sdt/Source/sdtdata.c $(EZCALCSRC)/sdtdefs.c $(LM_NEW_OBJ)
	$(MAKE) -f makefile.act $(LM_NEW_OBJ)
	$(CC) -c $(CFLAGS) $(CFLAGS_PIE) -I$(AAINCDIR) -I$(SDTINCLUDES) $(SRCDIR)/sdt/Source/sdtdata.c
	$(CC) -c $(CFLAGS) $(CFLAGS_PIE) -I$(AAINCDIR) -I$(SDTINCLUDES) $(EZCALCSRC)/sdtdefs.c
	$(CC) -c $(CFLAGS) $(CFLAGS_PIE) -I$(AAINCDIR) -I$(SDTINCLUDES) $(EZCALCSRC)/ezcalcsdt.c
	$(CC) $(CFLAGS) $(LDFLAGS_PIE) $(LDFLAGS) -o ezcalcsdt ezcalcsdt.o sdtdefs.o sdtdata.o $(LM_NEW_OBJ) $(AALIB) $(CLIENTLIB) $(XTRALIB) $(THREADLIB) $(ACT_LIBRARY)
	rm -f $(LM_NEW_OBJ)
	$(PREPTOOL) -v $(EZCALCSRC)/ezcalcsdt_unix.xml

ezcalc: $(EZCALCSRC)/ezcalc.c $(LM_NEW_OBJ)
	$(MAKE) -f makefile.act $(LM_NEW_OBJ)
	$(CC) -c $(CFLAGS) $(CFLAGS_PIE) -I$(AAINCDIR) $(EZCALCSRC)/ezcalc.c
	$(CC) $(CFLAGS) $(LDFLAGS_PIE) $(LDFLAGS) -o ezcalc ezcalc.o $(LM_NEW_OBJ) $(AALIB) $(CLIENTLIB) $(XTRALIB) $(THREADLIB) $(ACT_LIBRARY)
	rm -f $(LM_NEW_OBJ)
	$(PREPTOOL) -v $(EZCALCSRC)/ezcalc_unix.xml

ezcalcsdtplus: $(EZCALCSRC)/ezcalcsdtplus.cpp $(SRCDIR)/sdt/Source/sdttype.cpp $(EZCALCSRC)/sdtdefs.c $(LM_NEW_OBJ)
	$(MAKE) -f makefile.act $(LM_NEW_OBJ)
	$(CXX) -c $(CFLAGS) $(CFLAGS_PIE) -I$(AAINCDIR) -I$(SDTINCLUDES) $(SRCDIR)/sdt/Source/sdttype.cpp
	$(CXX) -c $(CFLAGS) $(CFLAGS_PIE) -I$(AAINCDIR) -I$(SDTINCLUDES) $(EZCALCSRC)/sdtdefs.c	
	$(CXX) -c $(CFLAGS) $(CFLAGS_PIE) -I$(AAINCDIR) -I$(SDTINCLUDES) $(EZCALCSRC)/ezcalcsdtplus.cpp
	$(CXX) $(CFLAGS) $(LDFLAGS_PIE) $(LDFLAGS) -o ezcalcsdtplus ezcalcsdtplus.o sdtdefs.o sdttype.o $(LM_NEW_OBJ) $(AALIB) $(CLIENTLIB) $(XTRALIB) $(THREADLIB) $(ACT_LIBRARY)
	rm -f $(LM_NEW_OBJ)
	-$(PREPTOOL) -v $(EZCALCSRC)/ezcalcsdtplus_unix.xml

appactutil: $(ACTIVATIONSRC)/appActUtil.c $(LM_NEW_OBJ)
	$(MAKE) -f makefile.act $(LM_NEW_OBJ)
	$(CC) -c $(CFLAGS) $(CFLAGS_PIE) -I$(AAINCDIR) $(ACTIVATIONSRC)/appActUtil.c
	$(CC) $(CFLAGS) $(LDFLAGS_PIE) $(LDFLAGS) -o appactutil appActUtil.o $(LM_NEW_OBJ) $(AALIB) $(CLIENTLIB) $(XTRALIB) $(THREADLIB) $(ACT_LIBRARY)
	rm -f $(LM_NEW_OBJ)
	$(PREPTOOL) -v $(ACTIVATIONSRC)/appActUtil_unix.xml


serveractutil: $(ACTIVATIONSRC)/serverActUtil.c $(LM_NEW_OBJ)
	$(MAKE) -f makefile.act $(LM_NEW_OBJ)
	$(CC) -c $(CFLAGS) $(CFLAGS_PIE) -I$(AAINCDIR) $(ACTIVATIONSRC)/serverActUtil.c
	$(CC) $(CFLAGS) $(LDFLAGS_PIE) $(LDFLAGS) -o serveractutil serverActUtil.o $(LM_NEW_OBJ) $(AALIB) $(CLIENTLIB) $(XTRALIB) $(THREADLIB) $(ACT_LIBRARY)
	rm -f $(LM_NEW_OBJ)
	$(PREPTOOL) -v $(ACTIVATIONSRC)/serverActUtil_unix.xml
 

comptranutil: $(ACTIVATIONSRC)/comptranutil/compTranUtil.c $(LM_NEW_OBJ)
	$(MAKE) -f makefile.act $(LM_NEW_OBJ)
	$(CC) -c $(CFLAGS_PIE) $(CFLAGS) -I$(AAINCDIR) $(ACTIVATIONSRC)/comptranutil/compTranUtil.c
	$(CC) -c $(CFLAGS_PIE) $(CFLAGS) -I$(AAINCDIR) $(ACTIVATIONSRC)/comptranutil/compTranUtilArgParser.c 
	$(CC) -c $(CFLAGS_PIE) $(CFLAGS) -I$(AAINCDIR) $(ACTIVATIONSRC)/comptranutil/compTranUtilCommand.c 
	$(CC) -c $(CFLAGS_PIE) $(CFLAGS) -I$(AAINCDIR) $(ACTIVATIONSRC)/comptranutil/compTranUtilCommandDef.c 
	$(CC) -c $(CFLAGS_PIE) $(CFLAGS) -I$(AAINCDIR) $(ACTIVATIONSRC)/comptranutil/compTranUtilContext.c 
	$(CC) -c $(CFLAGS_PIE) $(CFLAGS) -I$(AAINCDIR) $(ACTIVATIONSRC)/comptranutil/compTranUtilCreateRequest.c 
	$(CC) -c $(CFLAGS_PIE) $(CFLAGS) -I$(AAINCDIR) $(ACTIVATIONSRC)/comptranutil/compTranUtilCustom.c 
	$(CC) -c $(CFLAGS_PIE) $(CFLAGS) -I$(AAINCDIR) $(ACTIVATIONSRC)/comptranutil/compTranUtilFulfillments.c 
	$(CC) -c $(CFLAGS_PIE) $(CFLAGS) -I$(AAINCDIR) $(ACTIVATIONSRC)/comptranutil/compTranUtilHelper.c 
	$(CC) -c $(CFLAGS_PIE) $(CFLAGS) -I$(AAINCDIR) $(ACTIVATIONSRC)/comptranutil/compTranUtilLocal.c 
	$(CC) -c $(CFLAGS_PIE) $(CFLAGS) -I$(AAINCDIR) $(ACTIVATIONSRC)/comptranutil/compTranUtilManageRequests.c 
	$(CC) -c $(CFLAGS_PIE) $(CFLAGS) -I$(AAINCDIR) $(ACTIVATIONSRC)/comptranutil/compTranUtilMisc.c 
	$(CC) -c $(CFLAGS_PIE) $(CFLAGS) -I$(AAINCDIR) $(ACTIVATIONSRC)/comptranutil/compTranUtilResponse.c 
	$(CC) -c $(CFLAGS_PIE) $(CFLAGS) -I$(AAINCDIR) $(ACTIVATIONSRC)/comptranutil/compTranUtilSend.c 
	$(CC) -c $(CFLAGS_PIE) $(CFLAGS) -I$(AAINCDIR) $(ACTIVATIONSRC)/comptranutil/compTranUtilServer.c 
	$(CC) -c $(CFLAGS_PIE) $(CFLAGS) -I$(AAINCDIR) $(ACTIVATIONSRC)/comptranutil/compTranUtilShortCode.c 
	$(CC) $(CFLAGS) $(LDFLAGS_PIE) $(LDFLAGS) -o comptranutil compTranUtil.o		\
							compTranUtilArgParser.o		\
							compTranUtilCommand.o		\
							compTranUtilCommandDef.o	\
							compTranUtilContext.o		\
							compTranUtilCreateRequest.o	\
							compTranUtilCustom.o	 \
							compTranUtilFulfillments.o	\
							compTranUtilHelper.o		\
							compTranUtilLocal.o \
							compTranUtilManageRequests.o\
							compTranUtilMisc.o \
							compTranUtilResponse.o		\
							compTranUtilSend.o			\
							compTranUtilServer.o		\
							compTranUtilShortCode.o		\
							$(LM_NEW_OBJ) $(AALIB) $(CLIENTLIB) $(XTRALIB) $(THREADLIB) $(ACT_LIBRARY) -lrt
	rm -f $(LM_NEW_OBJ)
	cp -f comptranutil appcomptranutil
	cp -f comptranutil servercomptranutil 
	rm -f comptranutil 
	$(PREPTOOL) -v $(ACTIVATIONSRC)/comptranutil/appCompTranUtil_unix.xml
	$(PREPTOOL) -v $(ACTIVATIONSRC)/comptranutil/serverCompTranUtil_unix.xml

publisher/responsegenapi: $(ACTIVATIONSRC)/responsegen/ResponseGenApi.c
	$(CC) -c -o publisher/ResponseGenApi.o $(CFLAGS_PIE) $(CFLAGS) -I$(AAINCDIR) -I$(AAINCDIR)/responsegen $(ACTIVATIONSRC)/responsegen/ResponseGenApi.c
	$(CC) $(CFLAGS) $(LDFLAGS_PIE) $(LDFLAGS) -o publisher/responsegenapi publisher/ResponseGenApi.o -L publisher -lresponsegen

responsegenapi: publisher/responsegenapi
	@echo "##################################################################"
	@echo "#### responsegenapi is located in the publisher sub-directory ####"
	@echo "##################################################################"

libtsJavaAcc.so:	$(AALIBDIR)/TSJavaAccess.o
	$(CC) $(CFLAGS) $(LDSHAREFLAGS) -o libtsJavaAcc.so \
	 $(AALIBDIR)/TSJavaAccess.o \
 liblmgr$(PIC)_trl.a libcrvs$(PIC).a libsb$(PIC).a libFNPload$(PIC).a $(THREADLIB) -lc
	$(PREPTOOL) -v $(PREPXMLDIR)/tsJavaAcc_unix.xml

lint:;	lint $(INCFLAGS) $(LINTFLAGS) $(SRCS) $(LINTLIB)

clean:;	rm -f $(OBJS) $(EXECS) $(DAEMON) $(UTILS) lmcode.c lmcode.o \
	lmnewgen lsrvend.c lmflex appactutil serveractutil appcomptranutil servercomptranutil lm_new* *.h \
	ezcalc* appActUtil.o compTranUtilFulfillments.o sdtdata.o appactutil_libFNP.so compTranUtilHelper.o \
	sdtdefs.o appcomptranutil_libFNP.so compTranUtilLocal.o compTranUtilManageRequests.o compTranUtilMisc.o serverActUtil.o compTranUtil.o \
	compTranUtilResponse.o serveractutil_libFNP.so compTranUtilArgParser.o compTranUtilSend.o \
	servercomptranutil_libFNP.so compTranUtilCommand.o compTranUtilServer.o compTranUtilShortCode.o \
	compTranUtilCommandDef.o tsreset_app_libFNP.so compTranUtilContext.o tsreset_svr_libFNP.so \
	compTranUtilCreateRequest.o compTranUtilCustom.o lmsign.o publisher/ResponseGenApi.o publisher/ResponseGenApi liblmsign* asrgen




lmcrypt.o:	$(SRCDIR)/lmcrypt.c $(SRCDIR)/lm_code.h $(SRCDIR)/lmclient.h
	$(CC) $(CFLAGS_PIE) $(CFLAGS) $(SRCDIR)/lmcrypt.c

ssl_library:
	@rm -f libfnpssl.so
	$(BUILD_SSL_LIB)

utils:	
	-rm -f lmhostid lmver lmdown lmremove lmreread lmswitchr \
		lmstat lmdiag lminstall lmpath lmborrow lmborrowl lmswitch lmnewlog lmvminfo lmlicvalidator
	ln -s lmutil lmhostid
	ln -s lmutil lmver
	ln -s lmutil lmdown
	ln -s lmutil lmremove 
	ln -s lmutil lmreread 
	ln -s lmutil lmswitchr 
	ln -s lmutil lmstat 
	ln -s lmutil lmdiag
	ln -s lmutil lminstall
	ln -s lmutil lmpath
	ln -s lmutil lmnewlog
	ln -s lmutil lmborrow
	ln -s lmutil lmborrowl
	ln -s lmutil lmswitch
	ln -s lmutil lmvminfo
	ln -s lmutil lmlicvalidator

oldnames_comment:
	@echo Many filenames were shortened in v5.
	@echo If you want links to the old pre-v5 names, please type
	@echo 	\'make oldnames\'

oldnames:
	rm -f lmcrypter; ln lmcrypt lmcrypter	
	-(\
		cd ../machind; \
		rm -f ls_vendor.c; ln lsvendor.c ls_vendor.c; \
		rm -f lm_client.h; ln lmclient.h lm_client.h; \
		rm -f lm_errors.h; ln lmerrors.h lm_errors.h; \
		rm -f lm_hosttype.h; ln	lmhtype.h lm_hosttype.h; \
		rm -f lmcrypter.c; ln lmcrypt.c lmcrypter.c; \
		rm -f ls_feature.h; ln lsfeatur.h ls_feature.h; \
		rm -f ls_master.h; ln lsmaster.h ls_master.h; \
		rm -f ls_server.h; ln lsserver.h ls_server.h; \
		rm -f ls_vendor.c; ln lsvendor.c ls_vendor.c; \
	)

eval:
	rm -f lmprikey.h $(UTILS) lmcrypt.o lmpubkey.h lsvendor.o lm_new.c \
			lmcode.c lmcode.o
