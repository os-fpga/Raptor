/**************************************************************************************************
* Copyright (c) 1997-2016, 2018 Flexera. All Rights Reserved.
**************************************************************************************************/

/**
 * FlxActTypes include file
 *
 * The FlxActTypes include file contains the type definitions required for using
 * the Flex activation library API.
 */

#ifndef FlxActTypes_h

#define FlxActTypes_h  1

#ifdef __cplusplus
extern "C" {
#endif

#if defined( SUNOS5 ) || defined (HAVE_INTTYPES_H)
#include <inttypes.h>
#elif  defined (PC) || defined (_WIN32)
#ifdef _MSC_VER
typedef unsigned __int32	uint32_t;
#else /* _MSC_VER */
typedef unsigned			uint32_t;
#endif /* _MSC_VER */
#else
#if defined (HP) || OS_HPUX
#include "inttypes.h"
#else
#include "stdint.h"
#endif /* HP || OS_HPUX */
#endif

/* define our own boolean */
#define FLX_ACT_TRUE (1)			/* true */
#define FLX_ACT_FALSE (0)			/* false */
typedef uint32_t FlxActBool;

/**
 * define our own error structure to return detailed information
 * regarding errors
 */
typedef struct {
	uint32_t	majorErrorNo; 	/* major error code, get information from error types.h */
	uint32_t	minorErrorNo;	/* corresponds to code location - source of error */
	uint32_t	sysErrorNo;		/* corresponds to system to 3rd party library error code */
} FlxActError;


/**
 * Types common to more than one header.
 */

typedef enum flxShortCodeType
{
	flxShortCodeTypeNotSet		= 0,	/* Request generated by an earlier version of FNP that did not store the request type. */
	flxShortCodeTypeActivation	= 1,
	flxShortCodeTypeReturn		= 2,
	flxShortCodeTypeRepair		= 3,
	flxShortCodeTypeError		= 4 
} FlxShortCodeType;


#ifdef __cplusplus
}
#endif

#endif


