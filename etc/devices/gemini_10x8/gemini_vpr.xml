<?xml version="1.0"?>
<!--
////////////////////////////////////////////////////////////////////////////////
# THIS FILE WAS AUTOMATICALLY GENERATED FROM DO NOT EDIT
////////////////////////////////////////////////////////////////////////////////
-->
<!-- Rapidsilicon Castor Heterogeneous FPGA Architecture -->
<architecture>
  <!--
       ODIN II specific config begins
       Describes the types of user-specified netlist blocks (in blif, this corresponds to
       ".model [type_of_block]") that this architecture supports.

       Note: Basic LUTs, I/Os, and flip-flops are not included here as there are
       already special structures in blif (.names, .input, .output, and .latch)
       that describe them.
  -->
  <models>
    <model name="io">
      <input_ports>
        <port name="clk" is_clock="1"/>
        <port name="outpad"/>
      </input_ports>
      <output_ports>
        <port name="inpad"/>
      </output_ports>
    </model>
    <!-- Flipflop models definition starts -->
    <!--  posedge flop with active high sync enable -->
    <model name="mmff">
      <input_ports>
        <port name="D" clock="C"/>
        <port name="E" clock="C"/>
        <port name="R" clock="C"/>
        <port name="C" is_clock="1"/>
        <port name="SI"/>
      </input_ports>
      <output_ports>
        <port name="Q" clock="C"/>
        <port name="SO"/>
      </output_ports>
    </model>
    <!--  latch modes   -->
    <model name="latch">
      <input_ports>
        <port name="G" is_clock="1"/>
        <port name="D" clock="G"/>
      </input_ports>
      <output_ports>
        <port name="Q" clock="G"/>
      </output_ports>
    </model>
    <model name="latchn">
      <input_ports>
        <port name="G" is_clock="1"/>
        <port name="D" clock="G"/>
      </input_ports>
      <output_ports>
        <port name="Q" clock="G"/>
      </output_ports>
    </model>
    <model name="latchr">
      <input_ports>
        <port name="G" is_clock="1"/>
        <port name="R" clock="G"/>
        <port name="D" clock="G"/>
      </input_ports>
      <output_ports>
        <port name="Q" clock="G"/>
      </output_ports>
    </model>
    <model name="latchnr">
      <input_ports>
        <port name="G" is_clock="1"/>
        <port name="R" clock="G"/>
        <port name="D" clock="G"/>
      </input_ports>
      <output_ports>
        <port name="Q" clock="G"/>
      </output_ports>
    </model>
    <!--  posedge flop  -->
    <model name="dff">
      <input_ports>
        <port name="D" clock="C"/>
        <port name="C" is_clock="1"/>
      </input_ports>
      <output_ports>
        <port name="Q" clock="C"/>
      </output_ports>
    </model>
    <!--  negedge flop  -->
    <model name="dffn">
      <input_ports>
        <port name="D" clock="C"/>
        <port name="C" is_clock="1"/>
      </input_ports>
      <output_ports>
        <port name="Q" clock="C"/>
      </output_ports>
    </model>
    <!--  posedge flop with active high sync enable -->
    <model name="dffe">
      <input_ports>
        <port name="D" clock="C"/>
        <port name="E" clock="C"/>
        <port name="C" is_clock="1"/>
      </input_ports>
      <output_ports>
        <port name="Q" clock="C"/>
      </output_ports>
    </model>
    <!--  negedge flop with active high sync enable -->
    <model name="dffne">
      <input_ports>
        <port name="D" clock="C"/>
        <port name="E" clock="C"/>
        <port name="C" is_clock="1"/>
      </input_ports>
      <output_ports>
        <port name="Q" clock="C"/>
      </output_ports>
    </model>
    <!--  posedge flop with active high sync enable -->
    <model name="sdffre">
      <input_ports>
        <port name="D" clock="C"/>
        <port name="E" clock="C"/>
        <port name="R" clock="C"/>
        <port name="C" is_clock="1"/>
      </input_ports>
      <output_ports>
        <port name="Q" clock="C"/>
      </output_ports>
    </model>
    <!--  negedge flop with active high sync enable -->
    <model name="sdffnre">
      <input_ports>
        <port name="D" clock="C"/>
        <port name="E" clock="C"/>
        <port name="R" clock="C"/>
        <port name="C" is_clock="1"/>
      </input_ports>
      <output_ports>
        <port name="Q" clock="C"/>
      </output_ports>
    </model>
    <!--  posedge flop with active high sync enable -->
    <model name="dffre">
      <input_ports>
        <port name="D" clock="C"/>
        <port name="E" clock="C"/>
        <port name="R" clock="C"/>
        <port name="C" is_clock="1"/>
      </input_ports>
      <output_ports>
        <port name="Q" clock="C"/>
      </output_ports>
    </model>
    <!--  negedge flop with active high sync enable -->
    <model name="dffnre">
      <input_ports>
        <port name="D" clock="C"/>
        <port name="E" clock="C"/>
        <port name="R" clock="C"/>
        <port name="C" is_clock="1"/>
      </input_ports>
      <output_ports>
        <port name="Q" clock="C"/>
      </output_ports>
    </model>
    <model name="sdff">
      <input_ports>
        <port name="D" clock="C"/>
        <port name="R" clock="C"/>
        <port name="C" is_clock="1"/>
      </input_ports>
      <output_ports>
        <port name="Q" clock="C"/>
      </output_ports>
    </model>
    <model name="sdffn">
      <input_ports>
        <port name="D" clock="C"/>
        <port name="R" clock="C"/>
        <port name="C" is_clock="1"/>
      </input_ports>
      <output_ports>
        <port name="Q" clock="C"/>
      </output_ports>
    </model>
    <model name="dffr">
      <input_ports>
        <port name="D" clock="C"/>
        <port name="R" clock="C"/>
        <port name="C" is_clock="1"/>
      </input_ports>
      <output_ports>
        <port name="Q" clock="C"/>
      </output_ports>
    </model>
    <model name="dffnr">
      <input_ports>
        <port name="D" clock="C"/>
        <port name="R" clock="C"/>
        <port name="C" is_clock="1"/>
      </input_ports>
      <output_ports>
        <port name="Q" clock="C"/>
      </output_ports>
    </model>
    <model name="frac_lut6">
      <input_ports>
        <port name="in" combinational_sink_ports="lut4_out lut5_out lut6_out"/>
      </input_ports>
      <output_ports>
        <port name="lut4_out"/>
        <port name="lut5_out"/>
        <port name="lut6_out"/>
      </output_ports>
    </model>
    <model name="fa_1bit">
      <input_ports>
        <port name="p" combinational_sink_ports="sum cout"/>
        <port name="g" combinational_sink_ports="sum cout"/>
        <port name="cin" combinational_sink_ports="sum cout"/>
      </input_ports>
      <output_ports>
        <port name="sum"/>
        <port name="cout"/>
      </output_ports>
    </model>
    <model name="io_scff">
      <input_ports>
        <port name="D" clock="clk"/>
        <port name="SI" clock="clk"/>
        <port name="clk" is_clock="1"/>
      </input_ports>
      <output_ports>
        <port name="Q" clock="clk"/>
      </output_ports>
    </model>
    <model name="z_pad_tieoff">
      <input_ports>
      </input_ports>
      <output_ports>
        <port name="logic0"/>
      </output_ports>
    </model>
    <model name="clock_inverter">
      <input_ports>
        <port name="a" combinational_sink_ports="z" is_clock="1"/>
      </input_ports>
      <output_ports>
        <port name="z"/>
      </output_ports>
    </model>
    <model name="inverter">
      <input_ports>
        <port name="a" combinational_sink_ports="z"/>
      </input_ports>
      <output_ports>
        <port name="z"/>
      </output_ports>
    </model>
    <model name="logic0">
      <input_ports>
      </input_ports>
      <output_ports>
        <port name="logic0"/>
      </output_ports>
    </model>
    <model name="logic1">
      <input_ports>
      </input_ports>
      <output_ports>
        <port name="logic1"/>
      </output_ports>
    </model>
    <model name="dsp_phy">
      <input_ports>
        <port name="clk" is_clock="1"/>
        <port name="a_i" clock="clk" combinational_sink_ports="z_o"/>
        <port name="b_i" clock="clk" combinational_sink_ports="z_o"/>
        <port name="feedback" clock="clk"/>
        <port name="unsigned_a" clock="clk"/>
        <port name="unsigned_b" clock="clk"/>
        <port name="shift_right" clock="clk"/>
        <port name="saturate_enable" clock="clk"/>
        <port name="round" clock="clk"/>
        <port name="subtract" clock="clk"/>
        <port name="load_acc" clock="clk"/>
        <port name="acc_fir_i" clock="clk"/>
        <port name="lreset" clock="clk"/>
        <port name="sc_in"/>
      </input_ports>
      <output_ports>
        <port name="z_o" clock="clk"/>
        <port name="dly_b_o" clock="clk"/>
        <port name="sc_out"/>
      </output_ports>
    </model>
    <!-- DSP_MULT is the only mode which is purely combinatorial -->
    <model name="RS_DSP_MULT">
      <input_ports>
        <port name="a" combinational_sink_ports="z"/>
        <port name="b" combinational_sink_ports="z"/>
        <port name="unsigned_a" combinational_sink_ports="z"/>
        <port name="unsigned_b" combinational_sink_ports="z"/>
        <port name="feedback" combinational_sink_ports="z"/>
        <!-- set feedback=3'b000 for combinatorial MULT -->
      </input_ports>
      <output_ports>
        <port name="z"/>
      </output_ports>
    </model>
    <model name="RS_DSP">
      <input_ports>
        <port name="clk" is_clock="1"/>
        <port name="lreset" clock="clk"/>
        <port name="a" clock="clk"/>
        <port name="b" clock="clk"/>
        <port name="feedback" clock="clk"/>
        <port name="unsigned_a" clock="clk"/>
        <port name="unsigned_b" clock="clk"/>
        <port name="shift_right" clock="clk"/>
        <port name="saturate_enable" clock="clk"/>
        <port name="round" clock="clk"/>
        <port name="subtract" clock="clk"/>
        <port name="load_acc" clock="clk"/>
        <port name="acc_fir" clock="clk"/>
      </input_ports>
      <output_ports>
        <port name="z" clock="clk"/>
        <port name="dly_b" clock="clk"/>
      </output_ports>
    </model>
    <model name="RS_DSP_MULT_REGIN">
      <input_ports>
        <port name="clk" is_clock="1"/>
        <port name="lreset" clock="clk"/>
        <port name="a" clock="clk"/>
        <port name="b" clock="clk"/>
        <port name="feedback" clock="clk"/>
        <port name="unsigned_a" clock="clk"/>
        <port name="unsigned_b" clock="clk"/>
      </input_ports>
      <output_ports>
        <port name="z" clock="clk"/>
      </output_ports>
    </model>
    <model name="RS_DSP_MULT_REGOUT">
      <input_ports>
        <port name="clk" is_clock="1"/>
        <port name="lreset" clock="clk"/>
        <port name="a" clock="clk"/>
        <port name="b" clock="clk"/>
        <port name="feedback" clock="clk"/>
        <port name="unsigned_a" clock="clk"/>
        <port name="unsigned_b" clock="clk"/>
      </input_ports>
      <output_ports>
        <port name="z" clock="clk"/>
      </output_ports>
    </model>
    <model name="RS_DSP_MULT_REGIN_REGOUT">
      <input_ports>
        <port name="clk" is_clock="1"/>
        <port name="lreset" clock="clk"/>
        <port name="a" clock="clk"/>
        <port name="b" clock="clk"/>
        <port name="feedback" clock="clk"/>
        <port name="unsigned_a" clock="clk"/>
        <port name="unsigned_b" clock="clk"/>
      </input_ports>
      <output_ports>
        <port name="z" clock="clk"/>
      </output_ports>
    </model>
    <model name="RS_DSP_MULTACC">
      <input_ports>
        <port name="clk" is_clock="1"/>
        <port name="lreset" clock="clk"/>
        <port name="a" clock="clk"/>
        <port name="b" clock="clk"/>
        <port name="feedback" clock="clk"/>
        <port name="unsigned_a" clock="clk"/>
        <port name="unsigned_b" clock="clk"/>
        <port name="shift_right" clock="clk"/>
        <port name="saturate_enable" clock="clk"/>
        <port name="round" clock="clk"/>
        <port name="subtract" clock="clk"/>
        <port name="load_acc" clock="clk"/>
      </input_ports>
      <output_ports>
        <port name="z" clock="clk"/>
      </output_ports>
    </model>
    <model name="RS_DSP_MULTACC_REGIN">
      <input_ports>
        <port name="clk" is_clock="1"/>
        <port name="lreset" clock="clk"/>
        <port name="a" clock="clk"/>
        <port name="b" clock="clk"/>
        <port name="feedback" clock="clk"/>
        <port name="unsigned_a" clock="clk"/>
        <port name="unsigned_b" clock="clk"/>
        <port name="shift_right" clock="clk"/>
        <port name="saturate_enable" clock="clk"/>
        <port name="round" clock="clk"/>
        <port name="subtract" clock="clk"/>
        <port name="load_acc" clock="clk"/>
      </input_ports>
      <output_ports>
        <port name="z" clock="clk"/>
      </output_ports>
    </model>
    <model name="RS_DSP_MULTACC_REGOUT">
      <input_ports>
        <port name="clk" is_clock="1"/>
        <port name="lreset" clock="clk"/>
        <port name="a" clock="clk"/>
        <port name="b" clock="clk"/>
        <port name="feedback" clock="clk"/>
        <port name="unsigned_a" clock="clk"/>
        <port name="unsigned_b" clock="clk"/>
        <port name="shift_right" clock="clk"/>
        <port name="saturate_enable" clock="clk"/>
        <port name="round" clock="clk"/>
        <port name="subtract" clock="clk"/>
        <port name="load_acc" clock="clk"/>
      </input_ports>
      <output_ports>
        <port name="z" clock="clk"/>
      </output_ports>
    </model>
    <model name="RS_DSP_MULTACC_REGIN_REGOUT">
      <input_ports>
        <port name="clk" is_clock="1"/>
        <port name="lreset" clock="clk"/>
        <port name="a" clock="clk"/>
        <port name="b" clock="clk"/>
        <port name="feedback" clock="clk"/>
        <port name="unsigned_a" clock="clk"/>
        <port name="unsigned_b" clock="clk"/>
        <port name="shift_right" clock="clk"/>
        <port name="saturate_enable" clock="clk"/>
        <port name="round" clock="clk"/>
        <port name="subtract" clock="clk"/>
        <port name="load_acc" clock="clk"/>
      </input_ports>
      <output_ports>
        <port name="z" clock="clk"/>
      </output_ports>
    </model>
    <model name="RS_DSP_MULTADD">
      <input_ports>
        <port name="clk" is_clock="1"/>
        <port name="lreset" clock="clk"/>
        <port name="a" clock="clk"/>
        <port name="b" clock="clk"/>
        <port name="feedback" clock="clk"/>
        <port name="unsigned_a" clock="clk"/>
        <port name="unsigned_b" clock="clk"/>
        <port name="shift_right" clock="clk"/>
        <port name="saturate_enable" clock="clk"/>
        <port name="round" clock="clk"/>
        <port name="subtract" clock="clk"/>
        <port name="load_acc" clock="clk"/>
        <port name="acc_fir" clock="clk"/>
      </input_ports>
      <output_ports>
        <port name="z" clock="clk"/>
        <port name="dly_b" clock="clk"/>
      </output_ports>
    </model>
    <model name="RS_DSP_MULTADD_REGIN">
      <input_ports>
        <port name="clk" is_clock="1"/>
        <port name="lreset" clock="clk"/>
        <port name="a" clock="clk"/>
        <port name="b" clock="clk"/>
        <port name="feedback" clock="clk"/>
        <port name="unsigned_a" clock="clk"/>
        <port name="unsigned_b" clock="clk"/>
        <port name="shift_right" clock="clk"/>
        <port name="saturate_enable" clock="clk"/>
        <port name="round" clock="clk"/>
        <port name="subtract" clock="clk"/>
        <port name="load_acc" clock="clk"/>
        <port name="acc_fir" clock="clk"/>
      </input_ports>
      <output_ports>
        <port name="z" clock="clk"/>
        <port name="dly_b" clock="clk"/>
      </output_ports>
    </model>
    <model name="RS_DSP_MULTADD_REGOUT">
      <input_ports>
        <port name="clk" is_clock="1"/>
        <port name="lreset" clock="clk"/>
        <port name="a" clock="clk"/>
        <port name="b" clock="clk"/>
        <port name="feedback" clock="clk"/>
        <port name="unsigned_a" clock="clk"/>
        <port name="unsigned_b" clock="clk"/>
        <port name="shift_right" clock="clk"/>
        <port name="saturate_enable" clock="clk"/>
        <port name="round" clock="clk"/>
        <port name="subtract" clock="clk"/>
        <port name="load_acc" clock="clk"/>
        <port name="acc_fir" clock="clk"/>
      </input_ports>
      <output_ports>
        <port name="z" clock="clk"/>
        <port name="dly_b" clock="clk"/>
      </output_ports>
    </model>
    <model name="RS_DSP_MULTADD_REGIN_REGOUT">
      <input_ports>
        <port name="clk" is_clock="1"/>
        <port name="lreset" clock="clk"/>
        <port name="a" clock="clk"/>
        <port name="b" clock="clk"/>
        <port name="feedback" clock="clk"/>
        <port name="unsigned_a" clock="clk"/>
        <port name="unsigned_b" clock="clk"/>
        <port name="shift_right" clock="clk"/>
        <port name="saturate_enable" clock="clk"/>
        <port name="round" clock="clk"/>
        <port name="subtract" clock="clk"/>
        <port name="load_acc" clock="clk"/>
        <port name="acc_fir" clock="clk"/>
      </input_ports>
      <output_ports>
        <port name="z" clock="clk"/>
        <port name="dly_b" clock="clk"/>
      </output_ports>
    </model>
    <!--BRAM models-->
    <model name="bram_phy">
      <input_ports>
        <port name="WDATA_A1_i" clock="CLK_A1_i"/>
        <port name="WDATA_A2_i" clock="CLK_A2_i"/>
        <port name="ADDR_A1_i" clock="CLK_A1_i"/>
        <port name="ADDR_A2_i" clock="CLK_A2_i"/>
        <port name="CLK_A1_i" is_clock="1"/>
        <port name="CLK_A2_i" is_clock="1"/>
        <port name="REN_A1_i" clock="CLK_A1_i"/>
        <port name="REN_A2_i" clock="CLK_A2_i"/>
        <port name="WEN_A1_i" clock="CLK_A1_i"/>
        <port name="WEN_A2_i" clock="CLK_A2_i"/>
        <port name="BE_A1_i" clock="CLK_A1_i"/>
        <port name="BE_A2_i" clock="CLK_A2_i"/>
        <port name="FLUSH1_i" clock="CLK_A1_i"/>
        <port name="WDATA_B1_i" clock="CLK_B1_i"/>
        <port name="WDATA_B2_i" clock="CLK_B2_i"/>
        <port name="ADDR_B1_i" clock="CLK_B1_i"/>
        <port name="ADDR_B2_i" clock="CLK_B2_i"/>
        <port name="CLK_B1_i" is_clock="1"/>
        <port name="CLK_B2_i" is_clock="1"/>
        <port name="REN_B1_i" clock="CLK_B1_i"/>
        <port name="REN_B2_i" clock="CLK_B2_i"/>
        <port name="WEN_B1_i" clock="CLK_B1_i"/>
        <port name="WEN_B2_i" clock="CLK_B2_i"/>
        <port name="BE_B1_i" clock="CLK_B1_i"/>
        <port name="BE_B2_i" clock="CLK_B2_i"/>
        <port name="FLUSH2_i" clock="CLK_B1_i"/>
        <port name="RAM_ID_i"/>
        <port name="PL_INIT_i"/>
        <port name="PL_ENA_i"/>
        <port name="PL_REN_i"/>
        <port name="PL_CLK_i" is_clock="1"/>
        <port name="PL_WEN_i"/>
        <port name="PL_ADDR_i"/>
        <port name="PL_DATA_i"/>
        <port name="sc_in"/>
      </input_ports>
      <output_ports>
        <port name="RDATA_A1_o" clock="CLK_A1_i"/>
        <port name="RDATA_A2_o" clock="CLK_A2_i"/>
        <port name="RDATA_B1_o" clock="CLK_B1_i"/>
        <port name="RDATA_B2_o" clock="CLK_B2_i"/>
        <port name="PL_INIT_o"/>
        <port name="PL_ENA_o"/>
        <port name="PL_REN_o"/>
        <port name="PL_CLK_o"/>
        <port name="PL_WEN_o"/>
        <port name="PL_ADDR_o"/>
        <port name="PL_DATA_o"/>
        <port name="sc_out"/>
      </output_ports>
    </model>
    <!--bram_phy-->
    <model name="RS_TDP36K">
      <input_ports>
        <port name="WDATA_A1" clock="CLK_A1"/>
        <port name="WDATA_A2" clock="CLK_A2"/>
        <port name="ADDR_A1" clock="CLK_A1"/>
        <port name="ADDR_A2" clock="CLK_A2"/>
        <port name="CLK_A1" is_clock="1"/>
        <port name="CLK_A2" is_clock="1"/>
        <port name="REN_A1" clock="CLK_A1"/>
        <port name="REN_A2" clock="CLK_A2"/>
        <port name="WEN_A1" clock="CLK_A1"/>
        <port name="WEN_A2" clock="CLK_A2"/>
        <port name="BE_A1" clock="CLK_A1"/>
        <port name="BE_A2" clock="CLK_A2"/>
        <port name="FLUSH1" clock="CLK_A1"/>
        <port name="WDATA_B1" clock="CLK_B1"/>
        <port name="WDATA_B2" clock="CLK_B2"/>
        <port name="ADDR_B1" clock="CLK_B1"/>
        <port name="ADDR_B2" clock="CLK_B2"/>
        <port name="CLK_B1" is_clock="1"/>
        <port name="CLK_B2" is_clock="1"/>
        <port name="REN_B1" clock="CLK_B1"/>
        <port name="REN_B2" clock="CLK_B2"/>
        <port name="WEN_B1" clock="CLK_B1"/>
        <port name="WEN_B2" clock="CLK_B2"/>
        <port name="BE_B1" clock="CLK_B1"/>
        <port name="BE_B2" clock="CLK_B2"/>
        <port name="FLUSH2" clock="CLK_B1"/>
      </input_ports>
      <output_ports>
        <port name="RDATA_A1" clock="CLK_A1"/>
        <port name="RDATA_A2" clock="CLK_A2"/>
        <port name="RDATA_B1" clock="CLK_B1"/>
        <port name="RDATA_B2" clock="CLK_B2"/>
      </output_ports>
    </model>
  </models>
  <tiles>
    <!-- Each I/O tile includes a GPIO -->
    <!-- IOs go on the periphery of the FPGA, for consistency,
         make it physically equivalent on all sides so that only one definition of I/Os is needed.
         If I do not make a physically equivalent definition, then I need to define 4 different I/Os, one for each side of the FPGA

         Each input of the tile can be driven by 15% of routing tracks
         Each output of the tile can drive 10% of routing tracks
    -->
    <!-- - - - - - - - - - - Common io_top- - - - - - - - - - -->
    <tile name="io_top" area="0">
      <sub_tile name="io_top" capacity="72">
        <equivalent_sites>
          <site pb_type="io"/>
        </equivalent_sites>
        <clock name="clk" num_pins="16"/>
        <input name="f2a_i" num_pins="1"/>
        <output name="a2f_o" num_pins="1"/>
        <input name="sc_in" num_pins="1"/>
        <output name="sc_out" num_pins="1"/>
        <fc in_type="frac" in_val="0.15" out_type="frac" out_val="0.15">
          <fc_override port_name="clk" fc_type="frac" fc_val="0"/>
          <fc_override port_name="sc_in" fc_type="frac" fc_val="0"/>
          <fc_override port_name="sc_out" fc_type="frac" fc_val="0"/>
        </fc>
        <pinlocations pattern="custom">
          <loc side="top"> io_top[71:14].f2a_i
          io_top[11:0].a2f_o
          io_top[71:24].a2f_o
        </loc>
          <loc side="right">io_top[23:12].a2f_o io_top[13:0].f2a_i
        </loc>
          <loc side="left">io_top.sc_in io_top.sc_out
        </loc>
          <loc side="bottom">io_top.clk
        </loc>
        </pinlocations>
      </sub_tile>
    </tile>
    <!-- - - - - - - - - - - - - end io declaration - - - - - - - -->
    <!-- - - - - - - - - - - Common io_right- - - - - - - - - - -->
    <tile name="io_right" area="0">
      <sub_tile name="io_right" capacity="72">
        <equivalent_sites>
          <site pb_type="io"/>
        </equivalent_sites>
        <clock name="clk" num_pins="16"/>
        <input name="f2a_i" num_pins="1"/>
        <output name="a2f_o" num_pins="1"/>
        <input name="sc_in" num_pins="1"/>
        <output name="sc_out" num_pins="1"/>
        <fc in_type="frac" in_val="0.15" out_type="frac" out_val="0.15">
          <fc_override port_name="clk" fc_type="frac" fc_val="0"/>
          <fc_override port_name="sc_in" fc_type="frac" fc_val="0"/>
          <fc_override port_name="sc_out" fc_type="frac" fc_val="0"/>
        </fc>
        <pinlocations pattern="custom">
          <loc side="top"> io_right[71:14].f2a_i
          io_right[11:0].a2f_o
        </loc>
          <loc side="right">io_right[23:12].a2f_o io_right[13:0].f2a_i
          io_right[71:24].a2f_o
        </loc>
          <loc side="left">io_right.sc_in io_right.sc_out
        </loc>
          <loc side="bottom">io_right.clk
        </loc>
        </pinlocations>
      </sub_tile>
    </tile>
    <!-- - - - - - - - - - - - - end io declaration - - - - - - - -->
    <!-- - - - - - - - - - - Common io_bottom- - - - - - - - - - -->
    <tile name="io_bottom" area="0">
      <sub_tile name="io_bottom" capacity="72">
        <equivalent_sites>
          <site pb_type="io"/>
        </equivalent_sites>
        <clock name="clk" num_pins="16"/>
        <input name="f2a_i" num_pins="1"/>
        <output name="a2f_o" num_pins="1"/>
        <input name="sc_in" num_pins="1"/>
        <output name="sc_out" num_pins="1"/>
        <fc in_type="frac" in_val="0.15" out_type="frac" out_val="0.15">
          <fc_override port_name="clk" fc_type="frac" fc_val="0"/>
          <fc_override port_name="sc_in" fc_type="frac" fc_val="0"/>
          <fc_override port_name="sc_out" fc_type="frac" fc_val="0"/>
        </fc>
        <pinlocations pattern="custom">
          <loc side="top"> io_bottom[71:14].f2a_i
        </loc>
          <loc side="right">io_bottom[23:12].a2f_o io_bottom[13:0].f2a_i
        </loc>
          <loc side="left">io_bottom.sc_in io_bottom.sc_out
        </loc>
          <loc side="bottom">io_bottom.clk
          io_bottom[71:24].a2f_o io_bottom[11:0].a2f_o
        </loc>
        </pinlocations>
      </sub_tile>
    </tile>
    <!-- - - - - - - - - - - - - end io declaration - - - - - - - -->
    <!-- - - - - - - - - - - Common io_left- - - - - - - - - - -->
    <tile name="io_left" area="0">
      <sub_tile name="io_left" capacity="72">
        <equivalent_sites>
          <site pb_type="io"/>
        </equivalent_sites>
        <clock name="clk" num_pins="16"/>
        <input name="f2a_i" num_pins="1"/>
        <output name="a2f_o" num_pins="1"/>
        <input name="sc_in" num_pins="1"/>
        <output name="sc_out" num_pins="1"/>
        <fc in_type="frac" in_val="0.15" out_type="frac" out_val="0.15">
          <fc_override port_name="clk" fc_type="frac" fc_val="0"/>
          <fc_override port_name="sc_in" fc_type="frac" fc_val="0"/>
          <fc_override port_name="sc_out" fc_type="frac" fc_val="0"/>
        </fc>
        <pinlocations pattern="custom">
          <loc side="top"> io_left[71:14].f2a_i
          io_left[11:0].a2f_o
        </loc>
          <loc side="right">io_left[23:12].a2f_o io_left[13:0].f2a_i
        </loc>
          <loc side="left">io_left.sc_in io_left.sc_out
          io_left[71:24].a2f_o
        </loc>
          <loc side="bottom">io_left.clk
        </loc>
        </pinlocations>
      </sub_tile>
    </tile>
    <!-- - - - - - - - - - - - - end io declaration - - - - - - - -->
    <!-- - - - - - - - - - - Common io_right_top- - - - - - - - - - -->
    <tile name="io_right_top" area="0">
      <sub_tile name="io_right_top" capacity="60">
        <equivalent_sites>
          <site pb_type="io_corner"/>
        </equivalent_sites>
        <clock name="clk" num_pins="16"/>
        <input name="f2a_i" num_pins="1"/>
        <output name="a2f_o" num_pins="2"/>
        <input name="sc_in" num_pins="1"/>
        <output name="sc_out" num_pins="1"/>
        <fc in_type="frac" in_val="0.15" out_type="frac" out_val="0.15">
          <fc_override port_name="clk" fc_type="frac" fc_val="0"/>
          <fc_override port_name="sc_in" fc_type="frac" fc_val="0"/>
          <fc_override port_name="sc_out" fc_type="frac" fc_val="0"/>
        </fc>
        <pinlocations pattern="custom">
          <loc side="top">io_right_top[59:14].f2a_i
          io_right_top[59:30].a2f_o
        </loc>
          <loc side="right">io_right_top[29:0].a2f_o io_right_top[13:0].f2a_i
        </loc>
          <loc side="left">io_right_top.sc_in io_right_top.sc_out
        </loc>
          <loc side="bottom">io_right_top.clk
        </loc>
        </pinlocations>
      </sub_tile>
    </tile>
    <!-- - - - - - - - - - - - - end io declaration - - - - - - - -->
    <!-- - - - - - - - - - - Common io_right_bottom- - - - - - - - - - -->
    <tile name="io_right_bottom" area="0">
      <sub_tile name="io_right_bottom" capacity="60">
        <equivalent_sites>
          <site pb_type="io_corner"/>
        </equivalent_sites>
        <clock name="clk" num_pins="16"/>
        <input name="f2a_i" num_pins="1"/>
        <output name="a2f_o" num_pins="2"/>
        <input name="sc_in" num_pins="1"/>
        <output name="sc_out" num_pins="1"/>
        <fc in_type="frac" in_val="0.15" out_type="frac" out_val="0.15">
          <fc_override port_name="clk" fc_type="frac" fc_val="0"/>
          <fc_override port_name="sc_in" fc_type="frac" fc_val="0"/>
          <fc_override port_name="sc_out" fc_type="frac" fc_val="0"/>
        </fc>
        <pinlocations pattern="custom">
          <loc side="top">io_right_bottom[59:14].f2a_i
        </loc>
          <loc side="right">io_right_bottom[29:0].a2f_o io_right_bottom[13:0].f2a_i
        </loc>
          <loc side="left">io_right_bottom.sc_in io_right_bottom.sc_out
        </loc>
          <loc side="bottom">io_right_bottom.clk
          io_right_bottom[59:30].a2f_o
        </loc>
        </pinlocations>
      </sub_tile>
    </tile>
    <!-- - - - - - - - - - - - - end io declaration - - - - - - - -->
    <!-- Each CLB tile includes a Configurable Logic Block (CLB)
         Each input of the tile can be driven by 15% of routing tracks
         Each output of the tile can drive 15% of routing tracks
      -->
    <tile name="clb" area="53894">
      <sub_tile name="clb" capacity="1">
        <equivalent_sites>
          <site pb_type="clb"/>
        </equivalent_sites>
        <!-- Primary input outputs -->
        <input name="I30" num_pins="12" equivalent="full"/>
        <input name="I20" num_pins="12" equivalent="full"/>
        <input name="I10" num_pins="12" equivalent="full"/>
        <input name="I00" num_pins="12" equivalent="full"/>
        <input name="IS0" num_pins="6" equivalent="full"/>
        <output name="O0" num_pins="24" equivalent="none"/>
        <!-- Carry chain signals -->
        <input name="cin" num_pins="1"/>
        <output name="cout" num_pins="1"/>
        <!-- Cascading signals -->
        <input name="cascdn_i" num_pins="1"/>
        <input name="cascup_i" num_pins="1"/>
        <output name="cascdn_o" num_pins="1"/>
        <output name="cascup_o" num_pins="1"/>
        <!-- Global control signals -->
        <clock name="clk" num_pins="16"/>
        <!-- Scan chain signals -->
        <input name="sc_in" num_pins="2"/>
        <output name="sc_out" num_pins="2"/>
        <fc in_type="frac" in_val="0.15" out_type="frac" out_val="0.15">
          <!-- CONTROLS SIZE OF CBs and SB -->
          <fc_override port_name="sc_in" fc_type="frac" fc_val="0"/>
          <fc_override port_name="sc_out" fc_type="frac" fc_val="0"/>
          <fc_override port_name="cin" fc_type="frac" fc_val="0"/>
          <fc_override port_name="cascdn_i" fc_type="frac" fc_val="0"/>
          <fc_override port_name="cascup_i" fc_type="frac" fc_val="0"/>
          <fc_override port_name="cout" fc_type="frac" fc_val="0"/>
          <fc_override port_name="cascdn_o" fc_type="frac" fc_val="0"/>
          <fc_override port_name="cascup_o" fc_type="frac" fc_val="0"/>
          <fc_override port_name="clk" fc_type="frac" fc_val="0"/>
        </fc>
        <!-- Highly recommand to customize pin location when direct connection is used!!! -->
        <!-- To ensure best tileable routing architecture (minimize the number of unique SBs
            We keep all the pins that touch routing architecture on the right and bottom sides of the tile
            Top side pins are mainly for direct connections
        -->
        <pinlocations pattern="custom">
          <!-- 2 merged sets/resets -->
          <!-- 2x2-bit enables -->
          <loc side="left">
            clb.clk clb.sc_in
        </loc>
          <loc side="top">
            clb.I10[11:0] clb.I00[11:0]
            clb.IS0[2:0]
            clb.O0[11:0]
            clb.cin clb.cascdn_i clb.cascup_o
        </loc>
          <loc side="right">
            clb.I30[11:0] clb.I20[11:0]
            clb.IS0[5:3]
            clb.O0[23:12]
            clb.sc_out
        </loc>
          <loc side="bottom">
            clb.cout clb.cascdn_o clb.cascup_i
        </loc>
        </pinlocations>
      </sub_tile>
    </tile>
    <!--clb-->
    <tile name="dsp" height="3" width="1" area="548000">
      <sub_tile name="dsp" capacity="1">
        <equivalent_sites>
          <site pb_type="dsp"/>
        </equivalent_sites>
        <input name="I00" num_pins="12" equivalent="full"/>
        <input name="I10" num_pins="12" equivalent="full"/>
        <input name="I20" num_pins="12" equivalent="full"/>
        <input name="I30" num_pins="12" equivalent="full"/>
        <input name="IS0" num_pins="6" equivalent="full"/>
        <output name="O0" num_pins="24" equivalent="none"/>
        <input name="I01" num_pins="12" equivalent="full"/>
        <input name="I11" num_pins="12" equivalent="full"/>
        <input name="I21" num_pins="12" equivalent="full"/>
        <input name="I31" num_pins="12" equivalent="full"/>
        <input name="IS1" num_pins="6" equivalent="full"/>
        <output name="O1" num_pins="24" equivalent="none"/>
        <input name="I02" num_pins="12" equivalent="full"/>
        <input name="I12" num_pins="12" equivalent="full"/>
        <input name="I22" num_pins="12" equivalent="full"/>
        <input name="I32" num_pins="12" equivalent="full"/>
        <input name="IS2" num_pins="6" equivalent="full"/>
        <output name="O2" num_pins="24" equivalent="none"/>
        <!-- The following are not routable pins. Each later has fc_override fc_val="0" -->
        <clock name="clk" num_pins="16"/>
        <input name="sc_in" num_pins="20"/>
        <output name="sc_out" num_pins="20"/>
        <fc in_type="frac" in_val="0.15" out_type="frac" out_val="0.15">
          <!-- SIZE OF CBs and SB -->
          <fc_override port_name="clk" fc_type="frac" fc_val="0"/>
          <fc_override port_name="sc_in" fc_type="frac" fc_val="0"/>
          <fc_override port_name="sc_out" fc_type="frac" fc_val="0"/>
        </fc>
        <pinlocations pattern="custom">
          <!-- These are override pin assignment does not affect routing around it -->
          <loc side="left" yoffset="0"> dsp.clk dsp.sc_in </loc>
          <loc side="left" yoffset="1"> </loc>
          <loc side="left" yoffset="2"> </loc>
          <loc side="right" yoffset="0">
            dsp.I20[11:0] dsp.I30[11:0]
            dsp.IS0[5:3]
            dsp.O0[23:12]
            dsp.sc_out
          </loc>
          <loc side="right" yoffset="1">
            dsp.I21[11:0] dsp.I31[11:0]
            dsp.IS1[5:3]
            dsp.O1[23:12]
          </loc>
          <loc side="right" yoffset="2">
            dsp.I22[11:0] dsp.I32[11:0]
            dsp.IS2[5:3]
            dsp.O2[23:12]
          </loc>
          <loc side="top" yoffset="0">
            dsp.I00[11:0] dsp.I10[11:0]
            dsp.IS0[2:0]
            dsp.O0[11:0]
          </loc>
          <loc side="top" yoffset="1">
            dsp.I01[11:0] dsp.I11[11:0]
            dsp.IS1[2:0]
            dsp.O1[11:0]
          </loc>
          <loc side="top" yoffset="2">
            dsp.I02[11:0] dsp.I12[11:0]
            dsp.IS2[2:0]
            dsp.O2[11:0]
          </loc>
          <loc side="bottom" yoffset="0"> </loc>
          <loc side="bottom" yoffset="1"> </loc>
          <loc side="bottom" yoffset="2"> </loc>
        </pinlocations>
      </sub_tile>
    </tile>
    <!--dsp-->
    <tile name="bram" height="3" width="1" area="548000">
      <sub_tile name="bram" capacity="1">
        <equivalent_sites>
          <site pb_type="bram"/>
        </equivalent_sites>
        <input name="I00" num_pins="12" equivalent="full"/>
        <input name="I10" num_pins="12" equivalent="full"/>
        <input name="I20" num_pins="12" equivalent="full"/>
        <input name="I30" num_pins="12" equivalent="full"/>
        <input name="IS0" num_pins="6" equivalent="full"/>
        <output name="O0" num_pins="24" equivalent="none"/>
        <input name="I01" num_pins="12" equivalent="full"/>
        <input name="I11" num_pins="12" equivalent="full"/>
        <input name="I21" num_pins="12" equivalent="full"/>
        <input name="I31" num_pins="12" equivalent="full"/>
        <input name="IS1" num_pins="6" equivalent="full"/>
        <output name="O1" num_pins="24" equivalent="none"/>
        <input name="I02" num_pins="12" equivalent="full"/>
        <input name="I12" num_pins="12" equivalent="full"/>
        <input name="I22" num_pins="12" equivalent="full"/>
        <input name="I32" num_pins="12" equivalent="full"/>
        <input name="IS2" num_pins="6" equivalent="full"/>
        <output name="O2" num_pins="24" equivalent="none"/>
        <clock name="clk" num_pins="16"/>
        <input name="sc_in" num_pins="48"/>
        <output name="sc_out" num_pins="48"/>
        <input name="RAM_ID_i" num_pins="20"/>
        <input name="PL_IN" num_pins="74"/>
        <output name="PL_OUT" num_pins="74"/>
        <input name="PL_DATA_IN" num_pins="36"/>
        <output name="PL_DATA_OUT" num_pins="36"/>
        <fc in_type="frac" in_val="0.15" out_type="frac" out_val="0.15">
          <!-- SIZE OF CBs and SB -->
          <fc_override port_name="clk" fc_type="frac" fc_val="0"/>
          <fc_override port_name="sc_in" fc_type="frac" fc_val="0"/>
          <fc_override port_name="sc_out" fc_type="frac" fc_val="0"/>
          <fc_override port_name="RAM_ID_i" fc_type="frac" fc_val="0"/>
          <fc_override port_name="PL_IN" fc_type="frac" fc_val="0"/>
          <fc_override port_name="PL_OUT" fc_type="frac" fc_val="0"/>
          <fc_override port_name="PL_DATA_IN" fc_type="frac" fc_val="0"/>
          <fc_override port_name="PL_DATA_OUT" fc_type="frac" fc_val="0"/>
        </fc>
        <pinlocations pattern="custom">
          <!-- These are override pin assignment does not affect routing around it -->
          <loc side="left" yoffset="0"> bram.clk bram.sc_in </loc>
          <loc side="left" yoffset="1"> bram.RAM_ID_i </loc>
          <loc side="left" yoffset="2"> </loc>
          <loc side="right" yoffset="0">
            bram.I20[11:0] bram.I30[11:0]
            bram.IS0[5:3]
            bram.O0[23:12]
            bram.sc_out
          </loc>
          <loc side="right" yoffset="1">
            bram.I21[11:0] bram.I31[11:0]
            bram.IS1[5:3]
            bram.O1[23:12]
          </loc>
          <loc side="right" yoffset="2">
            bram.I22[11:0] bram.I32[11:0]
            bram.IS2[5:3]
            bram.O2[23:12]
          </loc>
          <loc side="top" yoffset="0">
            bram.I00[11:0] bram.I10[11:0]
            bram.IS0[2:0]
            bram.O0[11:0]
          </loc>
          <loc side="top" yoffset="1">
            bram.I01[11:0] bram.I11[11:0]
            bram.IS1[2:0]
            bram.O1[11:0]
          </loc>
          <loc side="top" yoffset="2">
            bram.I02[11:0] bram.I12[11:0]
            bram.IS2[2:0]
            bram.O2[11:0]
            bram.PL_IN
            bram.PL_DATA_OUT
          </loc>
          <loc side="bottom" yoffset="0">
            bram.PL_OUT
            bram.PL_DATA_IN
          </loc>
          <loc side="bottom" yoffset="1"> </loc>
          <loc side="bottom" yoffset="2"> </loc>
        </pinlocations>
      </sub_tile>
    </tile>
  </tiles>
  <!-- ODIN II specific config ends -->
  <!-- Physical descriptions begin -->
  <!-- Apply tileable routing architecture.
       This is strongly recommended if you want to PnR large FPGA fabric
    -->
  <device>
    <sizing R_minW_nmos="8926" R_minW_pmos="16067"/>
    <!-- The grid_logic_tile_area below will be used for all blocks that do not explicitly set their own (non-routing)
         area; set to 0 since we explicitly set the area of all blocks currently in this architecture file.
      -->
    <area grid_logic_tile_area="0"/>
    <chan_width_distr>
      <x distr="uniform" peak="1.0000000"/>
      <y distr="uniform" peak="1.000000"/>
    </chan_width_distr>
    <!-- Use Wilton-style connecting pattern in switch block
         Each routing track has access to only three other routing tracks
         (one per each side of the switch block except the side where the routing track locates)
      -->
    <switch_block type="wilton" fs="3" sub_type="subset" sub_fs="3"/>
    <connection_block input_switch_name="ipin_cblock"/>
  </device>
  <switchlist>
    <switch type="mux" name="ipin_cblock" R="0." Cout="0." Cin="0" Tdel="4.13473e-10" mux_trans_size="1.222260" buf_size="auto"/>
    <switch type="mux" name="L1_mux" R="0." Cin=".77e-15" Cout="0." Tdel="2.43383e-10" mux_trans_size="2.630740" buf_size="27.645901"/>
    <switch type="mux" name="L2_mux" R="0." Cin=".77e-15" Cout="0." Tdel="1e-10" mux_trans_size="2.630740" buf_size="27.645901"/>
    <switch type="mux" name="L4_mux" R="0." Cin=".77e-15" Cout="0." Tdel="2.02825e-10" mux_trans_size="2.630740" buf_size="27.645901"/>
  </switchlist>
  <segmentlist>
    <!-- GIVE a specific name for the segment! OpenFPGA appreciate that! -->
    <!-- Uni-directional routing architecture  -->
    <!--segment name="L0" freq="0" length="1" type="unidir" Rmetal="0" Cmetal="0">
      <mux name="L1_mux"/>
      <sb type="pattern">1 1</sb>
      <cb type="pattern">1</cb>
    </segment-->
    <!-- segment name="L1" freq="0.20" length="1" type="unidir" Rmetal="0" Cmetal="0">
      <mux name="L1_mux"/>
      <sb type="pattern">1 1</sb>
      <cb type="pattern">1</cb>
    </segment -->
    <segment name="L2" freq="0.20" length="2" type="unidir" Rmetal="0" Cmetal="0">
      <mux name="L2_mux"/>
      <sb type="pattern">1 1 1</sb>
      <cb type="pattern">1 1</cb>
    </segment>
    <segment name="L4" freq="0.80" length="4" type="unidir" Rmetal="0" Cmetal="0">
      <mux name="L4_mux"/>
      <sb type="pattern">1 1 1 1 1</sb>
      <cb type="pattern">1 1 1 1</cb>
    </segment>
  </segmentlist>
  <directlist>
    <direct name="carry_chain" from_pin="clb.cout" to_pin="clb.cin" x_offset="0" y_offset="-1" z_offset="0"/>
    <direct name="cascade_down" from_pin="clb.cascdn_o" to_pin="clb.cascdn_i" x_offset="0" y_offset="-1" z_offset="0"/>
    <direct name="cascade_up" from_pin="clb.cascup_o" to_pin="clb.cascup_i" x_offset="0" y_offset="1" z_offset="0"/>
  </directlist>
  <complexblocklist>
    <!-- Define I/O pads begin -->
    <!-- Capacity is a unique property of I/Os, it is the maximum number of I/Os that can be placed at the same (X,Y) location on the FPGA -->
    <!-- Not sure of the area of an I/O (varies widely), and it's not relevant to the design of the FPGA core, so we're setting it to 0. -->
    <pb_type name="io">
      <clock name="clk" num_pins="16"/>
      <!--RESTRUCTURE: move 16:2 mux to seam -->
      <input name="f2a_i" num_pins="1"/>
      <output name="a2f_o" num_pins="1"/>
      <input name="sc_in" num_pins="1"/>
      <!--RESTRUCTURE to 4 scan chains, 5 IOs each-->
      <output name="sc_out" num_pins="1"/>
      <mode name="physical" disable_packing="true">
        <pb_type name="iopad" num_pb="1">
          <input name="sc_in" num_pins="1"/>
          <input name="f2a_i" num_pins="1"/>
          <output name="a2f_o" num_pins="1"/>
          <output name="sc_out" num_pins="1"/>
          <clock name="clk" num_pins="1"/>
          <!--        IO Flop     -->
          <pb_type name="ff" blif_model=".subckt io_scff" num_pb="2">
            <input name="D" num_pins="1" port_class="D"/>
            <input name="SI" num_pins="1"/>
            <output name="Q" num_pins="1" port_class="Q"/>
            <clock name="clk" num_pins="1" port_class="clock"/>
            <T_setup value="1.41766e-10" port="ff[0:0].D" clock="clk"/>
            <T_setup value="1.41766e-10" port="ff[1:1].D" clock="clk"/>
            <T_setup value="1.85353e-10" port="ff.SI" clock="clk"/>
            <T_clock_to_Q max="9.9981e-11" port="ff[0:0].Q" clock="clk"/>
            <T_clock_to_Q max="9.9981e-11" port="ff[1:1].Q" clock="clk"/>
          </pb_type>
          <!--        IO Pad      -->
          <pb_type name="pad" blif_model=".subckt io" num_pb="1">
            <clock name="clk" num_pins="1" port_class="clock"/>
            <input name="outpad" num_pins="1"/>
            <output name="inpad" num_pins="1"/>
          </pb_type>
          <!--        Physical interconnect       -->
          <interconnect>
            <!--        io_pad connections          -->
            <complete name="pad-clk" input="iopad.clk" output="pad.clk"/>
            <direct name="a2f_bypass_direct" input="pad.inpad" output="ff[1:1].D"/>
            <mux name="a2f_bypass_mux" input="pad.inpad ff[1:1].Q" output="iopad.a2f_o">
              <delay_constant max="7.9914e-11" min="6.1938e-11" in_port="pad.inpad" out_port="iopad.a2f_o"/>
              <delay_constant max="4.21695e-10" min="2.32068e-10" in_port="ff[1:1].Q" out_port="iopad.a2f_o"/>
            </mux>
            <direct name="f2a_bypass_direct" input="iopad.f2a_i[0]" output="ff[0:0].D"/>
            <mux name="f2a_bypass_mux" input="iopad.f2a_i[0] ff[0:0].Q" output="pad.outpad">
              <delay_constant max="1.32664e-10" min="7.3674e-11" in_port="iopad.f2a_i" out_port="pad.outpad"/>
              <delay_constant max="6.51792e-10" min="7.5872e-11" in_port="ff[0:0].Q" out_port="pad.outpad"/>
            </mux>
            <!--                Control signal connections               -->
            <direct name="io_clk_in" input="iopad.clk" output="ff[0:0].clk"/>
            <direct name="io_clk_out" input="iopad.clk" output="ff[1:1].clk"/>
            <direct name="ff[0:0]-DI" input="iopad.sc_in" output="ff[0:0].SI"/>
            <direct name="ff[1:1]-DI" input="ff[0:0].Q" output="ff[1:1].SI"/>
            <direct name="iopad-sc_out" input="ff[1:1].Q" output="iopad.sc_out"/>
          </interconnect>
        </pb_type>
        <interconnect>
          <complete name="clks" input="io.clk" output="iopad.clk"/>
          <direct name="direct3" input="io.f2a_i[0]" output="iopad.f2a_i[0]"/>
          <direct name="direct4" input="iopad.a2f_o" output="io.a2f_o[0:0]"/>
          <direct name="direct6" input="io.sc_in" output="iopad.sc_in"/>
          <direct name="direct7" input="iopad.sc_out" output="io.sc_out"/>
        </interconnect>
      </mode>
      <mode name="io_output">
        <pb_type name="io_output" num_pb="1">
          <clock name="clk" num_pins="1"/>
          <input name="f2a_i" num_pins="1"/>
          <pb_type name="ff" num_pb="1">
            <input name="D" num_pins="1"/>
            <output name="Q" num_pins="1"/>
            <clock name="clk" num_pins="1"/>
            <mode name="DFF" disable_packing="false">
              <pb_type name="DFF" blif_model=".subckt dff" num_pb="1">
                <input name="D" num_pins="1"/>
                <output name="Q" num_pins="1"/>
                <clock name="C" num_pins="1"/>
                <T_setup value="1.41766e-10" port="DFF.D" clock="C"/>
                <T_hold value="9.72197e-11" port="DFF.D" clock="C"/>
                <T_clock_to_Q max="9.9981e-11" port="DFF.Q" clock="C"/>
              </pb_type>
              <interconnect>
                <direct input="DFF.Q" name="DFF-Q" output="ff.Q"/>
                <direct input="ff.D" name="DFF-D" output="DFF.D"/>
                <direct input="ff.clk" name="DFF-clk" output="DFF.C"/>
              </interconnect>
            </mode>
            <mode name="DFFN" disable_packing="false">
              <pb_type name="DFFN" blif_model=".subckt dffn" num_pb="1">
                <input name="D" num_pins="1"/>
                <output name="Q" num_pins="1"/>
                <clock name="C" num_pins="1"/>
                <T_setup value="1.41766e-10" port="DFFN.D" clock="C"/>
                <T_hold value="9.72197e-11" port="DFFN.D" clock="C"/>
                <T_clock_to_Q max="9.9981e-11" port="DFFN.Q" clock="C"/>
              </pb_type>
              <interconnect>
                <direct input="DFFN.Q" name="DFFN-Q" output="ff.Q"/>
                <direct input="ff.D" name="DFFN-D" output="DFFN.D"/>
                <direct input="ff.clk" name="DFFN-clk" output="DFFN.C"/>
              </interconnect>
            </mode>
          </pb_type>
          <pb_type name="outpad" blif_model=".output" num_pb="1">
            <input name="outpad" num_pins="1"/>
          </pb_type>
          <interconnect>
            <direct name="ff-clk" input="io_output.clk" output="ff.clk"/>
            <direct name="ff-D" input="io_output.f2a_i[0]" output="ff.D"/>
            <mux name="mux1" input="io_output.f2a_i[0] ff.Q" output="outpad.outpad">
              <delay_constant max="1.32664e-10" min="7.3674e-11" in_port="io_output.f2a_i[0]" out_port="outpad.outpad"/>
              <delay_constant max="6.51792e-10" min="7.5872e-11" in_port="ff.Q" out_port="outpad.outpad"/>
            </mux>
          </interconnect>
        </pb_type>
        <interconnect>
          <complete name="io_output-clk" input="io.clk" output="io_output.clk"/>
          <direct name="io_output-f2a_i" input="io.f2a_i[0]" output="io_output.f2a_i[0]"/>
        </interconnect>
      </mode>
      <mode name="io_input">
        <pb_type name="io_input" num_pb="1">
          <clock name="clk" num_pins="1"/>
          <output name="a2f_o" num_pins="1"/>
          <pb_type name="inpad" blif_model=".input" num_pb="1">
            <output name="inpad" num_pins="1"/>
          </pb_type>
          <pb_type name="ff" num_pb="1">
            <input name="D" num_pins="1" port_class="D"/>
            <output name="Q" num_pins="1" port_class="Q"/>
            <clock name="clk" num_pins="1" port_class="clock"/>
            <mode name="DFF" disable_packing="false">
              <pb_type name="DFF" blif_model=".subckt dff" num_pb="1">
                <input name="D" num_pins="1"/>
                <output name="Q" num_pins="1"/>
                <clock name="C" num_pins="1"/>
                <T_setup value="1.41766e-10" port="DFF.D" clock="C"/>
                <T_hold value="9.72197e-11" port="DFF.D" clock="C"/>
                <T_clock_to_Q max="9.9981e-11" port="DFF.Q" clock="C"/>
              </pb_type>
              <interconnect>
                <direct input="DFF.Q" name="DFF-Q" output="ff.Q"/>
                <direct input="ff.D" name="DFF-D" output="DFF.D"/>
                <direct input="ff.clk" name="DFF-clk" output="DFF.C"/>
              </interconnect>
            </mode>
            <mode name="DFFN" disable_packing="false">
              <pb_type name="DFFN" blif_model=".subckt dffn" num_pb="1">
                <input name="D" num_pins="1"/>
                <output name="Q" num_pins="1"/>
                <clock name="C" num_pins="1"/>
                <T_setup value="1.41766e-10" port="DFFN.D" clock="C"/>
                <T_hold value="9.72197e-11" port="DFFN.D" clock="C"/>
                <T_clock_to_Q max="9.9981e-11" port="DFFN.Q" clock="C"/>
              </pb_type>
              <interconnect>
                <direct input="DFFN.Q" name="DFFN-Q" output="ff.Q"/>
                <direct input="ff.D" name="DFFN-D" output="DFFN.D"/>
                <direct input="ff.clk" name="DFFN-clk" output="DFFN.C"/>
              </interconnect>
            </mode>
          </pb_type>
          <interconnect>
            <direct name="ff-clk" input="io_input.clk" output="ff.clk"/>
            <direct name="ff-D" input="inpad.inpad" output="ff.D">
              <delay_constant max="6.12765e-10" min="6.1938e-11" in_port="inpad.inpad" out_port="ff.D"/>
            </direct>
            <mux name="mux2" input="inpad.inpad ff.Q" output="io_input.a2f_o"/>
          </interconnect>
        </pb_type>
        <interconnect>
          <direct name="io-a2f_o" input="io_input.a2f_o" output="io.a2f_o[0:0]"/>
          <complete name="io_input-clk" input="io.clk" output="io_input.clk"/>
        </interconnect>
      </mode>
    </pb_type>
    <!-- Dummy Io in the right_top/right_bottom corner of the FPGA -->
    <pb_type name="io_corner">
      <clock name="clk" num_pins="16"/>
      <!--RESTRUCTURE: move 16:2 mux to seam -->
      <input name="f2a_i" num_pins="1"/>
      <output name="a2f_o" num_pins="2"/>
      <input name="sc_in" num_pins="1"/>
      <!--RESTRUCTURE to 4 scan chains, 5 IOs each-->
      <output name="sc_out" num_pins="1"/>
      <mode name="physical" disable_packing="true">
        <pb_type name="iopad" num_pb="1">
          <input name="sc_in" num_pins="1"/>
          <input name="f2a_i" num_pins="1"/>
          <output name="a2f_o" num_pins="1"/>
          <output name="sc_out" num_pins="1"/>
          <clock name="clk" num_pins="1"/>
          <!--        IO Flop     -->
          <pb_type name="ff" blif_model=".subckt io_scff" num_pb="2">
            <input name="D" num_pins="1" port_class="D"/>
            <input name="SI" num_pins="1"/>
            <output name="Q" num_pins="1" port_class="Q"/>
            <clock name="clk" num_pins="1" port_class="clock"/>
            <T_setup value="1.41766e-10" port="ff[0:0].D" clock="clk"/>
            <T_setup value="1.41766e-10" port="ff[1:1].D" clock="clk"/>
            <T_setup value="1.85353e-10" port="ff.SI" clock="clk"/>
            <T_clock_to_Q max="9.9981e-11" port="ff[0:0].Q" clock="clk"/>
            <T_clock_to_Q max="9.9981e-11" port="ff[1:1].Q" clock="clk"/>
          </pb_type>
          <!--        IO Pad      -->
          <pb_type name="pad" blif_model=".subckt io" num_pb="1">
            <clock name="clk" num_pins="1" port_class="clock"/>
            <input name="outpad" num_pins="1"/>
            <output name="inpad" num_pins="1"/>
          </pb_type>
          <!--        Physical interconnect       -->
          <interconnect>
            <!--        io_pad connections          -->
            <complete name="pad-clk" input="iopad.clk" output="pad.clk"/>
            <direct name="a2f_bypass_direct" input="pad.inpad" output="ff[1:1].D"/>
            <mux name="a2f_bypass_mux" input="pad.inpad ff[1:1].Q" output="iopad.a2f_o">
              <delay_constant max="7.9914e-11" min="6.1938e-11" in_port="pad.inpad" out_port="iopad.a2f_o"/>
              <delay_constant max="4.21695e-10" min="2.32068e-10" in_port="ff[1:1].Q" out_port="iopad.a2f_o"/>
            </mux>
            <direct name="f2a_bypass_direct" input="iopad.f2a_i[0]" output="ff[0:0].D"/>
            <mux name="f2a_bypass_mux" input="iopad.f2a_i[0] ff[0:0].Q" output="pad.outpad">
              <delay_constant max="1.32664e-10" min="7.3674e-11" in_port="iopad.f2a_i" out_port="pad.outpad"/>
              <delay_constant max="6.51792e-10" min="7.5872e-11" in_port="ff[0:0].Q" out_port="pad.outpad"/>
            </mux>
            <!--                Control signal connections               -->
            <direct name="io_clk_in" input="iopad.clk" output="ff[0:0].clk"/>
            <direct name="io_clk_out" input="iopad.clk" output="ff[1:1].clk"/>
            <direct name="ff[0:0]-DI" input="iopad.sc_in" output="ff[0:0].SI"/>
            <direct name="ff[1:1]-DI" input="ff[0:0].Q" output="ff[1:1].SI"/>
            <direct name="iopad-sc_out" input="ff[1:1].Q" output="iopad.sc_out"/>
          </interconnect>
        </pb_type>
        <interconnect>
          <complete name="clks" input="io_corner.clk" output="iopad.clk"/>
          <direct name="direct3" input="io_corner.f2a_i[0]" output="iopad.f2a_i[0]"/>
          <direct name="direct4" input="iopad.a2f_o" output="io_corner.a2f_o[0:0]"/>
          <direct name="direct4_1" input="iopad.a2f_o" output="io_corner.a2f_o[1:1]"/>
          <direct name="direct6" input="io_corner.sc_in" output="iopad.sc_in"/>
          <direct name="direct7" input="iopad.sc_out" output="io_corner.sc_out"/>
        </interconnect>
      </mode>
      <mode name="io_output">
        <pb_type name="io_output" num_pb="1">
          <clock name="clk" num_pins="1"/>
          <input name="f2a_i" num_pins="1"/>
          <pb_type name="ff" num_pb="1">
            <input name="D" num_pins="1"/>
            <output name="Q" num_pins="1"/>
            <clock name="clk" num_pins="1"/>
            <mode name="DFF" disable_packing="false">
              <pb_type name="DFF" blif_model=".subckt dff" num_pb="1">
                <input name="D" num_pins="1"/>
                <output name="Q" num_pins="1"/>
                <clock name="C" num_pins="1"/>
                <T_setup value="1.41766e-10" port="DFF.D" clock="C"/>
                <T_hold value="9.72197e-11" port="DFF.D" clock="C"/>
                <T_clock_to_Q max="9.9981e-11" port="DFF.Q" clock="C"/>
              </pb_type>
              <interconnect>
                <direct input="DFF.Q" name="DFF-Q" output="ff.Q"/>
                <direct input="ff.D" name="DFF-D" output="DFF.D"/>
                <direct input="ff.clk" name="DFF-clk" output="DFF.C"/>
              </interconnect>
            </mode>
            <mode name="DFFN" disable_packing="false">
              <pb_type name="DFFN" blif_model=".subckt dffn" num_pb="1">
                <input name="D" num_pins="1"/>
                <output name="Q" num_pins="1"/>
                <clock name="C" num_pins="1"/>
                <T_setup value="1.41766e-10" port="DFFN.D" clock="C"/>
                <T_hold value="9.72197e-11" port="DFFN.D" clock="C"/>
                <T_clock_to_Q max="9.9981e-11" port="DFFN.Q" clock="C"/>
              </pb_type>
              <interconnect>
                <direct input="DFFN.Q" name="DFFN-Q" output="ff.Q"/>
                <direct input="ff.D" name="DFFN-D" output="DFFN.D"/>
                <direct input="ff.clk" name="DFFN-clk" output="DFFN.C"/>
              </interconnect>
            </mode>
          </pb_type>
          <pb_type name="outpad" blif_model=".output" num_pb="1">
            <input name="outpad" num_pins="1"/>
          </pb_type>
          <interconnect>
            <direct name="ff-clk" input="io_output.clk" output="ff.clk"/>
            <direct name="ff-D" input="io_output.f2a_i[0]" output="ff.D"/>
            <mux name="mux1" input="io_output.f2a_i[0] ff.Q" output="outpad.outpad">
              <delay_constant max="1.32664e-10" min="7.3674e-11" in_port="io_output.f2a_i[0]" out_port="outpad.outpad"/>
              <delay_constant max="6.51792e-10" min="7.5872e-11" in_port="ff.Q" out_port="outpad.outpad"/>
            </mux>
          </interconnect>
        </pb_type>
        <interconnect>
          <complete name="io_output-clk" input="io_corner.clk" output="io_output.clk"/>
          <direct name="io_output-f2a_i" input="io_corner.f2a_i[0]" output="io_output.f2a_i[0]"/>
        </interconnect>
      </mode>
      <mode name="io_input">
        <pb_type name="io_input" num_pb="1">
          <clock name="clk" num_pins="1"/>
          <output name="a2f_o" num_pins="1"/>
          <pb_type name="inpad" blif_model=".input" num_pb="1">
            <output name="inpad" num_pins="1"/>
          </pb_type>
          <pb_type name="ff" num_pb="1">
            <input name="D" num_pins="1" port_class="D"/>
            <output name="Q" num_pins="1" port_class="Q"/>
            <clock name="clk" num_pins="1" port_class="clock"/>
            <mode name="DFF" disable_packing="false">
              <pb_type name="DFF" blif_model=".subckt dff" num_pb="1">
                <input name="D" num_pins="1"/>
                <output name="Q" num_pins="1"/>
                <clock name="C" num_pins="1"/>
                <T_setup value="1.41766e-10" port="DFF.D" clock="C"/>
                <T_hold value="9.72197e-11" port="DFF.D" clock="C"/>
                <T_clock_to_Q max="9.9981e-11" port="DFF.Q" clock="C"/>
              </pb_type>
              <interconnect>
                <direct input="DFF.Q" name="DFF-Q" output="ff.Q"/>
                <direct input="ff.D" name="DFF-D" output="DFF.D"/>
                <direct input="ff.clk" name="DFF-clk" output="DFF.C"/>
              </interconnect>
            </mode>
            <mode name="DFFN" disable_packing="false">
              <pb_type name="DFFN" blif_model=".subckt dffn" num_pb="1">
                <input name="D" num_pins="1"/>
                <output name="Q" num_pins="1"/>
                <clock name="C" num_pins="1"/>
                <T_setup value="1.41766e-10" port="DFFN.D" clock="C"/>
                <T_hold value="9.72197e-11" port="DFFN.D" clock="C"/>
                <T_clock_to_Q max="9.9981e-11" port="DFFN.Q" clock="C"/>
              </pb_type>
              <interconnect>
                <direct input="DFFN.Q" name="DFFN-Q" output="ff.Q"/>
                <direct input="ff.D" name="DFFN-D" output="DFFN.D"/>
                <direct input="ff.clk" name="DFFN-clk" output="DFFN.C"/>
              </interconnect>
            </mode>
          </pb_type>
          <interconnect>
            <direct name="ff-clk" input="io_input.clk" output="ff.clk"/>
            <direct name="ff-D" input="inpad.inpad" output="ff.D">
              <delay_constant max="6.12765e-10" min="6.1938e-11" in_port="inpad.inpad" out_port="ff.D"/>
            </direct>
            <mux name="mux2" input="inpad.inpad ff.Q" output="io_input.a2f_o"/>
          </interconnect>
        </pb_type>
        <interconnect>
          <direct name="io-a2f_o" input="io_input.a2f_o" output="io_corner.a2f_o[0:0]"/>
          <direct name="io-a2f_o1" input="io_input.a2f_o" output="io_corner.a2f_o[1:1]"/>
          <complete name="io_input-clk" input="io_corner.clk" output="io_input.clk"/>
        </interconnect>
      </mode>
    </pb_type>
    <!-- Define I/O pads ends -->
    <pb_type name="clb">
      <!-- Primary input outputs -->
      <input name="I30" num_pins="12" equivalent="full"/>
      <input name="I20" num_pins="12" equivalent="full"/>
      <input name="I10" num_pins="12" equivalent="full"/>
      <input name="I00" num_pins="12" equivalent="full"/>
      <input name="IS0" num_pins="6" equivalent="full"/>
      <output name="O0" num_pins="24" equivalent="none"/>
      <!-- Carry chain signals -->
      <input name="cin" num_pins="1"/>
      <output name="cout" num_pins="1"/>
      <!-- Cascading signals -->
      <input name="cascdn_i" num_pins="1"/>
      <input name="cascup_i" num_pins="1"/>
      <output name="cascdn_o" num_pins="1"/>
      <output name="cascup_o" num_pins="1"/>
      <!-- Global control signals -->
      <clock name="clk" num_pins="16"/>
      <!-- Scan chain signals -->
      <input name="sc_in" num_pins="2"/>
      <output name="sc_out" num_pins="2"/>
      <pb_type name="fle_wrapper" num_pb="1">
        <input name="II" num_pins="48"/>
        <input name="SS" num_pins="6"/>
        <input name="cin" num_pins="1"/>
        <input name="clk" num_pins="1"/>
        <output name="out" num_pins="24"/>
        <output name="cout" num_pins="1"/>
        <!-- cascade connections -->
        <input name="cascdn_i" num_pins="1"/>
        <input name="cascup_i" num_pins="1"/>
        <output name="cascdn_o" num_pins="1"/>
        <output name="cascup_o" num_pins="1"/>
        <input name="sc_in" num_pins="2"/>
        <output name="sc_out" num_pins="2"/>
        <pb_type name="comb_block" num_pb="1">
          <input name="II" num_pins="48"/>
          <input name="cin" num_pins="1"/>
          <!-- Output ports -->
          <output name="out0" num_pins="8"/>
          <output name="o6" num_pins="8"/>
          <output name="out1" num_pins="8"/>
          <!-- Carry Output ports -->
          <output name="cout" num_pins="1"/>
          <!-- cascade connections -->
          <input name="cascdn_i" num_pins="1"/>
          <input name="cascup_i" num_pins="1"/>
          <output name="cascdn_o" num_pins="1"/>
          <output name="cascup_o" num_pins="1"/>
          <!-- Fracturable LUT logic -->
          <pb_type name="lut_block" num_pb="1">
            <input name="II" num_pins="48"/>
            <output name="o4_up_1" num_pins="8"/>
            <output name="o4_up_2" num_pins="8"/>
            <output name="o4_dn_1" num_pins="8"/>
            <output name="o4_dn_2" num_pins="8"/>
            <output name="o5_up" num_pins="8"/>
            <output name="o5_dn" num_pins="8"/>
            <output name="o6" num_pins="8"/>
            <!-- cascade connections -->
            <input name="cascdn_i" num_pins="1"/>
            <input name="cascup_i" num_pins="1"/>
            <output name="cascdn_o" num_pins="1"/>
            <output name="cascup_o" num_pins="1"/>
            <pb_type name="frac_lut" num_pb="8">
              <input name="II" num_pins="6"/>
              <output name="o4_up_1" num_pins="1"/>
              <output name="o4_up_2" num_pins="1"/>
              <output name="o4_dn_1" num_pins="1"/>
              <output name="o4_dn_2" num_pins="1"/>
              <output name="o5_up" num_pins="1"/>
              <output name="o5_dn" num_pins="1"/>
              <output name="o6" num_pins="1"/>
              <!-- cascade connections -->
              <input name="cascdn_i" num_pins="1"/>
              <input name="cascup_i" num_pins="1"/>
              <output name="cascdn_o" num_pins="1"/>
              <output name="cascup_o" num_pins="1"/>
              <pb_type name="mux_wrap" num_pb="1">
                <input name="II" num_pins="6"/>
                <output name="o4_up_1" num_pins="1"/>
                <output name="o4_up_2" num_pins="1"/>
                <output name="o4_dn_1" num_pins="1"/>
                <output name="o4_dn_2" num_pins="1"/>
                <output name="o5_up" num_pins="1"/>
                <output name="o5_dn" num_pins="1"/>
                <output name="o6" num_pins="1"/>
                <!-- cascade connections -->
                <output name="cascdn_o" num_pins="1"/>
                <output name="cascup_o" num_pins="1"/>
                <!-- lut Physical Mode  -->
                <!-- Start of physical mode of look up table -->
                <mode name="physical" disable_packing="true">
                  <pb_type name="frac_lut6" num_pb="1" blif_model=".subckt frac_lut6">
                    <input name="in" num_pins="6"/>
                    <output name="lut4_out" num_pins="4"/>
                    <output name="lut5_out" num_pins="2"/>
                    <output name="lut6_out" num_pins="1"/>
                    <delay_matrix type="max" in_port="frac_lut6.in" out_port="frac_lut6.lut4_out[0:0]">
                2.89413e-10
                2.36114e-10
                1.86969e-10
                1.40959e-10
                9.0477e-11
                4.2723e-11
            </delay_matrix>
                    <delay_matrix type="min" in_port="frac_lut6.in" out_port="frac_lut6.lut4_out[0:0]">
                2.89413e-10
                1.88394e-10
                1.53191e-10
                1.1799e-10
                7.5834e-11
                3.1878e-11
            </delay_matrix>
                    <delay_matrix type="max" in_port="frac_lut6.in" out_port="frac_lut6.lut4_out[1:1]">
                2.89413e-10
                2.36114e-10
                1.86969e-10
                1.40959e-10
                9.0477e-11
                4.2723e-11
            </delay_matrix>
                    <delay_matrix type="min" in_port="frac_lut6.in" out_port="frac_lut6.lut4_out[1:1]">
                2.89413e-10
                1.88394e-10
                1.53191e-10
                1.1799e-10
                7.5834e-11
                3.1878e-11
            </delay_matrix>
                    <delay_matrix type="max" in_port="frac_lut6.in" out_port="frac_lut6.lut4_out[2:2]">
                2.89413e-10
                2.36114e-10
                1.86969e-10
                1.40959e-10
                9.0477e-11
                4.2723e-11
            </delay_matrix>
                    <delay_matrix type="min" in_port="frac_lut6.in" out_port="frac_lut6.lut4_out[2:2]">
                2.89413e-10
                1.88394e-10
                1.53191e-10
                1.1799e-10
                7.5834e-11
                3.1878e-11
            </delay_matrix>
                    <delay_matrix type="max" in_port="frac_lut6.in" out_port="frac_lut6.lut4_out[3:3]">
                2.89413e-10
                2.36114e-10
                1.86969e-10
                1.40959e-10
                9.0477e-11
                4.2723e-11
            </delay_matrix>
                    <delay_matrix type="min" in_port="frac_lut6.in" out_port="frac_lut6.lut4_out[3:3]">
                2.89413e-10
                1.88394e-10
                1.53191e-10
                1.1799e-10
                7.5834e-11
                3.1878e-11
            </delay_matrix>
                    <delay_matrix type="max" in_port="frac_lut6.in" out_port="frac_lut6.lut5_out[0:0]">
                2.89413e-10
                2.36114e-10
                1.86969e-10
                1.40959e-10
                9.0477e-11
                4.2723e-11
            </delay_matrix>
                    <delay_matrix type="min" in_port="frac_lut6.in" out_port="frac_lut6.lut5_out[0:0]">
                2.89413e-10
                1.88394e-10
                1.53191e-10
                1.1799e-10
                7.5834e-11
                3.1878e-11
            </delay_matrix>
                    <delay_matrix type="max" in_port="frac_lut6.in" out_port="frac_lut6.lut5_out[1:1]">
                2.89413e-10
                2.36114e-10
                1.86969e-10
                1.40959e-10
                9.0477e-11
                4.2723e-11
            </delay_matrix>
                    <delay_matrix type="min" in_port="frac_lut6.in" out_port="frac_lut6.lut5_out[1:1]">
                2.89413e-10
                1.88394e-10
                1.53191e-10
                1.1799e-10
                7.5834e-11
                3.1878e-11
            </delay_matrix>
                    <delay_matrix type="max" in_port="frac_lut6.in" out_port="frac_lut6.lut6_out[0:0]">
                2.89413e-10
                2.36114e-10
                1.86969e-10
                1.40959e-10
                9.0477e-11
                4.2723e-11
            </delay_matrix>
                    <delay_matrix type="min" in_port="frac_lut6.in" out_port="frac_lut6.lut6_out[0:0]">
                2.89413e-10
                1.88394e-10
                1.53191e-10
                1.1799e-10
                7.5834e-11
                3.1878e-11
            </delay_matrix>
                  </pb_type>
                  <interconnect>
                    <direct name="direct_in" input="mux_wrap.II" output="frac_lut6.in"/>
                    <direct name="direct_out5_0" input="frac_lut6.lut5_out[0:0]" output="mux_wrap.o5_up"/>
                    <direct name="direct_out5_1" input="frac_lut6.lut5_out[1:1]" output="mux_wrap.o5_dn"/>
                    <direct name="direct_out4_0" input="frac_lut6.lut4_out[0:0]" output="mux_wrap.o4_up_1"/>
                    <direct name="direct_out4_1" input="frac_lut6.lut4_out[1:1]" output="mux_wrap.o4_up_2"/>
                    <direct name="direct_out4_2" input="frac_lut6.lut4_out[2:2]" output="mux_wrap.o4_dn_1"/>
                    <direct name="direct_out4_3" input="frac_lut6.lut4_out[3:3]" output="mux_wrap.o4_dn_2"/>
                    <direct name="direct_cascdn_o" input="frac_lut6.lut6_out" output="mux_wrap.cascdn_o"/>
                    <direct name="direct_cascup_o" input="frac_lut6.lut6_out" output="mux_wrap.cascup_o"/>
                    <direct name="direct_lut6_out" input="frac_lut6.lut6_out" output="mux_wrap.o6"/>
                  </interconnect>
                </mode>
                <!-- End of physical mode of look up table -->
                <!-- lut6 logical mode -->
                <!-- Start of lut6_mode logical mode -->
                <mode name="lut6_mode" disable_packing="false">
                  <pb_type name="lut6" blif_model=".names" num_pb="1" class="lut">
                    <input name="in" num_pins="6" port_class="lut_in"/>
                    <output name="out" num_pins="1" port_class="lut_out"/>
                    <delay_matrix type="max" in_port="lut6.in" out_port="lut6.out">
                2.89413e-10
                2.36114e-10
                1.86969e-10
                1.40959e-10
                9.0477e-11
                4.2723e-11
            </delay_matrix>
                    <delay_matrix type="min" in_port="lut6.in" out_port="lut6.out">
                2.24236e-10
                1.88394e-10
                1.53191e-10
                1.1799e-10
                7.5834e-11
                3.1878e-11
            </delay_matrix>
                  </pb_type>
                  <interconnect>
                    <direct name="direct_in" input="mux_wrap.II" output="lut6.in"/>
                    <direct name="direct_out6" input="lut6.out" output="mux_wrap.o6"/>
                  </interconnect>
                </mode>
                <!-- End of lut6_mode logical mode -->
                <!-- lut5 logical mode -->
                <!-- Start of lut5_mode logical mode -->
                <mode name="lut5_mode" disable_packing="false">
                  <pb_type name="lut5" blif_model=".names" num_pb="2" class="lut">
                    <input name="in" num_pins="5" port_class="lut_in"/>
                    <output name="out" num_pins="1" port_class="lut_out"/>
                    <delay_matrix type="max" in_port="lut5.in" out_port="lut5.out">
                2.89413e-10
                2.36114e-10
                1.86969e-10
                1.40959e-10
                9.0477e-11
            </delay_matrix>
                    <delay_matrix type="min" in_port="lut5.in" out_port="lut5.out">
                2.24236e-10
                1.88394e-10
                1.53191e-10
                1.1799e-10
                7.5834e-11
            </delay_matrix>
                  </pb_type>
                  <interconnect>
                    <direct name="direct_in_lut4_0" input="mux_wrap.II[4:0]" output="lut5[0].in"/>
                    <direct name="direct_in_lut4_1" input="mux_wrap.II[4:0]" output="lut5[1].in"/>
                    <direct name="direct_out5_up" input="lut5[0:0].out" output="mux_wrap.o5_up"/>
                    <direct name="direct_out5_dn" input="lut5[1:1].out" output="mux_wrap.o5_dn"/>
                  </interconnect>
                </mode>
                <!-- End of lut5_mode logical mode -->
                <!-- lut4 logical mode -->
                <!-- Start of lut4_mode logical mode -->
                <mode name="lut4_mode" disable_packing="false">
                  <pb_type name="lut4" blif_model=".names" num_pb="4" class="lut">
                    <input name="in" num_pins="4" port_class="lut_in"/>
                    <output name="out" num_pins="1" port_class="lut_out"/>
                    <delay_matrix type="max" in_port="lut4.in" out_port="lut4.out">
                2.89413e-10
                2.36114e-10
                1.86969e-10
                1.40959e-10
            </delay_matrix>
                    <delay_matrix type="min" in_port="lut4.in" out_port="lut4.out">
                2.24236e-10
                1.88394e-10
                1.53191e-10
                1.1799e-10
            </delay_matrix>
                  </pb_type>
                  <interconnect>
                    <direct name="direct_in_lut4_0_up" input="mux_wrap.II[3:0]" output="lut4[0:0].in"/>
                    <direct name="direct_in_lut4_1_up" input="mux_wrap.II[3:0]" output="lut4[1:1].in"/>
                    <direct name="direct_in_lut4_0_dn" input="mux_wrap.II[3:0]" output="lut4[2:2].in"/>
                    <direct name="direct_in_lut4_1_dn" input="mux_wrap.II[3:0]" output="lut4[3:3].in"/>
                    <!-- LUT4 outputs -->
                    <direct name="direct_out4_0_up" input="lut4[0:0].out" output="mux_wrap.o4_up_1"/>
                    <direct name="direct_out4_1_up" input="lut4[1:1].out" output="mux_wrap.o4_up_2"/>
                    <direct name="direct_out4_0_dn" input="lut4[2:2].out" output="mux_wrap.o4_dn_1"/>
                    <direct name="direct_out4_1_dn" input="lut4[3:3].out" output="mux_wrap.o4_dn_2"/>
                  </interconnect>
                </mode>
                <!-- End of lut4_mode logical mode -->
              </pb_type>
              <interconnect>
                <!-- inputs -->
                <direct name="direct_II" input="frac_lut.II[4:0]" output="mux_wrap.II[4:0]"/>
                <mux name="mux_lut_in5" input="frac_lut.II[5:5] frac_lut.cascdn_i frac_lut.cascup_i" output="mux_wrap.II[5:5]"/>
                <!-- outputs -->
                <direct name="direct_o4_up_1" input="mux_wrap.o4_up_1" output="frac_lut.o4_up_1"/>
                <direct name="direct_o4_up_2" input="mux_wrap.o4_up_2" output="frac_lut.o4_up_2"/>
                <direct name="direct_o4_dn_1" input="mux_wrap.o4_dn_1" output="frac_lut.o4_dn_1"/>
                <direct name="direct_o4_dn_2" input="mux_wrap.o4_dn_2" output="frac_lut.o4_dn_2"/>
                <!-- <direct name="direct_o5_up"     input="mux_wrap.o5_up"      output="frac_lut.o5_up"/> -->
                <!-- <direct name="direct_o5_dn"     input="mux_wrap.o5_dn"      output="frac_lut.o5_dn"/> -->
                <direct name="direct_o6" input="mux_wrap.o6" output="frac_lut.o6"/>
                <direct name="direct_cascdn_o" input="mux_wrap.cascdn_o" output="frac_lut.cascdn_o"/>
                <direct name="direct_cascup_o" input="mux_wrap.cascup_o" output="frac_lut.cascup_o"/>
              </interconnect>
            </pb_type>
            <interconnect>
              <!-- Input connections -->
              <direct name="direct_in" input="lut_block.II" output="frac_lut.II"/>
              <!-- Output connections -->
              <direct name="direct_out6" input="frac_lut.o6" output="lut_block.o6"/>
              <direct name="direct_out5_0" input="frac_lut.o5_up" output="lut_block.o5_up"/>
              <direct name="direct_out5_1" input="frac_lut.o5_dn" output="lut_block.o5_dn"/>
              <direct name="direct_out4_0" input="frac_lut.o4_up_1" output="lut_block.o4_up_1"/>
              <direct name="direct_out4_1" input="frac_lut.o4_up_2" output="lut_block.o4_up_2"/>
              <direct name="direct_out4_2" input="frac_lut.o4_dn_1" output="lut_block.o4_dn_1"/>
              <direct name="direct_out4_3" input="frac_lut.o4_dn_2" output="lut_block.o4_dn_2"/>
              <!-- Cascade connections -->
              <direct name="direct_casc_dn" input="frac_lut[0:6].cascdn_o" output="frac_lut[1:7].cascup_i"/>
              <direct name="direct_casc_up" input="frac_lut[7:1].cascup_o" output="frac_lut[6:0].cascdn_i"/>
              <direct name="direct_casc_up_out" input="frac_lut[0].cascup_o" output="lut_block.cascup_o"/>
              <direct name="direct_casc_dn_out" input="frac_lut[7].cascdn_o" output="lut_block.cascdn_o"/>
              <direct name="direct_casc_up_in" input="lut_block.cascup_i" output="frac_lut[0].cascup_i"/>
              <direct name="direct_casc_dn_in" input="lut_block.cascdn_i" output="frac_lut[7].cascdn_i"/>
            </interconnect>
          </pb_type>
          <!-- Carry chain logic -->
          <pb_type name="fa_2bit_block" num_pb="1">
            <input name="p_up" num_pins="8"/>
            <input name="g_up" num_pins="8"/>
            <input name="p_dn" num_pins="8"/>
            <input name="g_dn" num_pins="8"/>
            <input name="cin" num_pins="1"/>
            <output name="sum_up" num_pins="8"/>
            <output name="sum_dn" num_pins="8"/>
            <output name="cout" num_pins="1"/>
            <!-- Adder chain physical mode  -->
            <mode name="physical" disable_packing="true">
              <pb_type name="fa_2bit_phy" num_pb="8">
                <input name="p" num_pins="2"/>
                <input name="g" num_pins="2"/>
                <input name="cin" num_pins="1"/>
                <output name="sum" num_pins="2"/>
                <output name="cout" num_pins="1"/>
                <pb_type name="fa_1bit" blif_model=".subckt fa_1bit" num_pb="2">
                  <input name="p" num_pins="1"/>
                  <input name="g" num_pins="1"/>
                  <input name="cin" num_pins="1"/>
                  <output name="sum" num_pins="1"/>
                  <output name="cout" num_pins="1"/>
                  <delay_constant max="5.7898e-11" min="3.659e-11" in_port="fa_1bit.p" out_port="fa_1bit.sum"/>
                  <delay_constant max="1.00716e-10" min="7.0124e-11" in_port="fa_1bit.g" out_port="fa_1bit.sum"/>
                  <delay_constant max="5.7225e-11" min="3.1516e-11" in_port="fa_1bit.cin" out_port="fa_1bit.sum"/>
                  <delay_constant max="1.01721e-10" min="1.01721e-10" in_port="fa_1bit.p" out_port="fa_1bit.cout"/>
                  <delay_constant max="4.3822e-11" min="4.3822e-11" in_port="fa_1bit.g" out_port="fa_1bit.cout"/>
                  <delay_constant max="5.2473e-11" min="4.5839e-11" in_port="fa_1bit.cin" out_port="fa_1bit.cout"/>
                </pb_type>
                <interconnect>
                  <direct name="direct_p_conn" input="fa_2bit_phy.p" output="fa_1bit.p"/>
                  <direct name="direct_g_conn" input="fa_2bit_phy.g" output="fa_1bit.g"/>
                  <direct name="carry_chain_start" input="fa_2bit_phy.cin" output="fa_1bit[0:0].cin"/>
                  <direct name="carry_chain_mid" input="fa_1bit[0:0].cout" output="fa_1bit[1:1].cin"/>
                  <direct name="carry_chain_end" input="fa_1bit[1:1].cout" output="fa_2bit_phy.cout"/>
                  <direct name="direct_sum_out" input="fa_1bit.sum" output="fa_2bit_phy.sum"/>
                </interconnect>
              </pb_type>
              <interconnect>
                <direct name="fa_p_conn_up" input="fa_2bit_block.p_up" output="fa_2bit_phy.p[0:0]"/>
                <direct name="fa_g_conn_up" input="fa_2bit_block.g_up" output="fa_2bit_phy.g[0:0]"/>
                <direct name="fa_p_conn_dn" input="fa_2bit_block.p_dn" output="fa_2bit_phy.p[1:1]"/>
                <direct name="fa_g_conn_dn" input="fa_2bit_block.g_dn" output="fa_2bit_phy.g[1:1]"/>
                <direct name="fa_sum_conn_up" input="fa_2bit_phy.sum[0:0]" output="fa_2bit_block.sum_up"/>
                <direct name="fa_sum_conn_dn" input="fa_2bit_phy.sum[1:1]" output="fa_2bit_block.sum_dn"/>
                <!-- Carry chain connections  -->
                <direct name="carry_chain_start" input="fa_2bit_block.cin" output="fa_2bit_phy[0:0].cin"/>
                <direct name="carry_chain_mid" input="fa_2bit_phy[0:6].cout" output="fa_2bit_phy[1:7].cin"/>
                <direct name="carry_chain_end" input="fa_2bit_phy[7:7].cout" output="fa_2bit_block.cout"/>
              </interconnect>
            </mode>
            <!-- Adder chain logical mode  -->
            <mode name="fa_2bit_mode">
              <pb_type name="fa_2bit" num_pb="8">
                <input name="p" num_pins="2"/>
                <input name="g" num_pins="2"/>
                <input name="cin" num_pins="1"/>
                <output name="sum" num_pins="2"/>
                <output name="cout" num_pins="1"/>
                <pb_type name="fa_1bit" blif_model=".subckt fa_1bit" num_pb="2">
                  <input name="p" num_pins="1"/>
                  <input name="g" num_pins="1"/>
                  <input name="cin" num_pins="1"/>
                  <output name="sum" num_pins="1"/>
                  <output name="cout" num_pins="1"/>
                  <delay_constant max="5.7898e-11" min="3.659e-11" in_port="fa_1bit.p" out_port="fa_1bit.sum"/>
                  <delay_constant max="1.00716e-10" min="7.0124e-11" in_port="fa_1bit.g" out_port="fa_1bit.sum"/>
                  <delay_constant max="5.7225e-11" min="3.1516e-11" in_port="fa_1bit.cin" out_port="fa_1bit.sum"/>
                  <delay_constant max="1.01721e-10" min="1.01721e-10" in_port="fa_1bit.p" out_port="fa_1bit.cout"/>
                  <delay_constant max="4.3822e-11" min="4.3822e-11" in_port="fa_1bit.g" out_port="fa_1bit.cout"/>
                  <delay_constant max="5.2473e-11" min="4.5839e-11" in_port="fa_1bit.cin" out_port="fa_1bit.cout"/>
                </pb_type>
                <interconnect>
                  <direct name="direct_p_conn" input="fa_2bit.p" output="fa_1bit.p"/>
                  <direct name="direct_g_conn" input="fa_2bit.g" output="fa_1bit.g"/>
                  <direct name="carry_chain_start" input="fa_2bit.cin" output="fa_1bit[0:0].cin">
                    <pack_pattern name="carrychain" in_port="fa_2bit.cin" out_port="fa_1bit[0:0].cin"/>
                  </direct>
                  <direct name="carry_chain_mid" input="fa_1bit[0:0].cout" output="fa_1bit[1:1].cin">
                    <pack_pattern name="carrychain" in_port="fa_1bit[0:0].cout" out_port="fa_1bit[1:1].cin"/>
                  </direct>
                  <direct name="carry_chain_end" input="fa_1bit[1:1].cout" output="fa_2bit.cout">
                    <pack_pattern name="carrychain" in_port="fa_1bit[1:1].cout" out_port="fa_2bit.cout"/>
                  </direct>
                  <direct name="direct_sum_out" input="fa_1bit.sum" output="fa_2bit.sum"/>
                </interconnect>
              </pb_type>
              <interconnect>
                <direct name="fa_p_conn_up" input="fa_2bit_block.p_up" output="fa_2bit.p[0:0]"/>
                <direct name="fa_g_conn_up" input="fa_2bit_block.g_up" output="fa_2bit.g[0:0]"/>
                <direct name="fa_p_conn_dn" input="fa_2bit_block.p_dn" output="fa_2bit.p[1:1]"/>
                <direct name="fa_g_conn_dn" input="fa_2bit_block.g_dn" output="fa_2bit.g[1:1]"/>
                <direct name="fa_sum_conn_up" input="fa_2bit.sum[0:0]" output="fa_2bit_block.sum_up"/>
                <direct name="fa_sum_conn_dn" input="fa_2bit.sum[1:1]" output="fa_2bit_block.sum_dn"/>
                <!-- Carry chain connections  -->
                <direct name="carry_chain_start" input="fa_2bit_block.cin" output="fa_2bit[0:0].cin">
                  <pack_pattern name="carrychain" in_port="fa_2bit_block.cin" out_port="fa_2bit[0:0].cin"/>
                </direct>
                <direct name="carry_chain_mid" input="fa_2bit[0:6].cout" output="fa_2bit[1:7].cin">
                  <pack_pattern name="carrychain" in_port="fa_2bit[0:6].cout" out_port="fa_2bit[1:7].cin"/>
                </direct>
                <direct name="carry_chain_end" input="fa_2bit[7:7].cout" output="fa_2bit_block.cout">
                  <pack_pattern name="carrychain" in_port="fa_2bit[7:7].cout" out_port="fa_2bit_block.cout"/>
                </direct>
              </interconnect>
            </mode>
          </pb_type>
          <interconnect>
            <!-- comb_block to lut_block connections -->
            <direct name="direct_II" input="comb_block.II" output="lut_block.II"/>
            <!-- lut_block to comb_block output connections -->
            <direct name="direct_o4_up_1_" input="lut_block.o4_up_1" output="fa_2bit_block.p_up"/>
            <direct name="direct_o4_up_2_" input="lut_block.o4_up_2" output="fa_2bit_block.g_up"/>
            <direct name="direct_o4_dn_1_" input="lut_block.o4_dn_1" output="fa_2bit_block.p_dn"/>
            <direct name="direct_o4_dn_2_" input="lut_block.o4_dn_2" output="fa_2bit_block.g_dn"/>
            <!-- Cascade connections -->
            <direct name="direct_cascdn_i" input="comb_block.cascdn_i" output="lut_block.cascdn_i"/>
            <direct name="direct_cascup_i" input="comb_block.cascup_i" output="lut_block.cascup_i"/>
            <direct name="direct_cascdn_o" input="lut_block.cascdn_o" output="comb_block.cascdn_o"/>
            <direct name="direct_cascup_o" input="lut_block.cascup_o" output="comb_block.cascup_o"/>
            <!--  Carry related -->
            <direct name="direct_cin" input="comb_block.cin" output="fa_2bit_block.cin">
              <pack_pattern name="carrychain" in_port="comb_block.cin" out_port="fa_2bit_block.cin"/>
            </direct>
            <direct name="direct_cout" input="fa_2bit_block.cout" output="comb_block.cout">
              <pack_pattern name="carrychain" in_port="fa_2bit_block.cout" out_port="comb_block.cout"/>
            </direct>
            <direct name="direct_comb_block_o6" input="lut_block.o6" output="comb_block.o6"/>
            <!-- fa_2bit_block to output connections -->
            <mux name="out_mux0_0" input="lut_block.o5_up[0] lut_block.o6[0] fa_2bit_block.sum_up[0]" output="comb_block.out0[0]"/>
            <mux name="out_mux1_0" input="lut_block.o5_dn[0] lut_block.o6[0] fa_2bit_block.sum_dn[0]" output="comb_block.out1[0]"/>
            <mux name="out_mux0_1" input="lut_block.o5_up[1] lut_block.o6[1] fa_2bit_block.sum_up[1]" output="comb_block.out0[1]"/>
            <mux name="out_mux1_1" input="lut_block.o5_dn[1] lut_block.o6[1] fa_2bit_block.sum_dn[1]" output="comb_block.out1[1]"/>
            <mux name="out_mux0_2" input="lut_block.o5_up[2] lut_block.o6[2] fa_2bit_block.sum_up[2]" output="comb_block.out0[2]"/>
            <mux name="out_mux1_2" input="lut_block.o5_dn[2] lut_block.o6[2] fa_2bit_block.sum_dn[2]" output="comb_block.out1[2]"/>
            <mux name="out_mux0_3" input="lut_block.o5_up[3] lut_block.o6[3] fa_2bit_block.sum_up[3]" output="comb_block.out0[3]"/>
            <mux name="out_mux1_3" input="lut_block.o5_dn[3] lut_block.o6[3] fa_2bit_block.sum_dn[3]" output="comb_block.out1[3]"/>
            <mux name="out_mux0_4" input="lut_block.o5_up[4] lut_block.o6[4] fa_2bit_block.sum_up[4]" output="comb_block.out0[4]"/>
            <mux name="out_mux1_4" input="lut_block.o5_dn[4] lut_block.o6[4] fa_2bit_block.sum_dn[4]" output="comb_block.out1[4]"/>
            <mux name="out_mux0_5" input="lut_block.o5_up[5] lut_block.o6[5] fa_2bit_block.sum_up[5]" output="comb_block.out0[5]"/>
            <mux name="out_mux1_5" input="lut_block.o5_dn[5] lut_block.o6[5] fa_2bit_block.sum_dn[5]" output="comb_block.out1[5]"/>
            <mux name="out_mux0_6" input="lut_block.o5_up[6] lut_block.o6[6] fa_2bit_block.sum_up[6]" output="comb_block.out0[6]"/>
            <mux name="out_mux1_6" input="lut_block.o5_dn[6] lut_block.o6[6] fa_2bit_block.sum_dn[6]" output="comb_block.out1[6]"/>
            <mux name="out_mux0_7" input="lut_block.o5_up[7] lut_block.o6[7] fa_2bit_block.sum_up[7]" output="comb_block.out0[7]"/>
            <mux name="out_mux1_7" input="lut_block.o5_dn[7] lut_block.o6[7] fa_2bit_block.sum_dn[7]" output="comb_block.out1[7]"/>
          </interconnect>
        </pb_type>
        <pb_type name="ff_wrap" num_pb="1">
          <input name="o_up" num_pins="8"/>
          <input name="o_dn" num_pins="8"/>
          <input name="reset" num_pins="4"/>
          <input name="enable" num_pins="4"/>
          <clock name="clock" num_pins="1"/>
          <output name="out_up" num_pins="8"/>
          <output name="out_dn" num_pins="8"/>
          <input name="sc_in" num_pins="2"/>
          <output name="sc_out" num_pins="2"/>
          <pb_type name="ff_half" num_pb="2">
            <input name="in" num_pins="8"/>
            <clock name="clock" num_pins="1"/>
            <input name="reset" num_pins="1"/>
            <input name="enable" num_pins="1"/>
            <output name="out" num_pins="8"/>
            <input name="sc_in" num_pins="2"/>
            <output name="sc_out" num_pins="2"/>
            <mode name="physical">
              <pb_type name="flop_quad" num_pb="2">
                <input name="DIN" num_pins="4"/>
                <input name="RESET" num_pins="1"/>
                <input name="ENABLE" num_pins="1"/>
                <clock name="CLOCK" num_pins="1"/>
                <output name="Q" num_pins="4"/>
                <input name="SI" num_pins="1"/>
                <output name="SO" num_pins="1"/>
                <pb_type name="MMFF" num_pb="4" blif_model=".subckt mmff">
                  <input name="D" num_pins="1"/>
                  <input name="R" num_pins="1"/>
                  <input name="E" num_pins="1"/>
                  <clock name="C" num_pins="1"/>
                  <output name="Q" num_pins="1"/>
                  <input name="SI" num_pins="1"/>
                  <output name="SO" num_pins="1"/>
                  <T_setup value="1.41766e-10" port="MMFF.D" clock="C"/>
                  <T_setup value="1.41766e-10" port="MMFF.R" clock="C"/>
                  <T_setup value="1.41766e-10" port="MMFF.E" clock="C"/>
                  <T_hold value="9.72197e-11" port="MMFF.D" clock="C"/>
                  <T_clock_to_Q min="8.6558e-11" max="9.9981e-11" port="MMFF.Q" clock="C"/>
                </pb_type>
                <interconnect>
                  <direct name="direct_din" input="flop_quad.DIN" output="MMFF.D"/>
                  <complete name="direct_reset_up" input="flop_quad.RESET" output="MMFF[3:0].R"/>
                  <complete name="direct_enable_up" input="flop_quad.ENABLE" output="MMFF[3:0].E"/>
                  <complete name="direct_clock" input="flop_quad.CLOCK" output="MMFF.C"/>
                  <direct name="direct_q" input="MMFF.Q" output="flop_quad.Q"/>
                  <direct name="scan0" input="flop_quad.SI" output="MMFF[0].SI"/>
                  <direct name="scan1" input="MMFF[0].SO" output="MMFF[1].SI"/>
                  <direct name="scan2" input="MMFF[1].SO" output="MMFF[2].SI"/>
                  <direct name="scan3" input="MMFF[2].SO" output="MMFF[3].SI"/>
                  <direct name="scan4" input="MMFF[3].SO" output="flop_quad.SO"/>
                </interconnect>
              </pb_type>
              <interconnect>
                <direct name="direct_in" input="ff_half.in" output="flop_quad.DIN"/>
                <complete name="direct_clock" input="ff_half.clock" output="flop_quad.CLOCK"/>
                <complete name="direct_reset" input="ff_half.reset" output="flop_quad.RESET"/>
                <complete name="direct_enable" input="ff_half.enable" output="flop_quad.ENABLE"/>
                <direct name="direct_q" input="flop_quad.Q" output="ff_half.out"/>
                <direct name="sc_in" input="ff_half.sc_in" output="flop_quad.SI"/>
                <direct name="sc_out" input="flop_quad.SO" output="ff_half.sc_out"/>
              </interconnect>
            </mode>
            <mode name="posedge_flop_flop_mode">
              <pb_type name="flop_quad" num_pb="2">
                <input name="DIN" num_pins="4"/>
                <input name="RESET" num_pins="1"/>
                <input name="ENABLE" num_pins="1"/>
                <clock name="CLOCK" num_pins="1"/>
                <output name="Q" num_pins="4"/>
                <mode name="flop_no_reset_no_enable">
                  <pb_type name="DFF" num_pb="4" blif_model=".subckt dff">
                    <input name="D" num_pins="1"/>
                    <clock name="C" num_pins="1"/>
                    <output name="Q" num_pins="1"/>
                    <T_setup value="1.41766e-10" port="DFF.D" clock="C"/>
                    <T_hold value="9.72197e-11" port="DFF.D" clock="C"/>
                    <T_clock_to_Q min="8.6558e-11" max="9.9981e-11" port="DFF.Q" clock="C"/>
                  </pb_type>
                  <interconnect>
                    <direct name="direct_din" input="flop_quad.DIN" output="DFF.D"/>
                    <complete name="direct_clock" input="flop_quad.CLOCK" output="DFF.C"/>
                    <direct name="direct_q" input="DFF.Q" output="flop_quad.Q"/>
                  </interconnect>
                </mode>
                <mode name="no_reset_sync_enable">
                  <pb_type name="DFFE" num_pb="4" blif_model=".subckt dffe">
                    <input name="D" num_pins="1"/>
                    <input name="E" num_pins="1"/>
                    <clock name="C" num_pins="1"/>
                    <output name="Q" num_pins="1"/>
                    <T_setup value="1.41766e-10" port="DFFE.D" clock="C"/>
                    <T_setup value="1.41766e-10" port="DFFE.E" clock="C"/>
                    <T_hold value="9.72197e-11" port="DFFE.D" clock="C"/>
                    <T_clock_to_Q min="8.6558e-11" max="9.9981e-11" port="DFFE.Q" clock="C"/>
                  </pb_type>
                  <interconnect>
                    <direct name="direct_din" input="flop_quad.DIN" output="DFFE.D"/>
                    <complete name="direct_reset" input="flop_quad.ENABLE" output="DFFE.E"/>
                    <complete name="direct_clock" input="flop_quad.CLOCK" output="DFFE.C"/>
                    <direct name="direct_q" input="DFFE.Q" output="flop_quad.Q"/>
                  </interconnect>
                </mode>
                <mode name="sync_reset_sync_enable">
                  <pb_type name="SDFFRE" num_pb="4" blif_model=".subckt sdffre">
                    <input name="D" num_pins="1"/>
                    <input name="R" num_pins="1"/>
                    <input name="E" num_pins="1"/>
                    <clock name="C" num_pins="1"/>
                    <output name="Q" num_pins="1"/>
                    <T_setup value="1.41766e-10" port="SDFFRE.D" clock="C"/>
                    <T_setup value="1.41766e-10" port="SDFFRE.R" clock="C"/>
                    <T_setup value="1.41766e-10" port="SDFFRE.E" clock="C"/>
                    <T_hold value="9.72197e-11" port="SDFFRE.D" clock="C"/>
                    <T_clock_to_Q min="8.6558e-11" max="9.9981e-11" port="SDFFRE.Q" clock="C"/>
                  </pb_type>
                  <interconnect>
                    <direct name="direct_din" input="flop_quad.DIN" output="SDFFRE.D"/>
                    <complete name="direct_reset" input="flop_quad.RESET" output="SDFFRE.R"/>
                    <complete name="direct_enable" input="flop_quad.ENABLE" output="SDFFRE.E"/>
                    <complete name="direct_clock" input="flop_quad.CLOCK" output="SDFFRE.C"/>
                    <direct name="direct_q" input="SDFFRE.Q" output="flop_quad.Q"/>
                  </interconnect>
                </mode>
                <mode name="async_reset_sync_enable">
                  <pb_type name="DFFRE" num_pb="4" blif_model=".subckt dffre">
                    <input name="D" num_pins="1"/>
                    <input name="R" num_pins="1"/>
                    <input name="E" num_pins="1"/>
                    <clock name="C" num_pins="1"/>
                    <output name="Q" num_pins="1"/>
                    <T_setup value="1.41766e-10" port="DFFRE.D" clock="C"/>
                    <T_setup value="1.41766e-10" port="DFFRE.R" clock="C"/>
                    <T_setup value="1.41766e-10" port="DFFRE.E" clock="C"/>
                    <T_hold value="9.72197e-11" port="DFFRE.D" clock="C"/>
                    <T_clock_to_Q min="8.6558e-11" max="9.9981e-11" port="DFFRE.Q" clock="C"/>
                  </pb_type>
                  <interconnect>
                    <direct name="direct_din" input="flop_quad.DIN" output="DFFRE.D"/>
                    <complete name="direct_reset" input="flop_quad.RESET" output="DFFRE.R"/>
                    <complete name="direct_enable" input="flop_quad.ENABLE" output="DFFRE.E"/>
                    <complete name="direct_clock" input="flop_quad.CLOCK" output="DFFRE.C"/>
                    <direct name="direct_q" input="DFFRE.Q" output="flop_quad.Q"/>
                  </interconnect>
                </mode>
                <mode name="sync_reset_no_enable">
                  <pb_type name="SDFF" num_pb="4" blif_model=".subckt sdff">
                    <input name="D" num_pins="1"/>
                    <input name="R" num_pins="1"/>
                    <clock name="C" num_pins="1"/>
                    <output name="Q" num_pins="1"/>
                    <T_setup value="1.41766e-10" port="SDFF.D" clock="C"/>
                    <T_setup value="1.41766e-10" port="SDFF.R" clock="C"/>
                    <T_hold value="9.72197e-11" port="SDFF.D" clock="C"/>
                    <T_clock_to_Q min="8.6558e-11" max="9.9981e-11" port="SDFF.Q" clock="C"/>
                  </pb_type>
                  <interconnect>
                    <direct name="direct_din" input="flop_quad.DIN" output="SDFF.D"/>
                    <complete name="direct_reset" input="flop_quad.RESET" output="SDFF.R"/>
                    <complete name="direct_clock" input="flop_quad.CLOCK" output="SDFF.C"/>
                    <direct name="direct_q" input="SDFF.Q" output="flop_quad.Q"/>
                  </interconnect>
                </mode>
                <mode name="async_reset_no_enable">
                  <pb_type name="DFFR" num_pb="4" blif_model=".subckt dffr">
                    <input name="D" num_pins="1" port_class="D"/>
                    <input name="R" num_pins="1"/>
                    <clock name="C" num_pins="1" port_class="clock"/>
                    <output name="Q" num_pins="1" port_class="Q"/>
                    <T_setup value="1.41766e-10" port="DFFR.D" clock="C"/>
                    <T_setup value="1.41766e-10" port="DFFR.R" clock="C"/>
                    <T_hold value="9.72197e-11" port="DFFR.D" clock="C"/>
                    <T_clock_to_Q min="8.6558e-11" max="9.9981e-11" port="DFFR.Q" clock="C"/>
                  </pb_type>
                  <interconnect>
                    <direct name="direct_din" input="flop_quad.DIN" output="DFFR.D"/>
                    <complete name="direct_reset" input="flop_quad.RESET" output="DFFR.R"/>
                    <complete name="direct_clock" input="flop_quad.CLOCK" output="DFFR.C"/>
                    <direct name="direct_q" input="DFFR.Q" output="flop_quad.Q"/>
                  </interconnect>
                </mode>
              </pb_type>
              <interconnect>
                <direct name="direct_in" input="ff_half.in" output="flop_quad.DIN"/>
                <complete name="direct_clock" input="ff_half.clock" output="flop_quad.CLOCK"/>
                <complete name="direct_reset" input="ff_half.reset" output="flop_quad.RESET"/>
                <complete name="direct_enable" input="ff_half.enable" output="flop_quad.ENABLE"/>
                <direct name="direct_q" input="flop_quad.Q" output="ff_half.out"/>
              </interconnect>
            </mode>
            <mode name="negedge_flop_flop_mode">
              <pb_type name="flop_quad" num_pb="2">
                <input name="DIN" num_pins="4"/>
                <input name="RESET" num_pins="1"/>
                <input name="ENABLE" num_pins="1"/>
                <clock name="CLOCK" num_pins="1"/>
                <output name="Q" num_pins="4"/>
                <mode name="flop_no_reset_no_enable">
                  <pb_type name="DFFN" num_pb="4" blif_model=".subckt dffn">
                    <input name="D" num_pins="1"/>
                    <clock name="C" num_pins="1"/>
                    <output name="Q" num_pins="1"/>
                    <T_setup value="1.41766e-10" port="DFFN.D" clock="C"/>
                    <T_hold value="9.72197e-11" port="DFFN.D" clock="C"/>
                    <T_clock_to_Q min="8.6558e-11" max="9.9981e-11" port="DFFN.Q" clock="C"/>
                  </pb_type>
                  <interconnect>
                    <direct name="direct_din" input="flop_quad.DIN" output="DFFN.D"/>
                    <complete name="direct_clock" input="flop_quad.CLOCK" output="DFFN.C"/>
                    <direct name="direct_q" input="DFFN.Q" output="flop_quad.Q"/>
                  </interconnect>
                </mode>
                <mode name="no_reset_sync_enable">
                  <pb_type name="DFFNE" num_pb="4" blif_model=".subckt dffne">
                    <input name="D" num_pins="1"/>
                    <input name="E" num_pins="1"/>
                    <clock name="C" num_pins="1"/>
                    <output name="Q" num_pins="1"/>
                    <T_setup value="1.41766e-10" port="DFFNE.D" clock="C"/>
                    <T_setup value="1.41766e-10" port="DFFNE.E" clock="C"/>
                    <T_hold value="9.72197e-11" port="DFFNE.D" clock="C"/>
                    <T_clock_to_Q min="8.6558e-11" max="9.9981e-11" port="DFFNE.Q" clock="C"/>
                  </pb_type>
                  <interconnect>
                    <direct name="direct_din" input="flop_quad.DIN" output="DFFNE.D"/>
                    <complete name="direct_reset" input="flop_quad.ENABLE" output="DFFNE.E"/>
                    <complete name="direct_clock" input="flop_quad.CLOCK" output="DFFNE.C"/>
                    <direct name="direct_q" input="DFFNE.Q" output="flop_quad.Q"/>
                  </interconnect>
                </mode>
                <mode name="sync_reset_sync_enable">
                  <pb_type name="SDFFNRE" num_pb="4" blif_model=".subckt sdffnre">
                    <input name="D" num_pins="1"/>
                    <input name="R" num_pins="1"/>
                    <input name="E" num_pins="1"/>
                    <clock name="C" num_pins="1"/>
                    <output name="Q" num_pins="1"/>
                    <T_setup value="1.41766e-10" port="SDFFNRE.D" clock="C"/>
                    <T_setup value="1.41766e-10" port="SDFFNRE.R" clock="C"/>
                    <T_setup value="1.41766e-10" port="SDFFNRE.E" clock="C"/>
                    <T_hold value="9.72197e-11" port="SDFFNRE.D" clock="C"/>
                    <T_clock_to_Q min="8.6558e-11" max="9.9981e-11" port="SDFFNRE.Q" clock="C"/>
                  </pb_type>
                  <interconnect>
                    <direct name="direct_din" input="flop_quad.DIN" output="SDFFNRE.D"/>
                    <complete name="direct_reset" input="flop_quad.RESET" output="SDFFNRE.R"/>
                    <complete name="direct_enable" input="flop_quad.ENABLE" output="SDFFNRE.E"/>
                    <complete name="direct_clock" input="flop_quad.CLOCK" output="SDFFNRE.C"/>
                    <direct name="direct_q" input="SDFFNRE.Q" output="flop_quad.Q"/>
                  </interconnect>
                </mode>
                <mode name="async_reset_sync_enable">
                  <pb_type name="DFFNRE" num_pb="4" blif_model=".subckt dffnre">
                    <input name="D" num_pins="1"/>
                    <input name="R" num_pins="1"/>
                    <input name="E" num_pins="1"/>
                    <clock name="C" num_pins="1"/>
                    <output name="Q" num_pins="1"/>
                    <T_setup value="1.41766e-10" port="DFFNRE.D" clock="C"/>
                    <T_setup value="1.41766e-10" port="DFFNRE.R" clock="C"/>
                    <T_setup value="1.41766e-10" port="DFFNRE.E" clock="C"/>
                    <T_hold value="9.72197e-11" port="DFFNRE.D" clock="C"/>
                    <T_clock_to_Q min="8.6558e-11" max="9.9981e-11" port="DFFNRE.Q" clock="C"/>
                  </pb_type>
                  <interconnect>
                    <direct name="direct_din" input="flop_quad.DIN" output="DFFNRE.D"/>
                    <complete name="direct_reset" input="flop_quad.RESET" output="DFFNRE.R"/>
                    <complete name="direct_enable" input="flop_quad.ENABLE" output="DFFNRE.E"/>
                    <complete name="direct_clock" input="flop_quad.CLOCK" output="DFFNRE.C"/>
                    <direct name="direct_q" input="DFFNRE.Q" output="flop_quad.Q"/>
                  </interconnect>
                </mode>
                <mode name="sync_reset_no_enable">
                  <pb_type name="SDFFN" num_pb="4" blif_model=".subckt sdffn">
                    <input name="D" num_pins="1"/>
                    <input name="R" num_pins="1"/>
                    <clock name="C" num_pins="1"/>
                    <output name="Q" num_pins="1"/>
                    <T_setup value="1.41766e-10" port="SDFFN.D" clock="C"/>
                    <T_setup value="1.41766e-10" port="SDFFN.R" clock="C"/>
                    <T_hold value="9.72197e-11" port="SDFFN.D" clock="C"/>
                    <T_clock_to_Q min="8.6558e-11" max="9.9981e-11" port="SDFFN.Q" clock="C"/>
                  </pb_type>
                  <interconnect>
                    <direct name="direct_din" input="flop_quad.DIN" output="SDFFN.D"/>
                    <complete name="direct_reset" input="flop_quad.RESET" output="SDFFN.R"/>
                    <complete name="direct_clock" input="flop_quad.CLOCK" output="SDFFN.C"/>
                    <direct name="direct_q" input="SDFFN.Q" output="flop_quad.Q"/>
                  </interconnect>
                </mode>
                <mode name="async_reset_no_enable">
                  <pb_type name="DFFNR" num_pb="4" blif_model=".subckt dffnr">
                    <input name="D" num_pins="1" port_class="D"/>
                    <input name="R" num_pins="1"/>
                    <clock name="C" num_pins="1" port_class="clock"/>
                    <output name="Q" num_pins="1" port_class="Q"/>
                    <T_setup value="1.41766e-10" port="DFFNR.D" clock="C"/>
                    <T_setup value="1.41766e-10" port="DFFNR.R" clock="C"/>
                    <T_hold value="9.72197e-11" port="DFFNR.D" clock="C"/>
                    <T_clock_to_Q min="8.6558e-11" max="9.9981e-11" port="DFFNR.Q" clock="C"/>
                  </pb_type>
                  <interconnect>
                    <direct name="direct_din" input="flop_quad.DIN" output="DFFNR.D"/>
                    <complete name="direct_reset" input="flop_quad.RESET" output="DFFNR.R"/>
                    <complete name="direct_clock" input="flop_quad.CLOCK" output="DFFNR.C"/>
                    <direct name="direct_q" input="DFFNR.Q" output="flop_quad.Q"/>
                  </interconnect>
                </mode>
              </pb_type>
              <interconnect>
                <direct name="direct_in" input="ff_half.in" output="flop_quad.DIN"/>
                <complete name="direct_clock" input="ff_half.clock" output="flop_quad.CLOCK"/>
                <complete name="direct_reset" input="ff_half.reset" output="flop_quad.RESET"/>
                <complete name="direct_enable" input="ff_half.enable" output="flop_quad.ENABLE"/>
                <direct name="direct_q" input="flop_quad.Q" output="ff_half.out"/>
              </interconnect>
            </mode>
            <mode name="posedge_flop_latch_mode">
              <pb_type name="flop_quad" num_pb="2">
                <input name="DIN" num_pins="4"/>
                <input name="RESET" num_pins="1"/>
                <input name="ENABLE" num_pins="1"/>
                <clock name="CLOCK" num_pins="1"/>
                <output name="Q" num_pins="4"/>
                <mode name="flop_no_reset_no_enable">
                  <pb_type name="LATCH" num_pb="4" blif_model=".subckt latch">
                    <input name="D" num_pins="1"/>
                    <clock name="G" num_pins="1"/>
                    <output name="Q" num_pins="1"/>
                    <T_setup value="1.41766e-10" port="LATCH.D" clock="G"/>
                    <T_hold value="9.72197e-11" port="LATCH.D" clock="G"/>
                    <T_clock_to_Q min="8.6558e-11" max="9.9981e-11" port="LATCH.Q" clock="G"/>
                  </pb_type>
                  <interconnect>
                    <direct name="direct_din" input="flop_quad.DIN" output="LATCH.D"/>
                    <complete name="direct_clock" input="flop_quad.CLOCK" output="LATCH.G"/>
                    <direct name="direct_q" input="LATCH.Q" output="flop_quad.Q"/>
                  </interconnect>
                </mode>
                <mode name="async_reset_no_enable">
                  <pb_type name="LATCHR" num_pb="4" blif_model=".subckt latchr">
                    <input name="D" num_pins="1" port_class="D"/>
                    <input name="R" num_pins="1"/>
                    <clock name="G" num_pins="1" port_class="clock"/>
                    <output name="Q" num_pins="1" port_class="Q"/>
                    <T_setup value="1.41766e-10" port="LATCHR.D" clock="G"/>
                    <T_setup value="1.41766e-10" port="LATCHR.R" clock="G"/>
                    <T_hold value="9.72197e-11" port="LATCHR.D" clock="G"/>
                    <T_clock_to_Q min="8.6558e-11" max="9.9981e-11" port="LATCHR.Q" clock="G"/>
                  </pb_type>
                  <interconnect>
                    <direct name="direct_din" input="flop_quad.DIN" output="LATCHR.D"/>
                    <complete name="direct_reset" input="flop_quad.RESET" output="LATCHR.R"/>
                    <complete name="direct_clock" input="flop_quad.CLOCK" output="LATCHR.G"/>
                    <direct name="direct_q" input="LATCHR.Q" output="flop_quad.Q"/>
                  </interconnect>
                </mode>
              </pb_type>
              <interconnect>
                <direct name="direct_in" input="ff_half.in" output="flop_quad.DIN"/>
                <complete name="direct_clock" input="ff_half.clock" output="flop_quad.CLOCK"/>
                <complete name="direct_reset" input="ff_half.reset" output="flop_quad.RESET"/>
                <complete name="direct_enable" input="ff_half.enable" output="flop_quad.ENABLE"/>
                <direct name="direct_q" input="flop_quad.Q" output="ff_half.out"/>
              </interconnect>
            </mode>
            <mode name="negedge_flop_latch_mode">
              <pb_type name="flop_quad" num_pb="2">
                <input name="DIN" num_pins="4"/>
                <input name="RESET" num_pins="1"/>
                <input name="ENABLE" num_pins="1"/>
                <clock name="CLOCK" num_pins="1"/>
                <output name="Q" num_pins="4"/>
                <mode name="flop_no_reset_no_enable">
                  <pb_type name="LATCHN" num_pb="4" blif_model=".subckt latchn">
                    <input name="D" num_pins="1"/>
                    <clock name="G" num_pins="1"/>
                    <output name="Q" num_pins="1"/>
                    <T_setup value="1.41766e-10" port="LATCHN.D" clock="G"/>
                    <T_hold value="9.72197e-11" port="LATCHN.D" clock="G"/>
                    <T_clock_to_Q min="8.6558e-11" max="9.9981e-11" port="LATCHN.Q" clock="G"/>
                  </pb_type>
                  <interconnect>
                    <direct name="direct_din" input="flop_quad.DIN" output="LATCHN.D"/>
                    <complete name="direct_clock" input="flop_quad.CLOCK" output="LATCHN.G"/>
                    <direct name="direct_q" input="LATCHN.Q" output="flop_quad.Q"/>
                  </interconnect>
                </mode>
                <mode name="async_reset_no_enable">
                  <pb_type name="LATCHNR" num_pb="4" blif_model=".subckt latchnr">
                    <input name="D" num_pins="1" port_class="D"/>
                    <input name="R" num_pins="1"/>
                    <clock name="G" num_pins="1" port_class="clock"/>
                    <output name="Q" num_pins="1" port_class="Q"/>
                    <T_setup value="1.41766e-10" port="LATCHNR.D" clock="G"/>
                    <T_setup value="1.41766e-10" port="LATCHNR.R" clock="G"/>
                    <T_hold value="9.72197e-11" port="LATCHNR.D" clock="G"/>
                    <T_clock_to_Q min="8.6558e-11" max="9.9981e-11" port="LATCHNR.Q" clock="G"/>
                  </pb_type>
                  <interconnect>
                    <direct name="direct_din" input="flop_quad.DIN" output="LATCHNR.D"/>
                    <complete name="direct_reset" input="flop_quad.RESET" output="LATCHNR.R"/>
                    <complete name="direct_clock" input="flop_quad.CLOCK" output="LATCHNR.G"/>
                    <direct name="direct_q" input="LATCHNR.Q" output="flop_quad.Q"/>
                  </interconnect>
                </mode>
              </pb_type>
              <interconnect>
                <direct name="direct_in" input="ff_half.in" output="flop_quad.DIN"/>
                <complete name="direct_clock" input="ff_half.clock" output="flop_quad.CLOCK"/>
                <complete name="direct_reset" input="ff_half.reset" output="flop_quad.RESET"/>
                <complete name="direct_enable" input="ff_half.enable" output="flop_quad.ENABLE"/>
                <direct name="direct_q" input="flop_quad.Q" output="ff_half.out"/>
              </interconnect>
            </mode>
          </pb_type>
          <interconnect>
            <!-- Input connection -->
            <direct name="sc_in_0_chain" input="ff_half[0].sc_out[0]" output="ff_half[0].sc_in[1]"/>
            <direct name="sc_in_1_chain" input="ff_half[1].sc_out[0]" output="ff_half[1].sc_in[1]"/>
            <direct name="sc_in_0" input="ff_wrap.sc_in[0]" output="ff_half[0].sc_in[0]"/>
            <direct name="sc_in_1" input="ff_wrap.sc_in[1]" output="ff_half[1].sc_in[0]"/>
            <direct name="sc_out_0" input="ff_half[0].sc_out[1]" output="ff_wrap.sc_out[0]"/>
            <direct name="sc_out_1" input="ff_half[1].sc_out[1]" output="ff_wrap.sc_out[1]"/>
            <direct name="odd_input_0" input="ff_wrap.o_up[3:0]" output="ff_half[0].in[3:0]"/>
            <direct name="odd_input_1" input="ff_wrap.o_up[7:4]" output="ff_half[0].in[7:4]"/>
            <direct name="even_input_0" input="ff_wrap.o_dn[3:0]" output="ff_half[1].in[3:0]"/>
            <direct name="even_input_1" input="ff_wrap.o_dn[7:4]" output="ff_half[1].in[7:4]"/>
            <direct name="direct_clock_up" input="ff_wrap.clock[0:0]" output="ff_half[0].clock"/>
            <direct name="direct_clock_dn" input="ff_wrap.clock[0:0]" output="ff_half[1].clock"/>
            <complete name="direct_reset_up" input="ff_wrap.reset[1:0]" output="ff_half[0].reset"/>
            <complete name="direct_reset_dn" input="ff_wrap.reset[3:2]" output="ff_half[1].reset"/>
            <complete name="direct_enable_up" input="ff_wrap.enable[1:0]" output="ff_half[0].enable"/>
            <complete name="direct_enable_dn" input="ff_wrap.enable[3:2]" output="ff_half[1].enable"/>
            <!-- output muxes -->
            <complete name="ff_out_up_0" input="ff_wrap.o_up[0] ff_half[0].out[0]" output="ff_wrap.out_up[0]"/>
            <complete name="ff_out_up_1" input="ff_wrap.o_up[1] ff_half[0].out[1]" output="ff_wrap.out_up[1]"/>
            <complete name="ff_out_up_2" input="ff_wrap.o_up[2] ff_half[0].out[2]" output="ff_wrap.out_up[2]"/>
            <complete name="ff_out_up_3" input="ff_wrap.o_up[3] ff_half[0].out[3]" output="ff_wrap.out_up[3]"/>
            <complete name="ff_out_up_4" input="ff_wrap.o_up[4] ff_half[0].out[4]" output="ff_wrap.out_up[4]"/>
            <complete name="ff_out_up_5" input="ff_wrap.o_up[5] ff_half[0].out[5]" output="ff_wrap.out_up[5]"/>
            <complete name="ff_out_up_6" input="ff_wrap.o_up[6] ff_half[0].out[6]" output="ff_wrap.out_up[6]"/>
            <complete name="ff_out_up_7" input="ff_wrap.o_up[7] ff_half[0].out[7]" output="ff_wrap.out_up[7]"/>
            <complete name="ff_out_dn_0" input="ff_wrap.o_dn[0] ff_half[1].out[0]" output="ff_wrap.out_dn[0]"/>
            <complete name="ff_out_dn_1" input="ff_wrap.o_dn[1] ff_half[1].out[1]" output="ff_wrap.out_dn[1]"/>
            <complete name="ff_out_dn_2" input="ff_wrap.o_dn[2] ff_half[1].out[2]" output="ff_wrap.out_dn[2]"/>
            <complete name="ff_out_dn_3" input="ff_wrap.o_dn[3] ff_half[1].out[3]" output="ff_wrap.out_dn[3]"/>
            <complete name="ff_out_dn_4" input="ff_wrap.o_dn[4] ff_half[1].out[4]" output="ff_wrap.out_dn[4]"/>
            <complete name="ff_out_dn_5" input="ff_wrap.o_dn[5] ff_half[1].out[5]" output="ff_wrap.out_dn[5]"/>
            <complete name="ff_out_dn_6" input="ff_wrap.o_dn[6] ff_half[1].out[6]" output="ff_wrap.out_dn[6]"/>
            <complete name="ff_out_dn_7" input="ff_wrap.o_dn[7] ff_half[1].out[7]" output="ff_wrap.out_dn[7]"/>
          </interconnect>
        </pb_type>
        <interconnect>
          <!-- Input muxing -->
          <direct name="in_direct" input="fle_wrapper.II" output="comb_block.II"/>
          <direct name="clock_mux" input="fle_wrapper.clk" output="ff_wrap.clock"/>
          <complete name="reset_mux" input="fle_wrapper.SS" output="ff_wrap.reset"/>
          <complete name="enable_mux" input="fle_wrapper.SS" output="ff_wrap.enable"/>
          <!-- LUT-to-flop connectivity -->
          <direct name="direct_out0" input="comb_block.out0" output="ff_wrap.o_up"/>
          <direct name="direct_out1" input="comb_block.out1" output="ff_wrap.o_dn"/>
          <!-- Carry chain connections -->
          <direct name="direct_cin" input="fle_wrapper.cin" output="comb_block.cin">
            <pack_pattern name="carrychain" in_port="fle_wrapper.cin" out_port="comb_block.cin"/>
          </direct>
          <direct name="direct_cout" input="comb_block.cout" output="fle_wrapper.cout">
            <pack_pattern name="carrychain" in_port="comb_block.cout" out_port="fle_wrapper.cout"/>
          </direct>
          <!-- Cascade connections -->
          <direct name="direct_cascdn_i" input="fle_wrapper.cascdn_i" output="comb_block.cascdn_i"/>
          <direct name="direct_cascup_i" input="fle_wrapper.cascup_i" output="comb_block.cascup_i"/>
          <direct name="direct_cascdn_o" input="comb_block.cascdn_o" output="fle_wrapper.cascdn_o"/>
          <direct name="direct_cascup_o" input="comb_block.cascup_o" output="fle_wrapper.cascup_o"/>
          <direct name="direct_sc_in" input="fle_wrapper.sc_in" output="ff_wrap.sc_in"/>
          <direct name="direct_sc_out" input="ff_wrap.sc_out" output="fle_wrapper.sc_out"/>
          <!-- Output muxing -->
          <complete name="out_complete_up_0" input="comb_block.out0[0] ff_wrap.out_up[0]" output="fle_wrapper.out[0]"/>
          <complete name="out_complete_dn_0" input="comb_block.out1[0] ff_wrap.out_dn[0]" output="fle_wrapper.out[1]"/>
          <complete name="direct_o6_output_0" input="comb_block.o6[0]" output="fle_wrapper.out[2]"/>
          <complete name="out_complete_up_1" input="comb_block.out0[1] ff_wrap.out_up[1]" output="fle_wrapper.out[3]"/>
          <complete name="out_complete_dn_1" input="comb_block.out1[1] ff_wrap.out_dn[1]" output="fle_wrapper.out[4]"/>
          <complete name="direct_o6_output_1" input="comb_block.o6[1]" output="fle_wrapper.out[5]"/>
          <complete name="out_complete_up_2" input="comb_block.out0[2] ff_wrap.out_up[2]" output="fle_wrapper.out[6]"/>
          <complete name="out_complete_dn_2" input="comb_block.out1[2] ff_wrap.out_dn[2]" output="fle_wrapper.out[7]"/>
          <complete name="direct_o6_output_2" input="comb_block.o6[2]" output="fle_wrapper.out[8]"/>
          <complete name="out_complete_up_3" input="comb_block.out0[3] ff_wrap.out_up[3]" output="fle_wrapper.out[9]"/>
          <complete name="out_complete_dn_3" input="comb_block.out1[3] ff_wrap.out_dn[3]" output="fle_wrapper.out[10]"/>
          <complete name="direct_o6_output_3" input="comb_block.o6[3]" output="fle_wrapper.out[11]"/>
          <complete name="out_complete_up_4" input="comb_block.out0[4] ff_wrap.out_up[4]" output="fle_wrapper.out[12]"/>
          <complete name="out_complete_dn_4" input="comb_block.out1[4] ff_wrap.out_dn[4]" output="fle_wrapper.out[13]"/>
          <complete name="direct_o6_output_4" input="comb_block.o6[4]" output="fle_wrapper.out[14]"/>
          <complete name="out_complete_up_5" input="comb_block.out0[5] ff_wrap.out_up[5]" output="fle_wrapper.out[15]"/>
          <complete name="out_complete_dn_5" input="comb_block.out1[5] ff_wrap.out_dn[5]" output="fle_wrapper.out[16]"/>
          <complete name="direct_o6_output_5" input="comb_block.o6[5]" output="fle_wrapper.out[17]"/>
          <complete name="out_complete_up_6" input="comb_block.out0[6] ff_wrap.out_up[6]" output="fle_wrapper.out[18]"/>
          <complete name="out_complete_dn_6" input="comb_block.out1[6] ff_wrap.out_dn[6]" output="fle_wrapper.out[19]"/>
          <complete name="direct_o6_output_6" input="comb_block.o6[6]" output="fle_wrapper.out[20]"/>
          <complete name="out_complete_up_7" input="comb_block.out0[7] ff_wrap.out_up[7]" output="fle_wrapper.out[21]"/>
          <complete name="out_complete_dn_7" input="comb_block.out1[7] ff_wrap.out_dn[7]" output="fle_wrapper.out[22]"/>
          <complete name="direct_o6_output_7" input="comb_block.o6[7]" output="fle_wrapper.out[23]"/>
        </interconnect>
      </pb_type>
      <interconnect>
        <mux name="II_0_47" input="clb.I10[0] clb.I10[1] clb.I10[2] clb.I10[3] clb.I10[4] clb.I10[5] clb.I10[6] clb.I10[7] clb.I10[8] clb.I10[9] clb.I10[10] clb.I10[11] clb.I20[0] clb.I20[1] clb.I20[2] clb.I20[3] clb.I20[4] clb.I20[5] clb.I20[6] clb.I20[7] clb.I20[8] clb.I20[9] clb.I20[10] clb.I20[11] " output="fle_wrapper.II[47]">
          <delay_constant in_port="clb.I10[0] clb.I10[1] clb.I10[2] clb.I10[3] clb.I10[4] clb.I10[5] clb.I10[6] clb.I10[7] clb.I10[8] clb.I10[9] clb.I10[10] clb.I10[11] clb.I20[0] clb.I20[1] clb.I20[2] clb.I20[3] clb.I20[4] clb.I20[5] clb.I20[6] clb.I20[7] clb.I20[8] clb.I20[9] clb.I20[10] clb.I20[11] " out_port="fle_wrapper.II[47]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_46" input="clb.I00[0] clb.I00[1] clb.I00[2] clb.I00[3] clb.I00[4] clb.I00[5] clb.I00[6] clb.I00[7] clb.I00[8] clb.I00[9] clb.I00[10] clb.I00[11] clb.I30[0] clb.I30[1] clb.I30[2] clb.I30[3] clb.I30[4] clb.I30[5] clb.I30[6] clb.I30[7] clb.I30[8] clb.I30[9] clb.I30[10] clb.I30[11] " output="fle_wrapper.II[46]">
          <delay_constant in_port="clb.I00[0] clb.I00[1] clb.I00[2] clb.I00[3] clb.I00[4] clb.I00[5] clb.I00[6] clb.I00[7] clb.I00[8] clb.I00[9] clb.I00[10] clb.I00[11] clb.I30[0] clb.I30[1] clb.I30[2] clb.I30[3] clb.I30[4] clb.I30[5] clb.I30[6] clb.I30[7] clb.I30[8] clb.I30[9] clb.I30[10] clb.I30[11] " out_port="fle_wrapper.II[46]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_45" input="clb.I10[0] clb.I10[1] clb.I10[2] clb.I10[3] clb.I10[4] clb.I10[5] clb.I10[6] clb.I10[7] clb.I10[8] clb.I10[9] clb.I10[10] clb.I10[11] clb.I30[0] clb.I30[1] clb.I30[2] clb.I30[3] clb.I30[4] clb.I30[5] clb.I30[6] clb.I30[7] clb.I30[8] clb.I30[9] clb.I30[10] clb.I30[11] " output="fle_wrapper.II[45]">
          <delay_constant in_port="clb.I10[0] clb.I10[1] clb.I10[2] clb.I10[3] clb.I10[4] clb.I10[5] clb.I10[6] clb.I10[7] clb.I10[8] clb.I10[9] clb.I10[10] clb.I10[11] clb.I30[0] clb.I30[1] clb.I30[2] clb.I30[3] clb.I30[4] clb.I30[5] clb.I30[6] clb.I30[7] clb.I30[8] clb.I30[9] clb.I30[10] clb.I30[11] " out_port="fle_wrapper.II[45]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_44" input="clb.I00[0] clb.I00[1] clb.I00[2] clb.I00[3] clb.I00[4] clb.I00[5] clb.I00[6] clb.I00[7] clb.I00[8] clb.I00[9] clb.I00[10] clb.I00[11] clb.I20[0] clb.I20[1] clb.I20[2] clb.I20[3] clb.I20[4] clb.I20[5] clb.I20[6] clb.I20[7] clb.I20[8] clb.I20[9] clb.I20[10] clb.I20[11] " output="fle_wrapper.II[44]">
          <delay_constant in_port="clb.I00[0] clb.I00[1] clb.I00[2] clb.I00[3] clb.I00[4] clb.I00[5] clb.I00[6] clb.I00[7] clb.I00[8] clb.I00[9] clb.I00[10] clb.I00[11] clb.I20[0] clb.I20[1] clb.I20[2] clb.I20[3] clb.I20[4] clb.I20[5] clb.I20[6] clb.I20[7] clb.I20[8] clb.I20[9] clb.I20[10] clb.I20[11] " out_port="fle_wrapper.II[44]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_43" input="clb.I10[0] clb.I10[1] clb.I10[2] clb.I10[3] clb.I10[4] clb.I10[5] clb.I10[6] clb.I10[7] clb.I10[8] clb.I10[9] clb.I10[10] clb.I10[11] clb.I20[0] clb.I20[1] clb.I20[2] clb.I20[3] clb.I20[4] clb.I20[5] clb.I20[6] clb.I20[7] clb.I20[8] clb.I20[9] clb.I20[10] clb.I20[11] fle_wrapper.out[2] fle_wrapper.out[5] fle_wrapper.out[8] fle_wrapper.out[11] fle_wrapper.out[14] fle_wrapper.out[17] fle_wrapper.out[20] fle_wrapper.out[23] " output="fle_wrapper.II[43]">
          <delay_constant in_port="clb.I10[0] clb.I10[1] clb.I10[2] clb.I10[3] clb.I10[4] clb.I10[5] clb.I10[6] clb.I10[7] clb.I10[8] clb.I10[9] clb.I10[10] clb.I10[11] clb.I20[0] clb.I20[1] clb.I20[2] clb.I20[3] clb.I20[4] clb.I20[5] clb.I20[6] clb.I20[7] clb.I20[8] clb.I20[9] clb.I20[10] clb.I20[11] fle_wrapper.out[2] fle_wrapper.out[5] fle_wrapper.out[8] fle_wrapper.out[11] fle_wrapper.out[14] fle_wrapper.out[17] fle_wrapper.out[20] fle_wrapper.out[23] " out_port="fle_wrapper.II[43]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_42" input="clb.I00[0] clb.I00[1] clb.I00[2] clb.I00[3] clb.I00[4] clb.I00[5] clb.I00[6] clb.I00[7] clb.I00[8] clb.I00[9] clb.I00[10] clb.I00[11] clb.I30[0] clb.I30[1] clb.I30[2] clb.I30[3] clb.I30[4] clb.I30[5] clb.I30[6] clb.I30[7] clb.I30[8] clb.I30[9] clb.I30[10] clb.I30[11] fle_wrapper.out[2] fle_wrapper.out[5] fle_wrapper.out[8] fle_wrapper.out[11] fle_wrapper.out[14] fle_wrapper.out[17] fle_wrapper.out[20] fle_wrapper.out[23] " output="fle_wrapper.II[42]">
          <delay_constant in_port="clb.I00[0] clb.I00[1] clb.I00[2] clb.I00[3] clb.I00[4] clb.I00[5] clb.I00[6] clb.I00[7] clb.I00[8] clb.I00[9] clb.I00[10] clb.I00[11] clb.I30[0] clb.I30[1] clb.I30[2] clb.I30[3] clb.I30[4] clb.I30[5] clb.I30[6] clb.I30[7] clb.I30[8] clb.I30[9] clb.I30[10] clb.I30[11] fle_wrapper.out[2] fle_wrapper.out[5] fle_wrapper.out[8] fle_wrapper.out[11] fle_wrapper.out[14] fle_wrapper.out[17] fle_wrapper.out[20] fle_wrapper.out[23] " out_port="fle_wrapper.II[42]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_41" input="clb.I10[0] clb.I10[1] clb.I10[2] clb.I10[3] clb.I10[4] clb.I10[5] clb.I10[6] clb.I10[7] clb.I10[8] clb.I10[9] clb.I10[10] clb.I10[11] clb.I20[0] clb.I20[1] clb.I20[2] clb.I20[3] clb.I20[4] clb.I20[5] clb.I20[6] clb.I20[7] clb.I20[8] clb.I20[9] clb.I20[10] clb.I20[11] " output="fle_wrapper.II[41]">
          <delay_constant in_port="clb.I10[0] clb.I10[1] clb.I10[2] clb.I10[3] clb.I10[4] clb.I10[5] clb.I10[6] clb.I10[7] clb.I10[8] clb.I10[9] clb.I10[10] clb.I10[11] clb.I20[0] clb.I20[1] clb.I20[2] clb.I20[3] clb.I20[4] clb.I20[5] clb.I20[6] clb.I20[7] clb.I20[8] clb.I20[9] clb.I20[10] clb.I20[11] " out_port="fle_wrapper.II[41]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_40" input="clb.I00[0] clb.I00[1] clb.I00[2] clb.I00[3] clb.I00[4] clb.I00[5] clb.I00[6] clb.I00[7] clb.I00[8] clb.I00[9] clb.I00[10] clb.I00[11] clb.I30[0] clb.I30[1] clb.I30[2] clb.I30[3] clb.I30[4] clb.I30[5] clb.I30[6] clb.I30[7] clb.I30[8] clb.I30[9] clb.I30[10] clb.I30[11] " output="fle_wrapper.II[40]">
          <delay_constant in_port="clb.I00[0] clb.I00[1] clb.I00[2] clb.I00[3] clb.I00[4] clb.I00[5] clb.I00[6] clb.I00[7] clb.I00[8] clb.I00[9] clb.I00[10] clb.I00[11] clb.I30[0] clb.I30[1] clb.I30[2] clb.I30[3] clb.I30[4] clb.I30[5] clb.I30[6] clb.I30[7] clb.I30[8] clb.I30[9] clb.I30[10] clb.I30[11] " out_port="fle_wrapper.II[40]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_39" input="clb.I10[0] clb.I10[1] clb.I10[2] clb.I10[3] clb.I10[4] clb.I10[5] clb.I10[6] clb.I10[7] clb.I10[8] clb.I10[9] clb.I10[10] clb.I10[11] clb.I30[0] clb.I30[1] clb.I30[2] clb.I30[3] clb.I30[4] clb.I30[5] clb.I30[6] clb.I30[7] clb.I30[8] clb.I30[9] clb.I30[10] clb.I30[11] " output="fle_wrapper.II[39]">
          <delay_constant in_port="clb.I10[0] clb.I10[1] clb.I10[2] clb.I10[3] clb.I10[4] clb.I10[5] clb.I10[6] clb.I10[7] clb.I10[8] clb.I10[9] clb.I10[10] clb.I10[11] clb.I30[0] clb.I30[1] clb.I30[2] clb.I30[3] clb.I30[4] clb.I30[5] clb.I30[6] clb.I30[7] clb.I30[8] clb.I30[9] clb.I30[10] clb.I30[11] " out_port="fle_wrapper.II[39]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_38" input="clb.I00[0] clb.I00[1] clb.I00[2] clb.I00[3] clb.I00[4] clb.I00[5] clb.I00[6] clb.I00[7] clb.I00[8] clb.I00[9] clb.I00[10] clb.I00[11] clb.I20[0] clb.I20[1] clb.I20[2] clb.I20[3] clb.I20[4] clb.I20[5] clb.I20[6] clb.I20[7] clb.I20[8] clb.I20[9] clb.I20[10] clb.I20[11] " output="fle_wrapper.II[38]">
          <delay_constant in_port="clb.I00[0] clb.I00[1] clb.I00[2] clb.I00[3] clb.I00[4] clb.I00[5] clb.I00[6] clb.I00[7] clb.I00[8] clb.I00[9] clb.I00[10] clb.I00[11] clb.I20[0] clb.I20[1] clb.I20[2] clb.I20[3] clb.I20[4] clb.I20[5] clb.I20[6] clb.I20[7] clb.I20[8] clb.I20[9] clb.I20[10] clb.I20[11] " out_port="fle_wrapper.II[38]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_37" input="clb.I10[0] clb.I10[1] clb.I10[2] clb.I10[3] clb.I10[4] clb.I10[5] clb.I10[6] clb.I10[7] clb.I10[8] clb.I10[9] clb.I10[10] clb.I10[11] clb.I20[0] clb.I20[1] clb.I20[2] clb.I20[3] clb.I20[4] clb.I20[5] clb.I20[6] clb.I20[7] clb.I20[8] clb.I20[9] clb.I20[10] clb.I20[11] fle_wrapper.out[2] fle_wrapper.out[5] fle_wrapper.out[8] fle_wrapper.out[11] fle_wrapper.out[14] fle_wrapper.out[17] fle_wrapper.out[20] fle_wrapper.out[23] " output="fle_wrapper.II[37]">
          <delay_constant in_port="clb.I10[0] clb.I10[1] clb.I10[2] clb.I10[3] clb.I10[4] clb.I10[5] clb.I10[6] clb.I10[7] clb.I10[8] clb.I10[9] clb.I10[10] clb.I10[11] clb.I20[0] clb.I20[1] clb.I20[2] clb.I20[3] clb.I20[4] clb.I20[5] clb.I20[6] clb.I20[7] clb.I20[8] clb.I20[9] clb.I20[10] clb.I20[11] fle_wrapper.out[2] fle_wrapper.out[5] fle_wrapper.out[8] fle_wrapper.out[11] fle_wrapper.out[14] fle_wrapper.out[17] fle_wrapper.out[20] fle_wrapper.out[23] " out_port="fle_wrapper.II[37]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_36" input="clb.I00[0] clb.I00[1] clb.I00[2] clb.I00[3] clb.I00[4] clb.I00[5] clb.I00[6] clb.I00[7] clb.I00[8] clb.I00[9] clb.I00[10] clb.I00[11] clb.I30[0] clb.I30[1] clb.I30[2] clb.I30[3] clb.I30[4] clb.I30[5] clb.I30[6] clb.I30[7] clb.I30[8] clb.I30[9] clb.I30[10] clb.I30[11] fle_wrapper.out[2] fle_wrapper.out[5] fle_wrapper.out[8] fle_wrapper.out[11] fle_wrapper.out[14] fle_wrapper.out[17] fle_wrapper.out[20] fle_wrapper.out[23] " output="fle_wrapper.II[36]">
          <delay_constant in_port="clb.I00[0] clb.I00[1] clb.I00[2] clb.I00[3] clb.I00[4] clb.I00[5] clb.I00[6] clb.I00[7] clb.I00[8] clb.I00[9] clb.I00[10] clb.I00[11] clb.I30[0] clb.I30[1] clb.I30[2] clb.I30[3] clb.I30[4] clb.I30[5] clb.I30[6] clb.I30[7] clb.I30[8] clb.I30[9] clb.I30[10] clb.I30[11] fle_wrapper.out[2] fle_wrapper.out[5] fle_wrapper.out[8] fle_wrapper.out[11] fle_wrapper.out[14] fle_wrapper.out[17] fle_wrapper.out[20] fle_wrapper.out[23] " out_port="fle_wrapper.II[36]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_35" input="clb.I10[0] clb.I10[1] clb.I10[2] clb.I10[3] clb.I10[4] clb.I10[5] clb.I10[6] clb.I10[7] clb.I10[8] clb.I10[9] clb.I10[10] clb.I10[11] clb.I20[0] clb.I20[1] clb.I20[2] clb.I20[3] clb.I20[4] clb.I20[5] clb.I20[6] clb.I20[7] clb.I20[8] clb.I20[9] clb.I20[10] clb.I20[11] " output="fle_wrapper.II[35]">
          <delay_constant in_port="clb.I10[0] clb.I10[1] clb.I10[2] clb.I10[3] clb.I10[4] clb.I10[5] clb.I10[6] clb.I10[7] clb.I10[8] clb.I10[9] clb.I10[10] clb.I10[11] clb.I20[0] clb.I20[1] clb.I20[2] clb.I20[3] clb.I20[4] clb.I20[5] clb.I20[6] clb.I20[7] clb.I20[8] clb.I20[9] clb.I20[10] clb.I20[11] " out_port="fle_wrapper.II[35]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_34" input="clb.I00[0] clb.I00[1] clb.I00[2] clb.I00[3] clb.I00[4] clb.I00[5] clb.I00[6] clb.I00[7] clb.I00[8] clb.I00[9] clb.I00[10] clb.I00[11] clb.I30[0] clb.I30[1] clb.I30[2] clb.I30[3] clb.I30[4] clb.I30[5] clb.I30[6] clb.I30[7] clb.I30[8] clb.I30[9] clb.I30[10] clb.I30[11] " output="fle_wrapper.II[34]">
          <delay_constant in_port="clb.I00[0] clb.I00[1] clb.I00[2] clb.I00[3] clb.I00[4] clb.I00[5] clb.I00[6] clb.I00[7] clb.I00[8] clb.I00[9] clb.I00[10] clb.I00[11] clb.I30[0] clb.I30[1] clb.I30[2] clb.I30[3] clb.I30[4] clb.I30[5] clb.I30[6] clb.I30[7] clb.I30[8] clb.I30[9] clb.I30[10] clb.I30[11] " out_port="fle_wrapper.II[34]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_33" input="clb.I10[0] clb.I10[1] clb.I10[2] clb.I10[3] clb.I10[4] clb.I10[5] clb.I10[6] clb.I10[7] clb.I10[8] clb.I10[9] clb.I10[10] clb.I10[11] clb.I30[0] clb.I30[1] clb.I30[2] clb.I30[3] clb.I30[4] clb.I30[5] clb.I30[6] clb.I30[7] clb.I30[8] clb.I30[9] clb.I30[10] clb.I30[11] " output="fle_wrapper.II[33]">
          <delay_constant in_port="clb.I10[0] clb.I10[1] clb.I10[2] clb.I10[3] clb.I10[4] clb.I10[5] clb.I10[6] clb.I10[7] clb.I10[8] clb.I10[9] clb.I10[10] clb.I10[11] clb.I30[0] clb.I30[1] clb.I30[2] clb.I30[3] clb.I30[4] clb.I30[5] clb.I30[6] clb.I30[7] clb.I30[8] clb.I30[9] clb.I30[10] clb.I30[11] " out_port="fle_wrapper.II[33]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_32" input="clb.I00[0] clb.I00[1] clb.I00[2] clb.I00[3] clb.I00[4] clb.I00[5] clb.I00[6] clb.I00[7] clb.I00[8] clb.I00[9] clb.I00[10] clb.I00[11] clb.I20[0] clb.I20[1] clb.I20[2] clb.I20[3] clb.I20[4] clb.I20[5] clb.I20[6] clb.I20[7] clb.I20[8] clb.I20[9] clb.I20[10] clb.I20[11] " output="fle_wrapper.II[32]">
          <delay_constant in_port="clb.I00[0] clb.I00[1] clb.I00[2] clb.I00[3] clb.I00[4] clb.I00[5] clb.I00[6] clb.I00[7] clb.I00[8] clb.I00[9] clb.I00[10] clb.I00[11] clb.I20[0] clb.I20[1] clb.I20[2] clb.I20[3] clb.I20[4] clb.I20[5] clb.I20[6] clb.I20[7] clb.I20[8] clb.I20[9] clb.I20[10] clb.I20[11] " out_port="fle_wrapper.II[32]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_31" input="clb.I10[0] clb.I10[1] clb.I10[2] clb.I10[3] clb.I10[4] clb.I10[5] clb.I10[6] clb.I10[7] clb.I10[8] clb.I10[9] clb.I10[10] clb.I10[11] clb.I20[0] clb.I20[1] clb.I20[2] clb.I20[3] clb.I20[4] clb.I20[5] clb.I20[6] clb.I20[7] clb.I20[8] clb.I20[9] clb.I20[10] clb.I20[11] fle_wrapper.out[2] fle_wrapper.out[5] fle_wrapper.out[8] fle_wrapper.out[11] fle_wrapper.out[14] fle_wrapper.out[17] fle_wrapper.out[20] fle_wrapper.out[23] " output="fle_wrapper.II[31]">
          <delay_constant in_port="clb.I10[0] clb.I10[1] clb.I10[2] clb.I10[3] clb.I10[4] clb.I10[5] clb.I10[6] clb.I10[7] clb.I10[8] clb.I10[9] clb.I10[10] clb.I10[11] clb.I20[0] clb.I20[1] clb.I20[2] clb.I20[3] clb.I20[4] clb.I20[5] clb.I20[6] clb.I20[7] clb.I20[8] clb.I20[9] clb.I20[10] clb.I20[11] fle_wrapper.out[2] fle_wrapper.out[5] fle_wrapper.out[8] fle_wrapper.out[11] fle_wrapper.out[14] fle_wrapper.out[17] fle_wrapper.out[20] fle_wrapper.out[23] " out_port="fle_wrapper.II[31]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_30" input="clb.I00[0] clb.I00[1] clb.I00[2] clb.I00[3] clb.I00[4] clb.I00[5] clb.I00[6] clb.I00[7] clb.I00[8] clb.I00[9] clb.I00[10] clb.I00[11] clb.I30[0] clb.I30[1] clb.I30[2] clb.I30[3] clb.I30[4] clb.I30[5] clb.I30[6] clb.I30[7] clb.I30[8] clb.I30[9] clb.I30[10] clb.I30[11] fle_wrapper.out[2] fle_wrapper.out[5] fle_wrapper.out[8] fle_wrapper.out[11] fle_wrapper.out[14] fle_wrapper.out[17] fle_wrapper.out[20] fle_wrapper.out[23] " output="fle_wrapper.II[30]">
          <delay_constant in_port="clb.I00[0] clb.I00[1] clb.I00[2] clb.I00[3] clb.I00[4] clb.I00[5] clb.I00[6] clb.I00[7] clb.I00[8] clb.I00[9] clb.I00[10] clb.I00[11] clb.I30[0] clb.I30[1] clb.I30[2] clb.I30[3] clb.I30[4] clb.I30[5] clb.I30[6] clb.I30[7] clb.I30[8] clb.I30[9] clb.I30[10] clb.I30[11] fle_wrapper.out[2] fle_wrapper.out[5] fle_wrapper.out[8] fle_wrapper.out[11] fle_wrapper.out[14] fle_wrapper.out[17] fle_wrapper.out[20] fle_wrapper.out[23] " out_port="fle_wrapper.II[30]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_29" input="clb.I10[0] clb.I10[1] clb.I10[2] clb.I10[3] clb.I10[4] clb.I10[5] clb.I10[6] clb.I10[7] clb.I10[8] clb.I10[9] clb.I10[10] clb.I10[11] clb.I20[0] clb.I20[1] clb.I20[2] clb.I20[3] clb.I20[4] clb.I20[5] clb.I20[6] clb.I20[7] clb.I20[8] clb.I20[9] clb.I20[10] clb.I20[11] " output="fle_wrapper.II[29]">
          <delay_constant in_port="clb.I10[0] clb.I10[1] clb.I10[2] clb.I10[3] clb.I10[4] clb.I10[5] clb.I10[6] clb.I10[7] clb.I10[8] clb.I10[9] clb.I10[10] clb.I10[11] clb.I20[0] clb.I20[1] clb.I20[2] clb.I20[3] clb.I20[4] clb.I20[5] clb.I20[6] clb.I20[7] clb.I20[8] clb.I20[9] clb.I20[10] clb.I20[11] " out_port="fle_wrapper.II[29]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_28" input="clb.I00[0] clb.I00[1] clb.I00[2] clb.I00[3] clb.I00[4] clb.I00[5] clb.I00[6] clb.I00[7] clb.I00[8] clb.I00[9] clb.I00[10] clb.I00[11] clb.I30[0] clb.I30[1] clb.I30[2] clb.I30[3] clb.I30[4] clb.I30[5] clb.I30[6] clb.I30[7] clb.I30[8] clb.I30[9] clb.I30[10] clb.I30[11] " output="fle_wrapper.II[28]">
          <delay_constant in_port="clb.I00[0] clb.I00[1] clb.I00[2] clb.I00[3] clb.I00[4] clb.I00[5] clb.I00[6] clb.I00[7] clb.I00[8] clb.I00[9] clb.I00[10] clb.I00[11] clb.I30[0] clb.I30[1] clb.I30[2] clb.I30[3] clb.I30[4] clb.I30[5] clb.I30[6] clb.I30[7] clb.I30[8] clb.I30[9] clb.I30[10] clb.I30[11] " out_port="fle_wrapper.II[28]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_27" input="clb.I10[0] clb.I10[1] clb.I10[2] clb.I10[3] clb.I10[4] clb.I10[5] clb.I10[6] clb.I10[7] clb.I10[8] clb.I10[9] clb.I10[10] clb.I10[11] clb.I30[0] clb.I30[1] clb.I30[2] clb.I30[3] clb.I30[4] clb.I30[5] clb.I30[6] clb.I30[7] clb.I30[8] clb.I30[9] clb.I30[10] clb.I30[11] " output="fle_wrapper.II[27]">
          <delay_constant in_port="clb.I10[0] clb.I10[1] clb.I10[2] clb.I10[3] clb.I10[4] clb.I10[5] clb.I10[6] clb.I10[7] clb.I10[8] clb.I10[9] clb.I10[10] clb.I10[11] clb.I30[0] clb.I30[1] clb.I30[2] clb.I30[3] clb.I30[4] clb.I30[5] clb.I30[6] clb.I30[7] clb.I30[8] clb.I30[9] clb.I30[10] clb.I30[11] " out_port="fle_wrapper.II[27]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_26" input="clb.I00[0] clb.I00[1] clb.I00[2] clb.I00[3] clb.I00[4] clb.I00[5] clb.I00[6] clb.I00[7] clb.I00[8] clb.I00[9] clb.I00[10] clb.I00[11] clb.I20[0] clb.I20[1] clb.I20[2] clb.I20[3] clb.I20[4] clb.I20[5] clb.I20[6] clb.I20[7] clb.I20[8] clb.I20[9] clb.I20[10] clb.I20[11] " output="fle_wrapper.II[26]">
          <delay_constant in_port="clb.I00[0] clb.I00[1] clb.I00[2] clb.I00[3] clb.I00[4] clb.I00[5] clb.I00[6] clb.I00[7] clb.I00[8] clb.I00[9] clb.I00[10] clb.I00[11] clb.I20[0] clb.I20[1] clb.I20[2] clb.I20[3] clb.I20[4] clb.I20[5] clb.I20[6] clb.I20[7] clb.I20[8] clb.I20[9] clb.I20[10] clb.I20[11] " out_port="fle_wrapper.II[26]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_25" input="clb.I10[0] clb.I10[1] clb.I10[2] clb.I10[3] clb.I10[4] clb.I10[5] clb.I10[6] clb.I10[7] clb.I10[8] clb.I10[9] clb.I10[10] clb.I10[11] clb.I20[0] clb.I20[1] clb.I20[2] clb.I20[3] clb.I20[4] clb.I20[5] clb.I20[6] clb.I20[7] clb.I20[8] clb.I20[9] clb.I20[10] clb.I20[11] fle_wrapper.out[2] fle_wrapper.out[5] fle_wrapper.out[8] fle_wrapper.out[11] fle_wrapper.out[14] fle_wrapper.out[17] fle_wrapper.out[20] fle_wrapper.out[23] " output="fle_wrapper.II[25]">
          <delay_constant in_port="clb.I10[0] clb.I10[1] clb.I10[2] clb.I10[3] clb.I10[4] clb.I10[5] clb.I10[6] clb.I10[7] clb.I10[8] clb.I10[9] clb.I10[10] clb.I10[11] clb.I20[0] clb.I20[1] clb.I20[2] clb.I20[3] clb.I20[4] clb.I20[5] clb.I20[6] clb.I20[7] clb.I20[8] clb.I20[9] clb.I20[10] clb.I20[11] fle_wrapper.out[2] fle_wrapper.out[5] fle_wrapper.out[8] fle_wrapper.out[11] fle_wrapper.out[14] fle_wrapper.out[17] fle_wrapper.out[20] fle_wrapper.out[23] " out_port="fle_wrapper.II[25]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_24" input="clb.I00[0] clb.I00[1] clb.I00[2] clb.I00[3] clb.I00[4] clb.I00[5] clb.I00[6] clb.I00[7] clb.I00[8] clb.I00[9] clb.I00[10] clb.I00[11] clb.I30[0] clb.I30[1] clb.I30[2] clb.I30[3] clb.I30[4] clb.I30[5] clb.I30[6] clb.I30[7] clb.I30[8] clb.I30[9] clb.I30[10] clb.I30[11] fle_wrapper.out[2] fle_wrapper.out[5] fle_wrapper.out[8] fle_wrapper.out[11] fle_wrapper.out[14] fle_wrapper.out[17] fle_wrapper.out[20] fle_wrapper.out[23] " output="fle_wrapper.II[24]">
          <delay_constant in_port="clb.I00[0] clb.I00[1] clb.I00[2] clb.I00[3] clb.I00[4] clb.I00[5] clb.I00[6] clb.I00[7] clb.I00[8] clb.I00[9] clb.I00[10] clb.I00[11] clb.I30[0] clb.I30[1] clb.I30[2] clb.I30[3] clb.I30[4] clb.I30[5] clb.I30[6] clb.I30[7] clb.I30[8] clb.I30[9] clb.I30[10] clb.I30[11] fle_wrapper.out[2] fle_wrapper.out[5] fle_wrapper.out[8] fle_wrapper.out[11] fle_wrapper.out[14] fle_wrapper.out[17] fle_wrapper.out[20] fle_wrapper.out[23] " out_port="fle_wrapper.II[24]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_23" input="clb.I10[0] clb.I10[1] clb.I10[2] clb.I10[3] clb.I10[4] clb.I10[5] clb.I10[6] clb.I10[7] clb.I10[8] clb.I10[9] clb.I10[10] clb.I10[11] clb.I20[0] clb.I20[1] clb.I20[2] clb.I20[3] clb.I20[4] clb.I20[5] clb.I20[6] clb.I20[7] clb.I20[8] clb.I20[9] clb.I20[10] clb.I20[11] " output="fle_wrapper.II[23]">
          <delay_constant in_port="clb.I10[0] clb.I10[1] clb.I10[2] clb.I10[3] clb.I10[4] clb.I10[5] clb.I10[6] clb.I10[7] clb.I10[8] clb.I10[9] clb.I10[10] clb.I10[11] clb.I20[0] clb.I20[1] clb.I20[2] clb.I20[3] clb.I20[4] clb.I20[5] clb.I20[6] clb.I20[7] clb.I20[8] clb.I20[9] clb.I20[10] clb.I20[11] " out_port="fle_wrapper.II[23]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_22" input="clb.I00[0] clb.I00[1] clb.I00[2] clb.I00[3] clb.I00[4] clb.I00[5] clb.I00[6] clb.I00[7] clb.I00[8] clb.I00[9] clb.I00[10] clb.I00[11] clb.I30[0] clb.I30[1] clb.I30[2] clb.I30[3] clb.I30[4] clb.I30[5] clb.I30[6] clb.I30[7] clb.I30[8] clb.I30[9] clb.I30[10] clb.I30[11] " output="fle_wrapper.II[22]">
          <delay_constant in_port="clb.I00[0] clb.I00[1] clb.I00[2] clb.I00[3] clb.I00[4] clb.I00[5] clb.I00[6] clb.I00[7] clb.I00[8] clb.I00[9] clb.I00[10] clb.I00[11] clb.I30[0] clb.I30[1] clb.I30[2] clb.I30[3] clb.I30[4] clb.I30[5] clb.I30[6] clb.I30[7] clb.I30[8] clb.I30[9] clb.I30[10] clb.I30[11] " out_port="fle_wrapper.II[22]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_21" input="clb.I10[0] clb.I10[1] clb.I10[2] clb.I10[3] clb.I10[4] clb.I10[5] clb.I10[6] clb.I10[7] clb.I10[8] clb.I10[9] clb.I10[10] clb.I10[11] clb.I30[0] clb.I30[1] clb.I30[2] clb.I30[3] clb.I30[4] clb.I30[5] clb.I30[6] clb.I30[7] clb.I30[8] clb.I30[9] clb.I30[10] clb.I30[11] " output="fle_wrapper.II[21]">
          <delay_constant in_port="clb.I10[0] clb.I10[1] clb.I10[2] clb.I10[3] clb.I10[4] clb.I10[5] clb.I10[6] clb.I10[7] clb.I10[8] clb.I10[9] clb.I10[10] clb.I10[11] clb.I30[0] clb.I30[1] clb.I30[2] clb.I30[3] clb.I30[4] clb.I30[5] clb.I30[6] clb.I30[7] clb.I30[8] clb.I30[9] clb.I30[10] clb.I30[11] " out_port="fle_wrapper.II[21]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_20" input="clb.I00[0] clb.I00[1] clb.I00[2] clb.I00[3] clb.I00[4] clb.I00[5] clb.I00[6] clb.I00[7] clb.I00[8] clb.I00[9] clb.I00[10] clb.I00[11] clb.I20[0] clb.I20[1] clb.I20[2] clb.I20[3] clb.I20[4] clb.I20[5] clb.I20[6] clb.I20[7] clb.I20[8] clb.I20[9] clb.I20[10] clb.I20[11] " output="fle_wrapper.II[20]">
          <delay_constant in_port="clb.I00[0] clb.I00[1] clb.I00[2] clb.I00[3] clb.I00[4] clb.I00[5] clb.I00[6] clb.I00[7] clb.I00[8] clb.I00[9] clb.I00[10] clb.I00[11] clb.I20[0] clb.I20[1] clb.I20[2] clb.I20[3] clb.I20[4] clb.I20[5] clb.I20[6] clb.I20[7] clb.I20[8] clb.I20[9] clb.I20[10] clb.I20[11] " out_port="fle_wrapper.II[20]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_19" input="clb.I10[0] clb.I10[1] clb.I10[2] clb.I10[3] clb.I10[4] clb.I10[5] clb.I10[6] clb.I10[7] clb.I10[8] clb.I10[9] clb.I10[10] clb.I10[11] clb.I20[0] clb.I20[1] clb.I20[2] clb.I20[3] clb.I20[4] clb.I20[5] clb.I20[6] clb.I20[7] clb.I20[8] clb.I20[9] clb.I20[10] clb.I20[11] fle_wrapper.out[2] fle_wrapper.out[5] fle_wrapper.out[8] fle_wrapper.out[11] fle_wrapper.out[14] fle_wrapper.out[17] fle_wrapper.out[20] fle_wrapper.out[23] " output="fle_wrapper.II[19]">
          <delay_constant in_port="clb.I10[0] clb.I10[1] clb.I10[2] clb.I10[3] clb.I10[4] clb.I10[5] clb.I10[6] clb.I10[7] clb.I10[8] clb.I10[9] clb.I10[10] clb.I10[11] clb.I20[0] clb.I20[1] clb.I20[2] clb.I20[3] clb.I20[4] clb.I20[5] clb.I20[6] clb.I20[7] clb.I20[8] clb.I20[9] clb.I20[10] clb.I20[11] fle_wrapper.out[2] fle_wrapper.out[5] fle_wrapper.out[8] fle_wrapper.out[11] fle_wrapper.out[14] fle_wrapper.out[17] fle_wrapper.out[20] fle_wrapper.out[23] " out_port="fle_wrapper.II[19]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_18" input="clb.I00[0] clb.I00[1] clb.I00[2] clb.I00[3] clb.I00[4] clb.I00[5] clb.I00[6] clb.I00[7] clb.I00[8] clb.I00[9] clb.I00[10] clb.I00[11] clb.I30[0] clb.I30[1] clb.I30[2] clb.I30[3] clb.I30[4] clb.I30[5] clb.I30[6] clb.I30[7] clb.I30[8] clb.I30[9] clb.I30[10] clb.I30[11] fle_wrapper.out[2] fle_wrapper.out[5] fle_wrapper.out[8] fle_wrapper.out[11] fle_wrapper.out[14] fle_wrapper.out[17] fle_wrapper.out[20] fle_wrapper.out[23] " output="fle_wrapper.II[18]">
          <delay_constant in_port="clb.I00[0] clb.I00[1] clb.I00[2] clb.I00[3] clb.I00[4] clb.I00[5] clb.I00[6] clb.I00[7] clb.I00[8] clb.I00[9] clb.I00[10] clb.I00[11] clb.I30[0] clb.I30[1] clb.I30[2] clb.I30[3] clb.I30[4] clb.I30[5] clb.I30[6] clb.I30[7] clb.I30[8] clb.I30[9] clb.I30[10] clb.I30[11] fle_wrapper.out[2] fle_wrapper.out[5] fle_wrapper.out[8] fle_wrapper.out[11] fle_wrapper.out[14] fle_wrapper.out[17] fle_wrapper.out[20] fle_wrapper.out[23] " out_port="fle_wrapper.II[18]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_17" input="clb.I10[0] clb.I10[1] clb.I10[2] clb.I10[3] clb.I10[4] clb.I10[5] clb.I10[6] clb.I10[7] clb.I10[8] clb.I10[9] clb.I10[10] clb.I10[11] clb.I20[0] clb.I20[1] clb.I20[2] clb.I20[3] clb.I20[4] clb.I20[5] clb.I20[6] clb.I20[7] clb.I20[8] clb.I20[9] clb.I20[10] clb.I20[11] " output="fle_wrapper.II[17]">
          <delay_constant in_port="clb.I10[0] clb.I10[1] clb.I10[2] clb.I10[3] clb.I10[4] clb.I10[5] clb.I10[6] clb.I10[7] clb.I10[8] clb.I10[9] clb.I10[10] clb.I10[11] clb.I20[0] clb.I20[1] clb.I20[2] clb.I20[3] clb.I20[4] clb.I20[5] clb.I20[6] clb.I20[7] clb.I20[8] clb.I20[9] clb.I20[10] clb.I20[11] " out_port="fle_wrapper.II[17]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_16" input="clb.I00[0] clb.I00[1] clb.I00[2] clb.I00[3] clb.I00[4] clb.I00[5] clb.I00[6] clb.I00[7] clb.I00[8] clb.I00[9] clb.I00[10] clb.I00[11] clb.I30[0] clb.I30[1] clb.I30[2] clb.I30[3] clb.I30[4] clb.I30[5] clb.I30[6] clb.I30[7] clb.I30[8] clb.I30[9] clb.I30[10] clb.I30[11] " output="fle_wrapper.II[16]">
          <delay_constant in_port="clb.I00[0] clb.I00[1] clb.I00[2] clb.I00[3] clb.I00[4] clb.I00[5] clb.I00[6] clb.I00[7] clb.I00[8] clb.I00[9] clb.I00[10] clb.I00[11] clb.I30[0] clb.I30[1] clb.I30[2] clb.I30[3] clb.I30[4] clb.I30[5] clb.I30[6] clb.I30[7] clb.I30[8] clb.I30[9] clb.I30[10] clb.I30[11] " out_port="fle_wrapper.II[16]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_15" input="clb.I10[0] clb.I10[1] clb.I10[2] clb.I10[3] clb.I10[4] clb.I10[5] clb.I10[6] clb.I10[7] clb.I10[8] clb.I10[9] clb.I10[10] clb.I10[11] clb.I30[0] clb.I30[1] clb.I30[2] clb.I30[3] clb.I30[4] clb.I30[5] clb.I30[6] clb.I30[7] clb.I30[8] clb.I30[9] clb.I30[10] clb.I30[11] " output="fle_wrapper.II[15]">
          <delay_constant in_port="clb.I10[0] clb.I10[1] clb.I10[2] clb.I10[3] clb.I10[4] clb.I10[5] clb.I10[6] clb.I10[7] clb.I10[8] clb.I10[9] clb.I10[10] clb.I10[11] clb.I30[0] clb.I30[1] clb.I30[2] clb.I30[3] clb.I30[4] clb.I30[5] clb.I30[6] clb.I30[7] clb.I30[8] clb.I30[9] clb.I30[10] clb.I30[11] " out_port="fle_wrapper.II[15]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_14" input="clb.I00[0] clb.I00[1] clb.I00[2] clb.I00[3] clb.I00[4] clb.I00[5] clb.I00[6] clb.I00[7] clb.I00[8] clb.I00[9] clb.I00[10] clb.I00[11] clb.I20[0] clb.I20[1] clb.I20[2] clb.I20[3] clb.I20[4] clb.I20[5] clb.I20[6] clb.I20[7] clb.I20[8] clb.I20[9] clb.I20[10] clb.I20[11] " output="fle_wrapper.II[14]">
          <delay_constant in_port="clb.I00[0] clb.I00[1] clb.I00[2] clb.I00[3] clb.I00[4] clb.I00[5] clb.I00[6] clb.I00[7] clb.I00[8] clb.I00[9] clb.I00[10] clb.I00[11] clb.I20[0] clb.I20[1] clb.I20[2] clb.I20[3] clb.I20[4] clb.I20[5] clb.I20[6] clb.I20[7] clb.I20[8] clb.I20[9] clb.I20[10] clb.I20[11] " out_port="fle_wrapper.II[14]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_13" input="clb.I10[0] clb.I10[1] clb.I10[2] clb.I10[3] clb.I10[4] clb.I10[5] clb.I10[6] clb.I10[7] clb.I10[8] clb.I10[9] clb.I10[10] clb.I10[11] clb.I20[0] clb.I20[1] clb.I20[2] clb.I20[3] clb.I20[4] clb.I20[5] clb.I20[6] clb.I20[7] clb.I20[8] clb.I20[9] clb.I20[10] clb.I20[11] fle_wrapper.out[2] fle_wrapper.out[5] fle_wrapper.out[8] fle_wrapper.out[11] fle_wrapper.out[14] fle_wrapper.out[17] fle_wrapper.out[20] fle_wrapper.out[23] " output="fle_wrapper.II[13]">
          <delay_constant in_port="clb.I10[0] clb.I10[1] clb.I10[2] clb.I10[3] clb.I10[4] clb.I10[5] clb.I10[6] clb.I10[7] clb.I10[8] clb.I10[9] clb.I10[10] clb.I10[11] clb.I20[0] clb.I20[1] clb.I20[2] clb.I20[3] clb.I20[4] clb.I20[5] clb.I20[6] clb.I20[7] clb.I20[8] clb.I20[9] clb.I20[10] clb.I20[11] fle_wrapper.out[2] fle_wrapper.out[5] fle_wrapper.out[8] fle_wrapper.out[11] fle_wrapper.out[14] fle_wrapper.out[17] fle_wrapper.out[20] fle_wrapper.out[23] " out_port="fle_wrapper.II[13]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_12" input="clb.I00[0] clb.I00[1] clb.I00[2] clb.I00[3] clb.I00[4] clb.I00[5] clb.I00[6] clb.I00[7] clb.I00[8] clb.I00[9] clb.I00[10] clb.I00[11] clb.I30[0] clb.I30[1] clb.I30[2] clb.I30[3] clb.I30[4] clb.I30[5] clb.I30[6] clb.I30[7] clb.I30[8] clb.I30[9] clb.I30[10] clb.I30[11] fle_wrapper.out[2] fle_wrapper.out[5] fle_wrapper.out[8] fle_wrapper.out[11] fle_wrapper.out[14] fle_wrapper.out[17] fle_wrapper.out[20] fle_wrapper.out[23] " output="fle_wrapper.II[12]">
          <delay_constant in_port="clb.I00[0] clb.I00[1] clb.I00[2] clb.I00[3] clb.I00[4] clb.I00[5] clb.I00[6] clb.I00[7] clb.I00[8] clb.I00[9] clb.I00[10] clb.I00[11] clb.I30[0] clb.I30[1] clb.I30[2] clb.I30[3] clb.I30[4] clb.I30[5] clb.I30[6] clb.I30[7] clb.I30[8] clb.I30[9] clb.I30[10] clb.I30[11] fle_wrapper.out[2] fle_wrapper.out[5] fle_wrapper.out[8] fle_wrapper.out[11] fle_wrapper.out[14] fle_wrapper.out[17] fle_wrapper.out[20] fle_wrapper.out[23] " out_port="fle_wrapper.II[12]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_11" input="clb.I10[0] clb.I10[1] clb.I10[2] clb.I10[3] clb.I10[4] clb.I10[5] clb.I10[6] clb.I10[7] clb.I10[8] clb.I10[9] clb.I10[10] clb.I10[11] clb.I20[0] clb.I20[1] clb.I20[2] clb.I20[3] clb.I20[4] clb.I20[5] clb.I20[6] clb.I20[7] clb.I20[8] clb.I20[9] clb.I20[10] clb.I20[11] " output="fle_wrapper.II[11]">
          <delay_constant in_port="clb.I10[0] clb.I10[1] clb.I10[2] clb.I10[3] clb.I10[4] clb.I10[5] clb.I10[6] clb.I10[7] clb.I10[8] clb.I10[9] clb.I10[10] clb.I10[11] clb.I20[0] clb.I20[1] clb.I20[2] clb.I20[3] clb.I20[4] clb.I20[5] clb.I20[6] clb.I20[7] clb.I20[8] clb.I20[9] clb.I20[10] clb.I20[11] " out_port="fle_wrapper.II[11]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_10" input="clb.I00[0] clb.I00[1] clb.I00[2] clb.I00[3] clb.I00[4] clb.I00[5] clb.I00[6] clb.I00[7] clb.I00[8] clb.I00[9] clb.I00[10] clb.I00[11] clb.I30[0] clb.I30[1] clb.I30[2] clb.I30[3] clb.I30[4] clb.I30[5] clb.I30[6] clb.I30[7] clb.I30[8] clb.I30[9] clb.I30[10] clb.I30[11] " output="fle_wrapper.II[10]">
          <delay_constant in_port="clb.I00[0] clb.I00[1] clb.I00[2] clb.I00[3] clb.I00[4] clb.I00[5] clb.I00[6] clb.I00[7] clb.I00[8] clb.I00[9] clb.I00[10] clb.I00[11] clb.I30[0] clb.I30[1] clb.I30[2] clb.I30[3] clb.I30[4] clb.I30[5] clb.I30[6] clb.I30[7] clb.I30[8] clb.I30[9] clb.I30[10] clb.I30[11] " out_port="fle_wrapper.II[10]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_9" input="clb.I10[0] clb.I10[1] clb.I10[2] clb.I10[3] clb.I10[4] clb.I10[5] clb.I10[6] clb.I10[7] clb.I10[8] clb.I10[9] clb.I10[10] clb.I10[11] clb.I30[0] clb.I30[1] clb.I30[2] clb.I30[3] clb.I30[4] clb.I30[5] clb.I30[6] clb.I30[7] clb.I30[8] clb.I30[9] clb.I30[10] clb.I30[11] " output="fle_wrapper.II[9]">
          <delay_constant in_port="clb.I10[0] clb.I10[1] clb.I10[2] clb.I10[3] clb.I10[4] clb.I10[5] clb.I10[6] clb.I10[7] clb.I10[8] clb.I10[9] clb.I10[10] clb.I10[11] clb.I30[0] clb.I30[1] clb.I30[2] clb.I30[3] clb.I30[4] clb.I30[5] clb.I30[6] clb.I30[7] clb.I30[8] clb.I30[9] clb.I30[10] clb.I30[11] " out_port="fle_wrapper.II[9]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_8" input="clb.I00[0] clb.I00[1] clb.I00[2] clb.I00[3] clb.I00[4] clb.I00[5] clb.I00[6] clb.I00[7] clb.I00[8] clb.I00[9] clb.I00[10] clb.I00[11] clb.I20[0] clb.I20[1] clb.I20[2] clb.I20[3] clb.I20[4] clb.I20[5] clb.I20[6] clb.I20[7] clb.I20[8] clb.I20[9] clb.I20[10] clb.I20[11] " output="fle_wrapper.II[8]">
          <delay_constant in_port="clb.I00[0] clb.I00[1] clb.I00[2] clb.I00[3] clb.I00[4] clb.I00[5] clb.I00[6] clb.I00[7] clb.I00[8] clb.I00[9] clb.I00[10] clb.I00[11] clb.I20[0] clb.I20[1] clb.I20[2] clb.I20[3] clb.I20[4] clb.I20[5] clb.I20[6] clb.I20[7] clb.I20[8] clb.I20[9] clb.I20[10] clb.I20[11] " out_port="fle_wrapper.II[8]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_7" input="clb.I10[0] clb.I10[1] clb.I10[2] clb.I10[3] clb.I10[4] clb.I10[5] clb.I10[6] clb.I10[7] clb.I10[8] clb.I10[9] clb.I10[10] clb.I10[11] clb.I20[0] clb.I20[1] clb.I20[2] clb.I20[3] clb.I20[4] clb.I20[5] clb.I20[6] clb.I20[7] clb.I20[8] clb.I20[9] clb.I20[10] clb.I20[11] fle_wrapper.out[2] fle_wrapper.out[5] fle_wrapper.out[8] fle_wrapper.out[11] fle_wrapper.out[14] fle_wrapper.out[17] fle_wrapper.out[20] fle_wrapper.out[23] " output="fle_wrapper.II[7]">
          <delay_constant in_port="clb.I10[0] clb.I10[1] clb.I10[2] clb.I10[3] clb.I10[4] clb.I10[5] clb.I10[6] clb.I10[7] clb.I10[8] clb.I10[9] clb.I10[10] clb.I10[11] clb.I20[0] clb.I20[1] clb.I20[2] clb.I20[3] clb.I20[4] clb.I20[5] clb.I20[6] clb.I20[7] clb.I20[8] clb.I20[9] clb.I20[10] clb.I20[11] fle_wrapper.out[2] fle_wrapper.out[5] fle_wrapper.out[8] fle_wrapper.out[11] fle_wrapper.out[14] fle_wrapper.out[17] fle_wrapper.out[20] fle_wrapper.out[23] " out_port="fle_wrapper.II[7]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_6" input="clb.I00[0] clb.I00[1] clb.I00[2] clb.I00[3] clb.I00[4] clb.I00[5] clb.I00[6] clb.I00[7] clb.I00[8] clb.I00[9] clb.I00[10] clb.I00[11] clb.I30[0] clb.I30[1] clb.I30[2] clb.I30[3] clb.I30[4] clb.I30[5] clb.I30[6] clb.I30[7] clb.I30[8] clb.I30[9] clb.I30[10] clb.I30[11] fle_wrapper.out[2] fle_wrapper.out[5] fle_wrapper.out[8] fle_wrapper.out[11] fle_wrapper.out[14] fle_wrapper.out[17] fle_wrapper.out[20] fle_wrapper.out[23] " output="fle_wrapper.II[6]">
          <delay_constant in_port="clb.I00[0] clb.I00[1] clb.I00[2] clb.I00[3] clb.I00[4] clb.I00[5] clb.I00[6] clb.I00[7] clb.I00[8] clb.I00[9] clb.I00[10] clb.I00[11] clb.I30[0] clb.I30[1] clb.I30[2] clb.I30[3] clb.I30[4] clb.I30[5] clb.I30[6] clb.I30[7] clb.I30[8] clb.I30[9] clb.I30[10] clb.I30[11] fle_wrapper.out[2] fle_wrapper.out[5] fle_wrapper.out[8] fle_wrapper.out[11] fle_wrapper.out[14] fle_wrapper.out[17] fle_wrapper.out[20] fle_wrapper.out[23] " out_port="fle_wrapper.II[6]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_5" input="clb.I10[0] clb.I10[1] clb.I10[2] clb.I10[3] clb.I10[4] clb.I10[5] clb.I10[6] clb.I10[7] clb.I10[8] clb.I10[9] clb.I10[10] clb.I10[11] clb.I20[0] clb.I20[1] clb.I20[2] clb.I20[3] clb.I20[4] clb.I20[5] clb.I20[6] clb.I20[7] clb.I20[8] clb.I20[9] clb.I20[10] clb.I20[11] " output="fle_wrapper.II[5]">
          <delay_constant in_port="clb.I10[0] clb.I10[1] clb.I10[2] clb.I10[3] clb.I10[4] clb.I10[5] clb.I10[6] clb.I10[7] clb.I10[8] clb.I10[9] clb.I10[10] clb.I10[11] clb.I20[0] clb.I20[1] clb.I20[2] clb.I20[3] clb.I20[4] clb.I20[5] clb.I20[6] clb.I20[7] clb.I20[8] clb.I20[9] clb.I20[10] clb.I20[11] " out_port="fle_wrapper.II[5]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_4" input="clb.I00[0] clb.I00[1] clb.I00[2] clb.I00[3] clb.I00[4] clb.I00[5] clb.I00[6] clb.I00[7] clb.I00[8] clb.I00[9] clb.I00[10] clb.I00[11] clb.I30[0] clb.I30[1] clb.I30[2] clb.I30[3] clb.I30[4] clb.I30[5] clb.I30[6] clb.I30[7] clb.I30[8] clb.I30[9] clb.I30[10] clb.I30[11] " output="fle_wrapper.II[4]">
          <delay_constant in_port="clb.I00[0] clb.I00[1] clb.I00[2] clb.I00[3] clb.I00[4] clb.I00[5] clb.I00[6] clb.I00[7] clb.I00[8] clb.I00[9] clb.I00[10] clb.I00[11] clb.I30[0] clb.I30[1] clb.I30[2] clb.I30[3] clb.I30[4] clb.I30[5] clb.I30[6] clb.I30[7] clb.I30[8] clb.I30[9] clb.I30[10] clb.I30[11] " out_port="fle_wrapper.II[4]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_3" input="clb.I10[0] clb.I10[1] clb.I10[2] clb.I10[3] clb.I10[4] clb.I10[5] clb.I10[6] clb.I10[7] clb.I10[8] clb.I10[9] clb.I10[10] clb.I10[11] clb.I30[0] clb.I30[1] clb.I30[2] clb.I30[3] clb.I30[4] clb.I30[5] clb.I30[6] clb.I30[7] clb.I30[8] clb.I30[9] clb.I30[10] clb.I30[11] " output="fle_wrapper.II[3]">
          <delay_constant in_port="clb.I10[0] clb.I10[1] clb.I10[2] clb.I10[3] clb.I10[4] clb.I10[5] clb.I10[6] clb.I10[7] clb.I10[8] clb.I10[9] clb.I10[10] clb.I10[11] clb.I30[0] clb.I30[1] clb.I30[2] clb.I30[3] clb.I30[4] clb.I30[5] clb.I30[6] clb.I30[7] clb.I30[8] clb.I30[9] clb.I30[10] clb.I30[11] " out_port="fle_wrapper.II[3]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_2" input="clb.I00[0] clb.I00[1] clb.I00[2] clb.I00[3] clb.I00[4] clb.I00[5] clb.I00[6] clb.I00[7] clb.I00[8] clb.I00[9] clb.I00[10] clb.I00[11] clb.I20[0] clb.I20[1] clb.I20[2] clb.I20[3] clb.I20[4] clb.I20[5] clb.I20[6] clb.I20[7] clb.I20[8] clb.I20[9] clb.I20[10] clb.I20[11] " output="fle_wrapper.II[2]">
          <delay_constant in_port="clb.I00[0] clb.I00[1] clb.I00[2] clb.I00[3] clb.I00[4] clb.I00[5] clb.I00[6] clb.I00[7] clb.I00[8] clb.I00[9] clb.I00[10] clb.I00[11] clb.I20[0] clb.I20[1] clb.I20[2] clb.I20[3] clb.I20[4] clb.I20[5] clb.I20[6] clb.I20[7] clb.I20[8] clb.I20[9] clb.I20[10] clb.I20[11] " out_port="fle_wrapper.II[2]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_1" input="clb.I10[0] clb.I10[1] clb.I10[2] clb.I10[3] clb.I10[4] clb.I10[5] clb.I10[6] clb.I10[7] clb.I10[8] clb.I10[9] clb.I10[10] clb.I10[11] clb.I20[0] clb.I20[1] clb.I20[2] clb.I20[3] clb.I20[4] clb.I20[5] clb.I20[6] clb.I20[7] clb.I20[8] clb.I20[9] clb.I20[10] clb.I20[11] fle_wrapper.out[2] fle_wrapper.out[5] fle_wrapper.out[8] fle_wrapper.out[11] fle_wrapper.out[14] fle_wrapper.out[17] fle_wrapper.out[20] fle_wrapper.out[23] " output="fle_wrapper.II[1]">
          <delay_constant in_port="clb.I10[0] clb.I10[1] clb.I10[2] clb.I10[3] clb.I10[4] clb.I10[5] clb.I10[6] clb.I10[7] clb.I10[8] clb.I10[9] clb.I10[10] clb.I10[11] clb.I20[0] clb.I20[1] clb.I20[2] clb.I20[3] clb.I20[4] clb.I20[5] clb.I20[6] clb.I20[7] clb.I20[8] clb.I20[9] clb.I20[10] clb.I20[11] fle_wrapper.out[2] fle_wrapper.out[5] fle_wrapper.out[8] fle_wrapper.out[11] fle_wrapper.out[14] fle_wrapper.out[17] fle_wrapper.out[20] fle_wrapper.out[23] " out_port="fle_wrapper.II[1]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_0" input="clb.I00[0] clb.I00[1] clb.I00[2] clb.I00[3] clb.I00[4] clb.I00[5] clb.I00[6] clb.I00[7] clb.I00[8] clb.I00[9] clb.I00[10] clb.I00[11] clb.I30[0] clb.I30[1] clb.I30[2] clb.I30[3] clb.I30[4] clb.I30[5] clb.I30[6] clb.I30[7] clb.I30[8] clb.I30[9] clb.I30[10] clb.I30[11] fle_wrapper.out[2] fle_wrapper.out[5] fle_wrapper.out[8] fle_wrapper.out[11] fle_wrapper.out[14] fle_wrapper.out[17] fle_wrapper.out[20] fle_wrapper.out[23] " output="fle_wrapper.II[0]">
          <delay_constant in_port="clb.I00[0] clb.I00[1] clb.I00[2] clb.I00[3] clb.I00[4] clb.I00[5] clb.I00[6] clb.I00[7] clb.I00[8] clb.I00[9] clb.I00[10] clb.I00[11] clb.I30[0] clb.I30[1] clb.I30[2] clb.I30[3] clb.I30[4] clb.I30[5] clb.I30[6] clb.I30[7] clb.I30[8] clb.I30[9] clb.I30[10] clb.I30[11] fle_wrapper.out[2] fle_wrapper.out[5] fle_wrapper.out[8] fle_wrapper.out[11] fle_wrapper.out[14] fle_wrapper.out[17] fle_wrapper.out[20] fle_wrapper.out[23] " out_port="fle_wrapper.II[0]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <complete name="is0_inputs" input="clb.IS0" output="fle_wrapper.SS"/>
        <direct name="outputs" input="fle_wrapper.out" output="clb.O0"/>
        <!-- Clock muxes -->
        <complete name="clock_muxes" input="clb.clk" output="fle_wrapper.clk"/>
        <!-- Carry chain connections -->
        <direct name="direct_cin" input="clb.cin" output="fle_wrapper.cin">
          <pack_pattern name="carrychain" in_port="clb.cin" out_port="fle_wrapper.cin"/>
        </direct>
        <direct name="direct_cout" input="fle_wrapper.cout" output="clb.cout">
          <pack_pattern name="carrychain" in_port="fle_wrapper.cout" out_port="clb.cout"/>
        </direct>
        <!-- Cascade connections -->
        <direct name="direct_sc_in" input="clb.sc_in" output="fle_wrapper.sc_in"/>
        <direct name="direct_sc_out" input="fle_wrapper.sc_out" output="clb.sc_out"/>
      </interconnect>
    </pb_type>
    <!-- Define tile level dsp begin -->
    <pb_type name="dsp">
      <input name="I00" num_pins="12" equivalent="full"/>
      <input name="I10" num_pins="12" equivalent="full"/>
      <input name="I20" num_pins="12" equivalent="full"/>
      <input name="I30" num_pins="12" equivalent="full"/>
      <input name="IS0" num_pins="6" equivalent="full"/>
      <output name="O0" num_pins="24" equivalent="none"/>
      <input name="I01" num_pins="12" equivalent="full"/>
      <input name="I11" num_pins="12" equivalent="full"/>
      <input name="I21" num_pins="12" equivalent="full"/>
      <input name="I31" num_pins="12" equivalent="full"/>
      <input name="IS1" num_pins="6" equivalent="full"/>
      <output name="O1" num_pins="24" equivalent="none"/>
      <input name="I02" num_pins="12" equivalent="full"/>
      <input name="I12" num_pins="12" equivalent="full"/>
      <input name="I22" num_pins="12" equivalent="full"/>
      <input name="I32" num_pins="12" equivalent="full"/>
      <input name="IS2" num_pins="6" equivalent="full"/>
      <output name="O2" num_pins="24" equivalent="none"/>
      <clock name="clk" num_pins="16"/>
      <input name="sc_in" num_pins="20"/>
      <output name="sc_out" num_pins="20"/>
      <pb_type name="dsp_rtl" num_pb="1">
        <input name="a_i" num_pins="20"/>
        <input name="b_i" num_pins="18"/>
        <input name="feedback" num_pins="3"/>
        <input name="unsigned_a" num_pins="1"/>
        <input name="unsigned_b" num_pins="1"/>
        <input name="lreset" num_pins="1"/>
        <clock name="clk" num_pins="1"/>
        <input name="shift_right" num_pins="6"/>
        <input name="saturate_enable" num_pins="1"/>
        <input name="round" num_pins="1"/>
        <input name="subtract" num_pins="1"/>
        <input name="load_acc" num_pins="1"/>
        <input name="acc_fir_i" num_pins="6"/>
        <output name="z_o" num_pins="38"/>
        <output name="dly_b_o" num_pins="18"/>
        <input name="sc_in" num_pins="20"/>
        <output name="sc_out" num_pins="20"/>
        <mode name="physical" disable_packing="true">
          <pb_type name="dsp_phy" blif_model=".subckt dsp_phy" num_pb="1">
            <input name="a_i" num_pins="20"/>
            <input name="b_i" num_pins="18"/>
            <input name="feedback" num_pins="3"/>
            <input name="unsigned_a" num_pins="1"/>
            <input name="unsigned_b" num_pins="1"/>
            <input name="lreset" num_pins="1"/>
            <clock name="clk" num_pins="1"/>
            <input name="shift_right" num_pins="6"/>
            <input name="saturate_enable" num_pins="1"/>
            <input name="round" num_pins="1"/>
            <input name="subtract" num_pins="1"/>
            <input name="load_acc" num_pins="1"/>
            <input name="acc_fir_i" num_pins="6"/>
            <output name="z_o" num_pins="38"/>
            <output name="dly_b_o" num_pins="18"/>
            <input name="sc_in" num_pins="20"/>
            <output name="sc_out" num_pins="20"/>
            <T_setup value="100.0e-12" port="dsp_phy.acc_fir_i" clock="clk"/>
            <T_setup value="100.0e-12" port="dsp_phy.load_acc" clock="clk"/>
            <T_setup value="100.0e-12" port="dsp_phy.subtract" clock="clk"/>
            <T_setup value="100.0e-12" port="dsp_phy.round" clock="clk"/>
            <T_setup value="100.0e-12" port="dsp_phy.saturate_enable" clock="clk"/>
            <T_setup value="100.0e-12" port="dsp_phy.shift_right" clock="clk"/>
            <T_setup value="100.0e-12" port="dsp_phy.unsigned_a" clock="clk"/>
            <T_setup value="100.0e-12" port="dsp_phy.unsigned_b" clock="clk"/>
            <T_setup value="100.0e-12" port="dsp_phy.feedback" clock="clk"/>
            <T_setup value="100.0e-12" port="dsp_phy.a_i" clock="clk"/>
            <T_clock_to_Q max="100.0e-12" port="dsp_phy.a_i" clock="clk"/>
            <delay_constant max="100.0e-12" min="100.0e-12" in_port="dsp_phy.a_i" out_port="dsp_phy.z_o"/>
            <T_setup value="100.0e-12" port="dsp_phy.b_i" clock="clk"/>
            <T_clock_to_Q max="100.0e-12" port="dsp_phy.b_i" clock="clk"/>
            <delay_constant max="100.0e-12" min="100.0e-12" in_port="dsp_phy.b_i" out_port="dsp_phy.z_o"/>
            <T_setup value="100.0e-12" port="dsp_phy.lreset" clock="clk"/>
            <T_setup value="100.0e-12" port="dsp_phy.z_o" clock="clk"/>
            <T_clock_to_Q max="100.0e-12" port="dsp_phy.z_o" clock="clk"/>
            <T_clock_to_Q max="100.0e-12" port="dsp_phy.dly_b_o" clock="clk"/>
          </pb_type>
          <interconnect>
            <!-- connect dsp_phy to dsp_rtl -->
            <direct name="direct1" input="dsp_rtl.a_i" output="dsp_phy.a_i"/>
            <direct name="direct2" input="dsp_rtl.b_i" output="dsp_phy.b_i"/>
            <direct name="direct3" input="dsp_rtl.feedback" output="dsp_phy.feedback"/>
            <direct name="direct4" input="dsp_rtl.unsigned_a" output="dsp_phy.unsigned_a"/>
            <direct name="direct5" input="dsp_rtl.unsigned_b" output="dsp_phy.unsigned_b"/>
            <direct name="direct6" input="dsp_rtl.lreset" output="dsp_phy.lreset"/>
            <direct name="direct7" input="dsp_rtl.clk" output="dsp_phy.clk"/>
            <direct name="direct9" input="dsp_rtl.shift_right" output="dsp_phy.shift_right"/>
            <direct name="direct10" input="dsp_rtl.saturate_enable" output="dsp_phy.saturate_enable"/>
            <direct name="direct11" input="dsp_rtl.round" output="dsp_phy.round"/>
            <direct name="direct12" input="dsp_rtl.subtract" output="dsp_phy.subtract"/>
            <direct name="direct13" input="dsp_rtl.load_acc" output="dsp_phy.load_acc"/>
            <direct name="direct14" input="dsp_rtl.acc_fir_i" output="dsp_phy.acc_fir_i"/>
            <direct name="direct15" input="dsp_phy.z_o" output="dsp_rtl.z_o"/>
            <direct name="direct16" input="dsp_phy.dly_b_o" output="dsp_rtl.dly_b_o"/>
            <direct name="direct18" input="dsp_rtl.sc_in" output="dsp_phy.sc_in"/>
            <direct name="direct19" input="dsp_phy.sc_out" output="dsp_rtl.sc_out"/>
          </interconnect>
        </mode>
        <mode name="RS_DSP" disable_packing="false">
          <pb_type name="RS_DSP" blif_model=".subckt RS_DSP" num_pb="1">
            <input name="a" num_pins="20"/>
            <input name="b" num_pins="18"/>
            <input name="feedback" num_pins="3"/>
            <input name="unsigned_a" num_pins="1"/>
            <input name="unsigned_b" num_pins="1"/>
            <input name="lreset" num_pins="1"/>
            <clock name="clk" num_pins="1"/>
            <input name="shift_right" num_pins="6"/>
            <input name="saturate_enable" num_pins="1"/>
            <input name="round" num_pins="1"/>
            <input name="subtract" num_pins="1"/>
            <input name="load_acc" num_pins="1"/>
            <input name="acc_fir" num_pins="6"/>
            <output name="z" num_pins="38"/>
            <output name="dly_b" num_pins="18"/>
            <T_setup value="100.0e-12" port="RS_DSP.acc_fir" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP.load_acc" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP.subtract" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP.round" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP.saturate_enable" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP.shift_right" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP.unsigned_a" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP.unsigned_b" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP.feedback" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP.a" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP.b" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP.lreset" clock="clk"/>
            <T_clock_to_Q max="100.0e-12" port="RS_DSP.z" clock="clk"/>
            <T_clock_to_Q max="100.0e-12" port="RS_DSP.dly_b" clock="clk"/>
          </pb_type>
          <interconnect>
            <!-- connect RS_DSP to dsp_rtl -->
            <direct name="direct1" input="dsp_rtl.a_i" output="RS_DSP.a"/>
            <direct name="direct2" input="dsp_rtl.b_i" output="RS_DSP.b"/>
            <direct name="direct3" input="dsp_rtl.feedback" output="RS_DSP.feedback"/>
            <direct name="direct4" input="dsp_rtl.unsigned_a" output="RS_DSP.unsigned_a"/>
            <direct name="direct5" input="dsp_rtl.unsigned_b" output="RS_DSP.unsigned_b"/>
            <direct name="direct6" input="dsp_rtl.lreset" output="RS_DSP.lreset"/>
            <direct name="direct7" input="dsp_rtl.clk" output="RS_DSP.clk"/>
            <direct name="direct9" input="dsp_rtl.shift_right" output="RS_DSP.shift_right"/>
            <direct name="direct10" input="dsp_rtl.saturate_enable" output="RS_DSP.saturate_enable"/>
            <direct name="direct11" input="dsp_rtl.round" output="RS_DSP.round"/>
            <direct name="direct12" input="dsp_rtl.subtract" output="RS_DSP.subtract"/>
            <direct name="direct13" input="dsp_rtl.load_acc" output="RS_DSP.load_acc"/>
            <direct name="direct14" input="dsp_rtl.acc_fir_i" output="RS_DSP.acc_fir"/>
            <direct name="direct15" input="RS_DSP.z" output="dsp_rtl.z_o"/>
            <direct name="direct16" input="RS_DSP.dly_b" output="dsp_rtl.dly_b_o"/>
          </interconnect>
        </mode>
        <mode name="RS_DSP_MULT" disable_packing="false">
          <pb_type name="RS_DSP_MULT" blif_model=".subckt RS_DSP_MULT" num_pb="1">
            <input name="a" num_pins="20"/>
            <input name="b" num_pins="18"/>
            <input name="feedback" num_pins="3"/>
            <input name="unsigned_a" num_pins="1"/>
            <input name="unsigned_b" num_pins="1"/>
            <output name="z" num_pins="38"/>
            <delay_constant max="5e-11" min="4e-11" in_port="RS_DSP_MULT.a" out_port="RS_DSP_MULT.z"/>
            <delay_constant max="5e-11" min="4e-11" in_port="RS_DSP_MULT.b" out_port="RS_DSP_MULT.z"/>
            <delay_constant max="5e-11" min="4e-11" in_port="RS_DSP_MULT.unsigned_a" out_port="RS_DSP_MULT.z"/>
            <delay_constant max="5e-11" min="4e-11" in_port="RS_DSP_MULT.unsigned_b" out_port="RS_DSP_MULT.z"/>
            <delay_constant max="5e-11" min="4e-11" in_port="RS_DSP_MULT.feedback" out_port="RS_DSP_MULT.z"/>
          </pb_type>
          <interconnect>
            <!-- connect RS_DSP_MULT to dsp_rtl -->
            <direct name="direct1" input="dsp_rtl.a_i" output="RS_DSP_MULT.a"/>
            <direct name="direct2" input="dsp_rtl.b_i" output="RS_DSP_MULT.b"/>
            <direct name="direct3" input="dsp_rtl.feedback" output="RS_DSP_MULT.feedback"/>
            <direct name="direct4" input="dsp_rtl.unsigned_a" output="RS_DSP_MULT.unsigned_a"/>
            <direct name="direct5" input="dsp_rtl.unsigned_b" output="RS_DSP_MULT.unsigned_b"/>
            <direct name="direct15" input="RS_DSP_MULT.z" output="dsp_rtl.z_o"/>
          </interconnect>
        </mode>
        <mode name="RS_DSP_MULT_REGIN" disable_packing="false">
          <pb_type name="RS_DSP_MULT_REGIN" blif_model=".subckt RS_DSP_MULT_REGIN" num_pb="1">
            <clock name="clk" num_pins="1"/>
            <input name="lreset" num_pins="1"/>
            <input name="a" num_pins="20"/>
            <input name="b" num_pins="18"/>
            <input name="feedback" num_pins="3"/>
            <input name="unsigned_a" num_pins="1"/>
            <input name="unsigned_b" num_pins="1"/>
            <output name="z" num_pins="38"/>
            <T_clock_to_Q max="6.53908e-10" port="RS_DSP_MULT_REGIN.z" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULT_REGIN.lreset" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULT_REGIN.a" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULT_REGIN.b" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULT_REGIN.feedback" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULT_REGIN.unsigned_a" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULT_REGIN.unsigned_b" clock="clk"/>
          </pb_type>
          <interconnect>
            <!-- connect RS_DSP_* to dsp_rtl -->
            <direct name="direct6" input="dsp_rtl.lreset" output="RS_DSP_MULT_REGIN.lreset"/>
            <direct name="direct7" input="dsp_rtl.clk" output="RS_DSP_MULT_REGIN.clk"/>
            <direct name="direct1" input="dsp_rtl.a_i" output="RS_DSP_MULT_REGIN.a"/>
            <direct name="direct2" input="dsp_rtl.b_i" output="RS_DSP_MULT_REGIN.b"/>
            <direct name="direct3" input="dsp_rtl.feedback" output="RS_DSP_MULT_REGIN.feedback"/>
            <direct name="direct4" input="dsp_rtl.unsigned_a" output="RS_DSP_MULT_REGIN.unsigned_a"/>
            <direct name="direct5" input="dsp_rtl.unsigned_b" output="RS_DSP_MULT_REGIN.unsigned_b"/>
            <direct name="direct15" input="RS_DSP_MULT_REGIN.z" output="dsp_rtl.z_o"/>
          </interconnect>
        </mode>
        <mode name="RS_DSP_MULT_REGOUT" disable_packing="false">
          <pb_type name="RS_DSP_MULT_REGOUT" blif_model=".subckt RS_DSP_MULT_REGOUT" num_pb="1">
            <clock name="clk" num_pins="1"/>
            <input name="lreset" num_pins="1"/>
            <input name="a" num_pins="20"/>
            <input name="b" num_pins="18"/>
            <input name="feedback" num_pins="3"/>
            <input name="unsigned_a" num_pins="1"/>
            <input name="unsigned_b" num_pins="1"/>
            <output name="z" num_pins="38"/>
            <T_clock_to_Q max="6.53908e-10" port="RS_DSP_MULT_REGOUT.z" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULT_REGOUT.lreset" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULT_REGOUT.a" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULT_REGOUT.b" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULT_REGOUT.feedback" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULT_REGOUT.unsigned_a" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULT_REGOUT.unsigned_b" clock="clk"/>
          </pb_type>
          <interconnect>
            <!-- connect RS_DSP_* to dsp_rtl -->
            <direct name="direct6" input="dsp_rtl.lreset" output="RS_DSP_MULT_REGOUT.lreset"/>
            <direct name="direct7" input="dsp_rtl.clk" output="RS_DSP_MULT_REGOUT.clk"/>
            <direct name="direct1" input="dsp_rtl.a_i" output="RS_DSP_MULT_REGOUT.a"/>
            <direct name="direct2" input="dsp_rtl.b_i" output="RS_DSP_MULT_REGOUT.b"/>
            <direct name="direct3" input="dsp_rtl.feedback" output="RS_DSP_MULT_REGOUT.feedback"/>
            <direct name="direct4" input="dsp_rtl.unsigned_a" output="RS_DSP_MULT_REGOUT.unsigned_a"/>
            <direct name="direct5" input="dsp_rtl.unsigned_b" output="RS_DSP_MULT_REGOUT.unsigned_b"/>
            <direct name="direct15" input="RS_DSP_MULT_REGOUT.z" output="dsp_rtl.z_o"/>
          </interconnect>
        </mode>
        <mode name="RS_DSP_MULT_REGIN_REGOUT" disable_packing="false">
          <pb_type name="RS_DSP_MULT_REGIN_REGOUT" blif_model=".subckt RS_DSP_MULT_REGIN_REGOUT" num_pb="1">
            <clock name="clk" num_pins="1"/>
            <input name="lreset" num_pins="1"/>
            <input name="a" num_pins="20"/>
            <input name="b" num_pins="18"/>
            <input name="feedback" num_pins="3"/>
            <input name="unsigned_a" num_pins="1"/>
            <input name="unsigned_b" num_pins="1"/>
            <output name="z" num_pins="38"/>
            <T_clock_to_Q max="6.53908e-10" port="RS_DSP_MULT_REGIN_REGOUT.z" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULT_REGIN_REGOUT.lreset" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULT_REGIN_REGOUT.a" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULT_REGIN_REGOUT.b" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULT_REGIN_REGOUT.feedback" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULT_REGIN_REGOUT.unsigned_a" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULT_REGIN_REGOUT.unsigned_b" clock="clk"/>
          </pb_type>
          <interconnect>
            <!-- connect RS_DSP_* to dsp_rtl -->
            <direct name="direct6" input="dsp_rtl.lreset" output="RS_DSP_MULT_REGIN_REGOUT.lreset"/>
            <direct name="direct7" input="dsp_rtl.clk" output="RS_DSP_MULT_REGIN_REGOUT.clk"/>
            <direct name="direct1" input="dsp_rtl.a_i" output="RS_DSP_MULT_REGIN_REGOUT.a"/>
            <direct name="direct2" input="dsp_rtl.b_i" output="RS_DSP_MULT_REGIN_REGOUT.b"/>
            <direct name="direct3" input="dsp_rtl.feedback" output="RS_DSP_MULT_REGIN_REGOUT.feedback"/>
            <direct name="direct4" input="dsp_rtl.unsigned_a" output="RS_DSP_MULT_REGIN_REGOUT.unsigned_a"/>
            <direct name="direct5" input="dsp_rtl.unsigned_b" output="RS_DSP_MULT_REGIN_REGOUT.unsigned_b"/>
            <direct name="direct15" input="RS_DSP_MULT_REGIN_REGOUT.z" output="dsp_rtl.z_o"/>
          </interconnect>
        </mode>
        <mode name="RS_DSP_MULTACC" disable_packing="false">
          <pb_type name="RS_DSP_MULTACC" blif_model=".subckt RS_DSP_MULTACC" num_pb="1">
            <clock name="clk" num_pins="1"/>
            <input name="lreset" num_pins="1"/>
            <input name="a" num_pins="20"/>
            <input name="b" num_pins="18"/>
            <input name="feedback" num_pins="3"/>
            <input name="unsigned_a" num_pins="1"/>
            <input name="unsigned_b" num_pins="1"/>
            <input name="shift_right" num_pins="6"/>
            <input name="saturate_enable" num_pins="1"/>
            <input name="round" num_pins="1"/>
            <input name="subtract" num_pins="1"/>
            <input name="load_acc" num_pins="1"/>
            <output name="z" num_pins="38"/>
            <T_clock_to_Q max="6.53908e-10" port="RS_DSP_MULTACC.z" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTACC.lreset" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTACC.a" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTACC.b" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTACC.feedback" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTACC.unsigned_a" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTACC.unsigned_b" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTACC.shift_right" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTACC.saturate_enable" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTACC.round" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTACC.subtract" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTACC.load_acc" clock="clk"/>
          </pb_type>
          <interconnect>
            <!-- connect RS_DSP_* to dsp_rtl -->
            <direct name="direct6" input="dsp_rtl.lreset" output="RS_DSP_MULTACC.lreset"/>
            <direct name="direct7" input="dsp_rtl.clk" output="RS_DSP_MULTACC.clk"/>
            <direct name="direct1" input="dsp_rtl.a_i" output="RS_DSP_MULTACC.a"/>
            <direct name="direct2" input="dsp_rtl.b_i" output="RS_DSP_MULTACC.b"/>
            <direct name="direct3" input="dsp_rtl.feedback" output="RS_DSP_MULTACC.feedback"/>
            <direct name="direct4" input="dsp_rtl.unsigned_a" output="RS_DSP_MULTACC.unsigned_a"/>
            <direct name="direct5" input="dsp_rtl.unsigned_b" output="RS_DSP_MULTACC.unsigned_b"/>
            <direct name="direct15" input="RS_DSP_MULTACC.z" output="dsp_rtl.z_o"/>
            <direct name="direct9" input="dsp_rtl.shift_right" output="RS_DSP_MULTACC.shift_right"/>
            <direct name="direct10" input="dsp_rtl.saturate_enable" output="RS_DSP_MULTACC.saturate_enable"/>
            <direct name="direct11" input="dsp_rtl.round" output="RS_DSP_MULTACC.round"/>
            <direct name="direct12" input="dsp_rtl.subtract" output="RS_DSP_MULTACC.subtract"/>
            <direct name="direct13" input="dsp_rtl.load_acc" output="RS_DSP_MULTACC.load_acc"/>
          </interconnect>
        </mode>
        <mode name="RS_DSP_MULTACC_REGIN" disable_packing="false">
          <pb_type name="RS_DSP_MULTACC_REGIN" blif_model=".subckt RS_DSP_MULTACC_REGIN" num_pb="1">
            <clock name="clk" num_pins="1"/>
            <input name="lreset" num_pins="1"/>
            <input name="a" num_pins="20"/>
            <input name="b" num_pins="18"/>
            <input name="feedback" num_pins="3"/>
            <input name="unsigned_a" num_pins="1"/>
            <input name="unsigned_b" num_pins="1"/>
            <input name="shift_right" num_pins="6"/>
            <input name="saturate_enable" num_pins="1"/>
            <input name="round" num_pins="1"/>
            <input name="subtract" num_pins="1"/>
            <input name="load_acc" num_pins="1"/>
            <output name="z" num_pins="38"/>
            <T_clock_to_Q max="6.53908e-10" port="RS_DSP_MULTACC_REGIN.z" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTACC_REGIN.lreset" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTACC_REGIN.a" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTACC_REGIN.b" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTACC_REGIN.feedback" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTACC_REGIN.unsigned_a" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTACC_REGIN.unsigned_b" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTACC_REGIN.shift_right" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTACC_REGIN.saturate_enable" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTACC_REGIN.round" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTACC_REGIN.subtract" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTACC_REGIN.load_acc" clock="clk"/>
          </pb_type>
          <interconnect>
            <!-- connect RS_DSP_* to dsp_rtl -->
            <direct name="direct6" input="dsp_rtl.lreset" output="RS_DSP_MULTACC_REGIN.lreset"/>
            <direct name="direct7" input="dsp_rtl.clk" output="RS_DSP_MULTACC_REGIN.clk"/>
            <direct name="direct1" input="dsp_rtl.a_i" output="RS_DSP_MULTACC_REGIN.a"/>
            <direct name="direct2" input="dsp_rtl.b_i" output="RS_DSP_MULTACC_REGIN.b"/>
            <direct name="direct3" input="dsp_rtl.feedback" output="RS_DSP_MULTACC_REGIN.feedback"/>
            <direct name="direct4" input="dsp_rtl.unsigned_a" output="RS_DSP_MULTACC_REGIN.unsigned_a"/>
            <direct name="direct5" input="dsp_rtl.unsigned_b" output="RS_DSP_MULTACC_REGIN.unsigned_b"/>
            <direct name="direct15" input="RS_DSP_MULTACC_REGIN.z" output="dsp_rtl.z_o"/>
            <direct name="direct9" input="dsp_rtl.shift_right" output="RS_DSP_MULTACC_REGIN.shift_right"/>
            <direct name="direct10" input="dsp_rtl.saturate_enable" output="RS_DSP_MULTACC_REGIN.saturate_enable"/>
            <direct name="direct11" input="dsp_rtl.round" output="RS_DSP_MULTACC_REGIN.round"/>
            <direct name="direct12" input="dsp_rtl.subtract" output="RS_DSP_MULTACC_REGIN.subtract"/>
            <direct name="direct13" input="dsp_rtl.load_acc" output="RS_DSP_MULTACC_REGIN.load_acc"/>
          </interconnect>
        </mode>
        <mode name="RS_DSP_MULTACC_REGOUT" disable_packing="false">
          <pb_type name="RS_DSP_MULTACC_REGOUT" blif_model=".subckt RS_DSP_MULTACC_REGOUT" num_pb="1">
            <clock name="clk" num_pins="1"/>
            <input name="lreset" num_pins="1"/>
            <input name="a" num_pins="20"/>
            <input name="b" num_pins="18"/>
            <input name="feedback" num_pins="3"/>
            <input name="unsigned_a" num_pins="1"/>
            <input name="unsigned_b" num_pins="1"/>
            <input name="shift_right" num_pins="6"/>
            <input name="saturate_enable" num_pins="1"/>
            <input name="round" num_pins="1"/>
            <input name="subtract" num_pins="1"/>
            <input name="load_acc" num_pins="1"/>
            <output name="z" num_pins="38"/>
            <T_clock_to_Q max="6.53908e-10" port="RS_DSP_MULTACC_REGOUT.z" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTACC_REGOUT.lreset" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTACC_REGOUT.a" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTACC_REGOUT.b" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTACC_REGOUT.feedback" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTACC_REGOUT.unsigned_a" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTACC_REGOUT.unsigned_b" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTACC_REGOUT.shift_right" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTACC_REGOUT.saturate_enable" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTACC_REGOUT.round" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTACC_REGOUT.subtract" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTACC_REGOUT.load_acc" clock="clk"/>
          </pb_type>
          <interconnect>
            <!-- connect RS_DSP_* to dsp_rtl -->
            <direct name="direct6" input="dsp_rtl.lreset" output="RS_DSP_MULTACC_REGOUT.lreset"/>
            <direct name="direct7" input="dsp_rtl.clk" output="RS_DSP_MULTACC_REGOUT.clk"/>
            <direct name="direct1" input="dsp_rtl.a_i" output="RS_DSP_MULTACC_REGOUT.a"/>
            <direct name="direct2" input="dsp_rtl.b_i" output="RS_DSP_MULTACC_REGOUT.b"/>
            <direct name="direct3" input="dsp_rtl.feedback" output="RS_DSP_MULTACC_REGOUT.feedback"/>
            <direct name="direct4" input="dsp_rtl.unsigned_a" output="RS_DSP_MULTACC_REGOUT.unsigned_a"/>
            <direct name="direct5" input="dsp_rtl.unsigned_b" output="RS_DSP_MULTACC_REGOUT.unsigned_b"/>
            <direct name="direct15" input="RS_DSP_MULTACC_REGOUT.z" output="dsp_rtl.z_o"/>
            <direct name="direct9" input="dsp_rtl.shift_right" output="RS_DSP_MULTACC_REGOUT.shift_right"/>
            <direct name="direct10" input="dsp_rtl.saturate_enable" output="RS_DSP_MULTACC_REGOUT.saturate_enable"/>
            <direct name="direct11" input="dsp_rtl.round" output="RS_DSP_MULTACC_REGOUT.round"/>
            <direct name="direct12" input="dsp_rtl.subtract" output="RS_DSP_MULTACC_REGOUT.subtract"/>
            <direct name="direct13" input="dsp_rtl.load_acc" output="RS_DSP_MULTACC_REGOUT.load_acc"/>
          </interconnect>
        </mode>
        <mode name="RS_DSP_MULTACC_REGIN_REGOUT" disable_packing="false">
          <pb_type name="RS_DSP_MULTACC_REGIN_REGOUT" blif_model=".subckt RS_DSP_MULTACC_REGIN_REGOUT" num_pb="1">
            <clock name="clk" num_pins="1"/>
            <input name="lreset" num_pins="1"/>
            <input name="a" num_pins="20"/>
            <input name="b" num_pins="18"/>
            <input name="feedback" num_pins="3"/>
            <input name="unsigned_a" num_pins="1"/>
            <input name="unsigned_b" num_pins="1"/>
            <input name="shift_right" num_pins="6"/>
            <input name="saturate_enable" num_pins="1"/>
            <input name="round" num_pins="1"/>
            <input name="subtract" num_pins="1"/>
            <input name="load_acc" num_pins="1"/>
            <output name="z" num_pins="38"/>
            <T_clock_to_Q max="6.53908e-10" port="RS_DSP_MULTACC_REGIN_REGOUT.z" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTACC_REGIN_REGOUT.lreset" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTACC_REGIN_REGOUT.a" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTACC_REGIN_REGOUT.b" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTACC_REGIN_REGOUT.feedback" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTACC_REGIN_REGOUT.unsigned_a" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTACC_REGIN_REGOUT.unsigned_b" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTACC_REGIN_REGOUT.shift_right" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTACC_REGIN_REGOUT.saturate_enable" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTACC_REGIN_REGOUT.round" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTACC_REGIN_REGOUT.subtract" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTACC_REGIN_REGOUT.load_acc" clock="clk"/>
          </pb_type>
          <interconnect>
            <!-- connect RS_DSP_* to dsp_rtl -->
            <direct name="direct6" input="dsp_rtl.lreset" output="RS_DSP_MULTACC_REGIN_REGOUT.lreset"/>
            <direct name="direct7" input="dsp_rtl.clk" output="RS_DSP_MULTACC_REGIN_REGOUT.clk"/>
            <direct name="direct1" input="dsp_rtl.a_i" output="RS_DSP_MULTACC_REGIN_REGOUT.a"/>
            <direct name="direct2" input="dsp_rtl.b_i" output="RS_DSP_MULTACC_REGIN_REGOUT.b"/>
            <direct name="direct3" input="dsp_rtl.feedback" output="RS_DSP_MULTACC_REGIN_REGOUT.feedback"/>
            <direct name="direct4" input="dsp_rtl.unsigned_a" output="RS_DSP_MULTACC_REGIN_REGOUT.unsigned_a"/>
            <direct name="direct5" input="dsp_rtl.unsigned_b" output="RS_DSP_MULTACC_REGIN_REGOUT.unsigned_b"/>
            <direct name="direct15" input="RS_DSP_MULTACC_REGIN_REGOUT.z" output="dsp_rtl.z_o"/>
            <direct name="direct9" input="dsp_rtl.shift_right" output="RS_DSP_MULTACC_REGIN_REGOUT.shift_right"/>
            <direct name="direct10" input="dsp_rtl.saturate_enable" output="RS_DSP_MULTACC_REGIN_REGOUT.saturate_enable"/>
            <direct name="direct11" input="dsp_rtl.round" output="RS_DSP_MULTACC_REGIN_REGOUT.round"/>
            <direct name="direct12" input="dsp_rtl.subtract" output="RS_DSP_MULTACC_REGIN_REGOUT.subtract"/>
            <direct name="direct13" input="dsp_rtl.load_acc" output="RS_DSP_MULTACC_REGIN_REGOUT.load_acc"/>
          </interconnect>
        </mode>
        <mode name="RS_DSP_MULTADD" disable_packing="false">
          <pb_type name="RS_DSP_MULTADD" blif_model=".subckt RS_DSP_MULTADD" num_pb="1">
            <clock name="clk" num_pins="1"/>
            <input name="lreset" num_pins="1"/>
            <input name="a" num_pins="20"/>
            <input name="b" num_pins="18"/>
            <input name="feedback" num_pins="3"/>
            <input name="unsigned_a" num_pins="1"/>
            <input name="unsigned_b" num_pins="1"/>
            <input name="shift_right" num_pins="6"/>
            <input name="saturate_enable" num_pins="1"/>
            <input name="round" num_pins="1"/>
            <input name="subtract" num_pins="1"/>
            <input name="load_acc" num_pins="1"/>
            <input name="acc_fir" num_pins="6"/>
            <output name="z" num_pins="38"/>
            <output name="dly_b" num_pins="18"/>
            <T_clock_to_Q max="6.53908e-10" port="RS_DSP_MULTADD.z" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTADD.lreset" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTADD.a" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTADD.b" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTADD.feedback" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTADD.unsigned_a" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTADD.unsigned_b" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTADD.shift_right" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTADD.saturate_enable" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTADD.round" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTADD.subtract" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTADD.load_acc" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTADD.acc_fir" clock="clk"/>
            <T_clock_to_Q max="6.53908e-10" port="RS_DSP_MULTADD.dly_b" clock="clk"/>
          </pb_type>
          <interconnect>
            <!-- connect RS_DSP_* to dsp_rtl -->
            <direct name="direct6" input="dsp_rtl.lreset" output="RS_DSP_MULTADD.lreset"/>
            <direct name="direct7" input="dsp_rtl.clk" output="RS_DSP_MULTADD.clk"/>
            <direct name="direct1" input="dsp_rtl.a_i" output="RS_DSP_MULTADD.a"/>
            <direct name="direct2" input="dsp_rtl.b_i" output="RS_DSP_MULTADD.b"/>
            <direct name="direct3" input="dsp_rtl.feedback" output="RS_DSP_MULTADD.feedback"/>
            <direct name="direct4" input="dsp_rtl.unsigned_a" output="RS_DSP_MULTADD.unsigned_a"/>
            <direct name="direct5" input="dsp_rtl.unsigned_b" output="RS_DSP_MULTADD.unsigned_b"/>
            <direct name="direct15" input="RS_DSP_MULTADD.z" output="dsp_rtl.z_o"/>
            <direct name="direct9" input="dsp_rtl.shift_right" output="RS_DSP_MULTADD.shift_right"/>
            <direct name="direct10" input="dsp_rtl.saturate_enable" output="RS_DSP_MULTADD.saturate_enable"/>
            <direct name="direct11" input="dsp_rtl.round" output="RS_DSP_MULTADD.round"/>
            <direct name="direct12" input="dsp_rtl.subtract" output="RS_DSP_MULTADD.subtract"/>
            <direct name="direct13" input="dsp_rtl.load_acc" output="RS_DSP_MULTADD.load_acc"/>
            <direct name="direct14" input="dsp_rtl.acc_fir_i" output="RS_DSP_MULTADD.acc_fir"/>
            <direct name="direct16" input="RS_DSP_MULTADD.dly_b" output="dsp_rtl.dly_b_o"/>
          </interconnect>
        </mode>
        <mode name="RS_DSP_MULTADD_REGIN" disable_packing="false">
          <pb_type name="RS_DSP_MULTADD_REGIN" blif_model=".subckt RS_DSP_MULTADD_REGIN" num_pb="1">
            <clock name="clk" num_pins="1"/>
            <input name="lreset" num_pins="1"/>
            <input name="a" num_pins="20"/>
            <input name="b" num_pins="18"/>
            <input name="feedback" num_pins="3"/>
            <input name="unsigned_a" num_pins="1"/>
            <input name="unsigned_b" num_pins="1"/>
            <input name="shift_right" num_pins="6"/>
            <input name="saturate_enable" num_pins="1"/>
            <input name="round" num_pins="1"/>
            <input name="subtract" num_pins="1"/>
            <input name="load_acc" num_pins="1"/>
            <input name="acc_fir" num_pins="6"/>
            <output name="z" num_pins="38"/>
            <output name="dly_b" num_pins="18"/>
            <T_clock_to_Q max="6.53908e-10" port="RS_DSP_MULTADD_REGIN.z" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTADD_REGIN.lreset" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTADD_REGIN.a" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTADD_REGIN.b" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTADD_REGIN.feedback" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTADD_REGIN.unsigned_a" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTADD_REGIN.unsigned_b" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTADD_REGIN.shift_right" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTADD_REGIN.saturate_enable" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTADD_REGIN.round" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTADD_REGIN.subtract" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTADD_REGIN.load_acc" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTADD_REGIN.acc_fir" clock="clk"/>
            <T_clock_to_Q max="6.53908e-10" port="RS_DSP_MULTADD_REGIN.dly_b" clock="clk"/>
          </pb_type>
          <interconnect>
            <!-- connect RS_DSP_* to dsp_rtl -->
            <direct name="direct6" input="dsp_rtl.lreset" output="RS_DSP_MULTADD_REGIN.lreset"/>
            <direct name="direct7" input="dsp_rtl.clk" output="RS_DSP_MULTADD_REGIN.clk"/>
            <direct name="direct1" input="dsp_rtl.a_i" output="RS_DSP_MULTADD_REGIN.a"/>
            <direct name="direct2" input="dsp_rtl.b_i" output="RS_DSP_MULTADD_REGIN.b"/>
            <direct name="direct3" input="dsp_rtl.feedback" output="RS_DSP_MULTADD_REGIN.feedback"/>
            <direct name="direct4" input="dsp_rtl.unsigned_a" output="RS_DSP_MULTADD_REGIN.unsigned_a"/>
            <direct name="direct5" input="dsp_rtl.unsigned_b" output="RS_DSP_MULTADD_REGIN.unsigned_b"/>
            <direct name="direct15" input="RS_DSP_MULTADD_REGIN.z" output="dsp_rtl.z_o"/>
            <direct name="direct9" input="dsp_rtl.shift_right" output="RS_DSP_MULTADD_REGIN.shift_right"/>
            <direct name="direct10" input="dsp_rtl.saturate_enable" output="RS_DSP_MULTADD_REGIN.saturate_enable"/>
            <direct name="direct11" input="dsp_rtl.round" output="RS_DSP_MULTADD_REGIN.round"/>
            <direct name="direct12" input="dsp_rtl.subtract" output="RS_DSP_MULTADD_REGIN.subtract"/>
            <direct name="direct13" input="dsp_rtl.load_acc" output="RS_DSP_MULTADD_REGIN.load_acc"/>
            <direct name="direct14" input="dsp_rtl.acc_fir_i" output="RS_DSP_MULTADD_REGIN.acc_fir"/>
            <direct name="direct16" input="RS_DSP_MULTADD_REGIN.dly_b" output="dsp_rtl.dly_b_o"/>
          </interconnect>
        </mode>
        <mode name="RS_DSP_MULTADD_REGOUT" disable_packing="false">
          <pb_type name="RS_DSP_MULTADD_REGOUT" blif_model=".subckt RS_DSP_MULTADD_REGOUT" num_pb="1">
            <clock name="clk" num_pins="1"/>
            <input name="lreset" num_pins="1"/>
            <input name="a" num_pins="20"/>
            <input name="b" num_pins="18"/>
            <input name="feedback" num_pins="3"/>
            <input name="unsigned_a" num_pins="1"/>
            <input name="unsigned_b" num_pins="1"/>
            <input name="shift_right" num_pins="6"/>
            <input name="saturate_enable" num_pins="1"/>
            <input name="round" num_pins="1"/>
            <input name="subtract" num_pins="1"/>
            <input name="load_acc" num_pins="1"/>
            <input name="acc_fir" num_pins="6"/>
            <output name="z" num_pins="38"/>
            <output name="dly_b" num_pins="18"/>
            <T_clock_to_Q max="6.53908e-10" port="RS_DSP_MULTADD_REGOUT.z" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTADD_REGOUT.lreset" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTADD_REGOUT.a" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTADD_REGOUT.b" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTADD_REGOUT.feedback" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTADD_REGOUT.unsigned_a" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTADD_REGOUT.unsigned_b" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTADD_REGOUT.shift_right" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTADD_REGOUT.saturate_enable" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTADD_REGOUT.round" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTADD_REGOUT.subtract" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTADD_REGOUT.load_acc" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTADD_REGOUT.acc_fir" clock="clk"/>
            <T_clock_to_Q max="6.53908e-10" port="RS_DSP_MULTADD_REGOUT.dly_b" clock="clk"/>
          </pb_type>
          <interconnect>
            <!-- connect RS_DSP_* to dsp_rtl -->
            <direct name="direct6" input="dsp_rtl.lreset" output="RS_DSP_MULTADD_REGOUT.lreset"/>
            <direct name="direct7" input="dsp_rtl.clk" output="RS_DSP_MULTADD_REGOUT.clk"/>
            <direct name="direct1" input="dsp_rtl.a_i" output="RS_DSP_MULTADD_REGOUT.a"/>
            <direct name="direct2" input="dsp_rtl.b_i" output="RS_DSP_MULTADD_REGOUT.b"/>
            <direct name="direct3" input="dsp_rtl.feedback" output="RS_DSP_MULTADD_REGOUT.feedback"/>
            <direct name="direct4" input="dsp_rtl.unsigned_a" output="RS_DSP_MULTADD_REGOUT.unsigned_a"/>
            <direct name="direct5" input="dsp_rtl.unsigned_b" output="RS_DSP_MULTADD_REGOUT.unsigned_b"/>
            <direct name="direct15" input="RS_DSP_MULTADD_REGOUT.z" output="dsp_rtl.z_o"/>
            <direct name="direct9" input="dsp_rtl.shift_right" output="RS_DSP_MULTADD_REGOUT.shift_right"/>
            <direct name="direct10" input="dsp_rtl.saturate_enable" output="RS_DSP_MULTADD_REGOUT.saturate_enable"/>
            <direct name="direct11" input="dsp_rtl.round" output="RS_DSP_MULTADD_REGOUT.round"/>
            <direct name="direct12" input="dsp_rtl.subtract" output="RS_DSP_MULTADD_REGOUT.subtract"/>
            <direct name="direct13" input="dsp_rtl.load_acc" output="RS_DSP_MULTADD_REGOUT.load_acc"/>
            <direct name="direct14" input="dsp_rtl.acc_fir_i" output="RS_DSP_MULTADD_REGOUT.acc_fir"/>
            <direct name="direct16" input="RS_DSP_MULTADD_REGOUT.dly_b" output="dsp_rtl.dly_b_o"/>
          </interconnect>
        </mode>
        <mode name="RS_DSP_MULTADD_REGIN_REGOUT" disable_packing="false">
          <pb_type name="RS_DSP_MULTADD_REGIN_REGOUT" blif_model=".subckt RS_DSP_MULTADD_REGIN_REGOUT" num_pb="1">
            <clock name="clk" num_pins="1"/>
            <input name="lreset" num_pins="1"/>
            <input name="a" num_pins="20"/>
            <input name="b" num_pins="18"/>
            <input name="feedback" num_pins="3"/>
            <input name="unsigned_a" num_pins="1"/>
            <input name="unsigned_b" num_pins="1"/>
            <input name="shift_right" num_pins="6"/>
            <input name="saturate_enable" num_pins="1"/>
            <input name="round" num_pins="1"/>
            <input name="subtract" num_pins="1"/>
            <input name="load_acc" num_pins="1"/>
            <input name="acc_fir" num_pins="6"/>
            <output name="z" num_pins="38"/>
            <output name="dly_b" num_pins="18"/>
            <T_clock_to_Q max="6.53908e-10" port="RS_DSP_MULTADD_REGIN_REGOUT.z" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTADD_REGIN_REGOUT.lreset" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTADD_REGIN_REGOUT.a" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTADD_REGIN_REGOUT.b" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTADD_REGIN_REGOUT.feedback" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTADD_REGIN_REGOUT.unsigned_a" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTADD_REGIN_REGOUT.unsigned_b" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTADD_REGIN_REGOUT.shift_right" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTADD_REGIN_REGOUT.saturate_enable" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTADD_REGIN_REGOUT.round" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTADD_REGIN_REGOUT.subtract" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTADD_REGIN_REGOUT.load_acc" clock="clk"/>
            <T_setup value="100.0e-12" port="RS_DSP_MULTADD_REGIN_REGOUT.acc_fir" clock="clk"/>
            <T_clock_to_Q max="6.53908e-10" port="RS_DSP_MULTADD_REGIN_REGOUT.dly_b" clock="clk"/>
          </pb_type>
          <interconnect>
            <!-- connect RS_DSP_* to dsp_rtl -->
            <direct name="direct6" input="dsp_rtl.lreset" output="RS_DSP_MULTADD_REGIN_REGOUT.lreset"/>
            <direct name="direct7" input="dsp_rtl.clk" output="RS_DSP_MULTADD_REGIN_REGOUT.clk"/>
            <direct name="direct1" input="dsp_rtl.a_i" output="RS_DSP_MULTADD_REGIN_REGOUT.a"/>
            <direct name="direct2" input="dsp_rtl.b_i" output="RS_DSP_MULTADD_REGIN_REGOUT.b"/>
            <direct name="direct3" input="dsp_rtl.feedback" output="RS_DSP_MULTADD_REGIN_REGOUT.feedback"/>
            <direct name="direct4" input="dsp_rtl.unsigned_a" output="RS_DSP_MULTADD_REGIN_REGOUT.unsigned_a"/>
            <direct name="direct5" input="dsp_rtl.unsigned_b" output="RS_DSP_MULTADD_REGIN_REGOUT.unsigned_b"/>
            <direct name="direct15" input="RS_DSP_MULTADD_REGIN_REGOUT.z" output="dsp_rtl.z_o"/>
            <direct name="direct9" input="dsp_rtl.shift_right" output="RS_DSP_MULTADD_REGIN_REGOUT.shift_right"/>
            <direct name="direct10" input="dsp_rtl.saturate_enable" output="RS_DSP_MULTADD_REGIN_REGOUT.saturate_enable"/>
            <direct name="direct11" input="dsp_rtl.round" output="RS_DSP_MULTADD_REGIN_REGOUT.round"/>
            <direct name="direct12" input="dsp_rtl.subtract" output="RS_DSP_MULTADD_REGIN_REGOUT.subtract"/>
            <direct name="direct13" input="dsp_rtl.load_acc" output="RS_DSP_MULTADD_REGIN_REGOUT.load_acc"/>
            <direct name="direct14" input="dsp_rtl.acc_fir_i" output="RS_DSP_MULTADD_REGIN_REGOUT.acc_fir"/>
            <direct name="direct16" input="RS_DSP_MULTADD_REGIN_REGOUT.dly_b" output="dsp_rtl.dly_b_o"/>
          </interconnect>
        </mode>
      </pb_type>
      <!-- dsp_rtl -->
      <!-- OPTIONAL CONSTANT GENERATORS -->
      <pb_type name="opt" num_pb="1">
        <input name="I" num_pins="21"/>
        <output name="O" num_pins="21"/>
        <pb_type name="logic0" blif_model=".subckt logic0" num_pb="1">
          <output name="logic0" num_pins="1"/>
        </pb_type>
        <pb_type name="logic1" blif_model=".subckt logic1" num_pb="1">
          <output name="logic1" num_pins="1"/>
        </pb_type>
        <interconnect>
          <complete name="opt_const" input="opt.I logic0.logic0 logic1.logic1" output="opt.O"/>
        </interconnect>
      </pb_type>
      <!-- OPTIONAL USER RESET -->
      <pb_type name="sr_opt" num_pb="1">
        <input name="I" num_pins="1"/>
        <output name="O" num_pins="1"/>
        <pb_type name="sr_inv" blif_model=".subckt inverter" num_pb="1">
          <input name="a" num_pins="1"/>
          <output name="z" num_pins="1"/>
          <delay_constant max="100.0e-12" min="100.0e-12" in_port="sr_inv.a" out_port="sr_inv.z"/>
        </pb_type>
        <interconnect>
          <direct name="direct1" input="sr_opt.I" output="sr_inv.a"/>
          <mux name="sr_mux" input="sr_opt.I sr_inv.z" output="sr_opt.O"/>
        </interconnect>
      </pb_type>
      <!-- OPTIONAL CLOCK INVERSION -->
      <pb_type name="clk_opt" num_pb="1">
        <input name="I" num_pins="1"/>
        <output name="O" num_pins="1"/>
        <pb_type name="clk_inv" blif_model=".subckt clock_inverter" num_pb="1">
          <clock name="a" num_pins="1"/>
          <output name="z" num_pins="1"/>
          <delay_constant max="100.0e-12" min="100.0e-12" in_port="clk_inv.a" out_port="clk_inv.z"/>
        </pb_type>
        <interconnect>
          <direct name="direct1" input="clk_opt.I" output="clk_inv.a"/>
          <mux name="clk_mux" input="clk_opt.I clk_inv.z" output="clk_opt.O"/>
        </interconnect>
      </pb_type>
      <pb_type name="z_pad" blif_model=".subckt z_pad_tieoff" num_pb="16">
        <output name="logic0" num_pins="1"/>
      </pb_type>
      <interconnect>
        <!-- tile fabric connections -->
        <!-- normal routable inputs -->
        <!-- 2 47 unused -->
        <mux name="II_2_46" input="dsp.I02[0] dsp.I02[1] dsp.I02[2] dsp.I02[3] dsp.I02[4] dsp.I02[5] dsp.I02[6] dsp.I02[7] dsp.I02[8] dsp.I02[9] dsp.I02[10] dsp.I02[11] dsp.I32[0] dsp.I32[1] dsp.I32[2] dsp.I32[3] dsp.I32[4] dsp.I32[5] dsp.I32[6] dsp.I32[7] dsp.I32[8] dsp.I32[9] dsp.I32[10] dsp.I32[11] " output="opt.I[2]" add_const_input="false">
          <delay_constant in_port="dsp.I02[0] dsp.I02[1] dsp.I02[2] dsp.I02[3] dsp.I02[4] dsp.I02[5] dsp.I02[6] dsp.I02[7] dsp.I02[8] dsp.I02[9] dsp.I02[10] dsp.I02[11] dsp.I32[0] dsp.I32[1] dsp.I32[2] dsp.I32[3] dsp.I32[4] dsp.I32[5] dsp.I32[6] dsp.I32[7] dsp.I32[8] dsp.I32[9] dsp.I32[10] dsp.I32[11] " out_port="opt.I[2]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <!-- 2 45 unused -->
        <mux name="II_2_44" input="dsp.I02[0] dsp.I02[1] dsp.I02[2] dsp.I02[3] dsp.I02[4] dsp.I02[5] dsp.I02[6] dsp.I02[7] dsp.I02[8] dsp.I02[9] dsp.I02[10] dsp.I02[11] dsp.I22[0] dsp.I22[1] dsp.I22[2] dsp.I22[3] dsp.I22[4] dsp.I22[5] dsp.I22[6] dsp.I22[7] dsp.I22[8] dsp.I22[9] dsp.I22[10] dsp.I22[11] " output="opt.I[10]" add_const_input="false">
          <delay_constant in_port="dsp.I02[0] dsp.I02[1] dsp.I02[2] dsp.I02[3] dsp.I02[4] dsp.I02[5] dsp.I02[6] dsp.I02[7] dsp.I02[8] dsp.I02[9] dsp.I02[10] dsp.I02[11] dsp.I22[0] dsp.I22[1] dsp.I22[2] dsp.I22[3] dsp.I22[4] dsp.I22[5] dsp.I22[6] dsp.I22[7] dsp.I22[8] dsp.I22[9] dsp.I22[10] dsp.I22[11] " out_port="opt.I[10]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <!-- 2 43 unused -->
        <mux name="II_2_42" input="dsp.I02[0] dsp.I02[1] dsp.I02[2] dsp.I02[3] dsp.I02[4] dsp.I02[5] dsp.I02[6] dsp.I02[7] dsp.I02[8] dsp.I02[9] dsp.I02[10] dsp.I02[11] dsp.I32[0] dsp.I32[1] dsp.I32[2] dsp.I32[3] dsp.I32[4] dsp.I32[5] dsp.I32[6] dsp.I32[7] dsp.I32[8] dsp.I32[9] dsp.I32[10] dsp.I32[11] " output="dsp_rtl.a_i[17]" add_const_input="false">
          <delay_constant in_port="dsp.I02[0] dsp.I02[1] dsp.I02[2] dsp.I02[3] dsp.I02[4] dsp.I02[5] dsp.I02[6] dsp.I02[7] dsp.I02[8] dsp.I02[9] dsp.I02[10] dsp.I02[11] dsp.I32[0] dsp.I32[1] dsp.I32[2] dsp.I32[3] dsp.I32[4] dsp.I32[5] dsp.I32[6] dsp.I32[7] dsp.I32[8] dsp.I32[9] dsp.I32[10] dsp.I32[11] " out_port="dsp_rtl.a_i[17]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <!-- 2 41 unused -->
        <mux name="II_2_40" input="dsp.I02[0] dsp.I02[1] dsp.I02[2] dsp.I02[3] dsp.I02[4] dsp.I02[5] dsp.I02[6] dsp.I02[7] dsp.I02[8] dsp.I02[9] dsp.I02[10] dsp.I02[11] dsp.I32[0] dsp.I32[1] dsp.I32[2] dsp.I32[3] dsp.I32[4] dsp.I32[5] dsp.I32[6] dsp.I32[7] dsp.I32[8] dsp.I32[9] dsp.I32[10] dsp.I32[11] " output="dsp_rtl.b_i[17]" add_const_input="false">
          <delay_constant in_port="dsp.I02[0] dsp.I02[1] dsp.I02[2] dsp.I02[3] dsp.I02[4] dsp.I02[5] dsp.I02[6] dsp.I02[7] dsp.I02[8] dsp.I02[9] dsp.I02[10] dsp.I02[11] dsp.I32[0] dsp.I32[1] dsp.I32[2] dsp.I32[3] dsp.I32[4] dsp.I32[5] dsp.I32[6] dsp.I32[7] dsp.I32[8] dsp.I32[9] dsp.I32[10] dsp.I32[11] " out_port="dsp_rtl.b_i[17]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <!-- 2 39 unused -->
        <mux name="II_2_38" input="dsp.I02[0] dsp.I02[1] dsp.I02[2] dsp.I02[3] dsp.I02[4] dsp.I02[5] dsp.I02[6] dsp.I02[7] dsp.I02[8] dsp.I02[9] dsp.I02[10] dsp.I02[11] dsp.I22[0] dsp.I22[1] dsp.I22[2] dsp.I22[3] dsp.I22[4] dsp.I22[5] dsp.I22[6] dsp.I22[7] dsp.I22[8] dsp.I22[9] dsp.I22[10] dsp.I22[11] " output="opt.I[1]" add_const_input="false">
          <delay_constant in_port="dsp.I02[0] dsp.I02[1] dsp.I02[2] dsp.I02[3] dsp.I02[4] dsp.I02[5] dsp.I02[6] dsp.I02[7] dsp.I02[8] dsp.I02[9] dsp.I02[10] dsp.I02[11] dsp.I22[0] dsp.I22[1] dsp.I22[2] dsp.I22[3] dsp.I22[4] dsp.I22[5] dsp.I22[6] dsp.I22[7] dsp.I22[8] dsp.I22[9] dsp.I22[10] dsp.I22[11] " out_port="opt.I[1]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <!-- 2 37 unused -->
        <mux name="II_2_36" input="dsp.I02[0] dsp.I02[1] dsp.I02[2] dsp.I02[3] dsp.I02[4] dsp.I02[5] dsp.I02[6] dsp.I02[7] dsp.I02[8] dsp.I02[9] dsp.I02[10] dsp.I02[11] dsp.I32[0] dsp.I32[1] dsp.I32[2] dsp.I32[3] dsp.I32[4] dsp.I32[5] dsp.I32[6] dsp.I32[7] dsp.I32[8] dsp.I32[9] dsp.I32[10] dsp.I32[11] " output="opt.I[9]" add_const_input="false">
          <delay_constant in_port="dsp.I02[0] dsp.I02[1] dsp.I02[2] dsp.I02[3] dsp.I02[4] dsp.I02[5] dsp.I02[6] dsp.I02[7] dsp.I02[8] dsp.I02[9] dsp.I02[10] dsp.I02[11] dsp.I32[0] dsp.I32[1] dsp.I32[2] dsp.I32[3] dsp.I32[4] dsp.I32[5] dsp.I32[6] dsp.I32[7] dsp.I32[8] dsp.I32[9] dsp.I32[10] dsp.I32[11] " out_port="opt.I[9]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <!-- 2 35 unused -->
        <mux name="II_2_34" input="dsp.I02[0] dsp.I02[1] dsp.I02[2] dsp.I02[3] dsp.I02[4] dsp.I02[5] dsp.I02[6] dsp.I02[7] dsp.I02[8] dsp.I02[9] dsp.I02[10] dsp.I02[11] dsp.I32[0] dsp.I32[1] dsp.I32[2] dsp.I32[3] dsp.I32[4] dsp.I32[5] dsp.I32[6] dsp.I32[7] dsp.I32[8] dsp.I32[9] dsp.I32[10] dsp.I32[11] " output="dsp_rtl.a_i[16]" add_const_input="false">
          <delay_constant in_port="dsp.I02[0] dsp.I02[1] dsp.I02[2] dsp.I02[3] dsp.I02[4] dsp.I02[5] dsp.I02[6] dsp.I02[7] dsp.I02[8] dsp.I02[9] dsp.I02[10] dsp.I02[11] dsp.I32[0] dsp.I32[1] dsp.I32[2] dsp.I32[3] dsp.I32[4] dsp.I32[5] dsp.I32[6] dsp.I32[7] dsp.I32[8] dsp.I32[9] dsp.I32[10] dsp.I32[11] " out_port="dsp_rtl.a_i[16]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <!-- 2 33 unused -->
        <mux name="II_2_32" input="dsp.I02[0] dsp.I02[1] dsp.I02[2] dsp.I02[3] dsp.I02[4] dsp.I02[5] dsp.I02[6] dsp.I02[7] dsp.I02[8] dsp.I02[9] dsp.I02[10] dsp.I02[11] dsp.I22[0] dsp.I22[1] dsp.I22[2] dsp.I22[3] dsp.I22[4] dsp.I22[5] dsp.I22[6] dsp.I22[7] dsp.I22[8] dsp.I22[9] dsp.I22[10] dsp.I22[11] " output="dsp_rtl.b_i[16]" add_const_input="false">
          <delay_constant in_port="dsp.I02[0] dsp.I02[1] dsp.I02[2] dsp.I02[3] dsp.I02[4] dsp.I02[5] dsp.I02[6] dsp.I02[7] dsp.I02[8] dsp.I02[9] dsp.I02[10] dsp.I02[11] dsp.I22[0] dsp.I22[1] dsp.I22[2] dsp.I22[3] dsp.I22[4] dsp.I22[5] dsp.I22[6] dsp.I22[7] dsp.I22[8] dsp.I22[9] dsp.I22[10] dsp.I22[11] " out_port="dsp_rtl.b_i[16]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <!-- 2 31 unused -->
        <mux name="II_2_30" input="dsp.I02[0] dsp.I02[1] dsp.I02[2] dsp.I02[3] dsp.I02[4] dsp.I02[5] dsp.I02[6] dsp.I02[7] dsp.I02[8] dsp.I02[9] dsp.I02[10] dsp.I02[11] dsp.I32[0] dsp.I32[1] dsp.I32[2] dsp.I32[3] dsp.I32[4] dsp.I32[5] dsp.I32[6] dsp.I32[7] dsp.I32[8] dsp.I32[9] dsp.I32[10] dsp.I32[11] " output="opt.I[0]" add_const_input="false">
          <delay_constant in_port="dsp.I02[0] dsp.I02[1] dsp.I02[2] dsp.I02[3] dsp.I02[4] dsp.I02[5] dsp.I02[6] dsp.I02[7] dsp.I02[8] dsp.I02[9] dsp.I02[10] dsp.I02[11] dsp.I32[0] dsp.I32[1] dsp.I32[2] dsp.I32[3] dsp.I32[4] dsp.I32[5] dsp.I32[6] dsp.I32[7] dsp.I32[8] dsp.I32[9] dsp.I32[10] dsp.I32[11] " out_port="opt.I[0]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <!-- 2 29 unused -->
        <mux name="II_2_28" input="dsp.I02[0] dsp.I02[1] dsp.I02[2] dsp.I02[3] dsp.I02[4] dsp.I02[5] dsp.I02[6] dsp.I02[7] dsp.I02[8] dsp.I02[9] dsp.I02[10] dsp.I02[11] dsp.I32[0] dsp.I32[1] dsp.I32[2] dsp.I32[3] dsp.I32[4] dsp.I32[5] dsp.I32[6] dsp.I32[7] dsp.I32[8] dsp.I32[9] dsp.I32[10] dsp.I32[11] " output="opt.I[8]" add_const_input="false">
          <delay_constant in_port="dsp.I02[0] dsp.I02[1] dsp.I02[2] dsp.I02[3] dsp.I02[4] dsp.I02[5] dsp.I02[6] dsp.I02[7] dsp.I02[8] dsp.I02[9] dsp.I02[10] dsp.I02[11] dsp.I32[0] dsp.I32[1] dsp.I32[2] dsp.I32[3] dsp.I32[4] dsp.I32[5] dsp.I32[6] dsp.I32[7] dsp.I32[8] dsp.I32[9] dsp.I32[10] dsp.I32[11] " out_port="opt.I[8]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <!-- 2 27 unused -->
        <mux name="II_2_26" input="dsp.I02[0] dsp.I02[1] dsp.I02[2] dsp.I02[3] dsp.I02[4] dsp.I02[5] dsp.I02[6] dsp.I02[7] dsp.I02[8] dsp.I02[9] dsp.I02[10] dsp.I02[11] dsp.I22[0] dsp.I22[1] dsp.I22[2] dsp.I22[3] dsp.I22[4] dsp.I22[5] dsp.I22[6] dsp.I22[7] dsp.I22[8] dsp.I22[9] dsp.I22[10] dsp.I22[11] " output="dsp_rtl.a_i[15]" add_const_input="false">
          <delay_constant in_port="dsp.I02[0] dsp.I02[1] dsp.I02[2] dsp.I02[3] dsp.I02[4] dsp.I02[5] dsp.I02[6] dsp.I02[7] dsp.I02[8] dsp.I02[9] dsp.I02[10] dsp.I02[11] dsp.I22[0] dsp.I22[1] dsp.I22[2] dsp.I22[3] dsp.I22[4] dsp.I22[5] dsp.I22[6] dsp.I22[7] dsp.I22[8] dsp.I22[9] dsp.I22[10] dsp.I22[11] " out_port="dsp_rtl.a_i[15]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <!-- 2 25 unused -->
        <mux name="II_2_24" input="dsp.I02[0] dsp.I02[1] dsp.I02[2] dsp.I02[3] dsp.I02[4] dsp.I02[5] dsp.I02[6] dsp.I02[7] dsp.I02[8] dsp.I02[9] dsp.I02[10] dsp.I02[11] dsp.I32[0] dsp.I32[1] dsp.I32[2] dsp.I32[3] dsp.I32[4] dsp.I32[5] dsp.I32[6] dsp.I32[7] dsp.I32[8] dsp.I32[9] dsp.I32[10] dsp.I32[11] " output="dsp_rtl.b_i[15]" add_const_input="false">
          <delay_constant in_port="dsp.I02[0] dsp.I02[1] dsp.I02[2] dsp.I02[3] dsp.I02[4] dsp.I02[5] dsp.I02[6] dsp.I02[7] dsp.I02[8] dsp.I02[9] dsp.I02[10] dsp.I02[11] dsp.I32[0] dsp.I32[1] dsp.I32[2] dsp.I32[3] dsp.I32[4] dsp.I32[5] dsp.I32[6] dsp.I32[7] dsp.I32[8] dsp.I32[9] dsp.I32[10] dsp.I32[11] " out_port="dsp_rtl.b_i[15]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <!-- 2 23 unused -->
        <!-- 2 22 unused -->
        <!-- 2 21 unused -->
        <mux name="II_2_20" input="dsp.I02[0] dsp.I02[1] dsp.I02[2] dsp.I02[3] dsp.I02[4] dsp.I02[5] dsp.I02[6] dsp.I02[7] dsp.I02[8] dsp.I02[9] dsp.I02[10] dsp.I02[11] dsp.I22[0] dsp.I22[1] dsp.I22[2] dsp.I22[3] dsp.I22[4] dsp.I22[5] dsp.I22[6] dsp.I22[7] dsp.I22[8] dsp.I22[9] dsp.I22[10] dsp.I22[11] " output="opt.I[7]" add_const_input="false">
          <delay_constant in_port="dsp.I02[0] dsp.I02[1] dsp.I02[2] dsp.I02[3] dsp.I02[4] dsp.I02[5] dsp.I02[6] dsp.I02[7] dsp.I02[8] dsp.I02[9] dsp.I02[10] dsp.I02[11] dsp.I22[0] dsp.I22[1] dsp.I22[2] dsp.I22[3] dsp.I22[4] dsp.I22[5] dsp.I22[6] dsp.I22[7] dsp.I22[8] dsp.I22[9] dsp.I22[10] dsp.I22[11] " out_port="opt.I[7]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <!-- 2 19 unused -->
        <mux name="II_2_18" input="dsp.I02[0] dsp.I02[1] dsp.I02[2] dsp.I02[3] dsp.I02[4] dsp.I02[5] dsp.I02[6] dsp.I02[7] dsp.I02[8] dsp.I02[9] dsp.I02[10] dsp.I02[11] dsp.I32[0] dsp.I32[1] dsp.I32[2] dsp.I32[3] dsp.I32[4] dsp.I32[5] dsp.I32[6] dsp.I32[7] dsp.I32[8] dsp.I32[9] dsp.I32[10] dsp.I32[11] " output="dsp_rtl.a_i[14]" add_const_input="false">
          <delay_constant in_port="dsp.I02[0] dsp.I02[1] dsp.I02[2] dsp.I02[3] dsp.I02[4] dsp.I02[5] dsp.I02[6] dsp.I02[7] dsp.I02[8] dsp.I02[9] dsp.I02[10] dsp.I02[11] dsp.I32[0] dsp.I32[1] dsp.I32[2] dsp.I32[3] dsp.I32[4] dsp.I32[5] dsp.I32[6] dsp.I32[7] dsp.I32[8] dsp.I32[9] dsp.I32[10] dsp.I32[11] " out_port="dsp_rtl.a_i[14]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <!-- 2 17 unused -->
        <mux name="II_2_16" input="dsp.I02[0] dsp.I02[1] dsp.I02[2] dsp.I02[3] dsp.I02[4] dsp.I02[5] dsp.I02[6] dsp.I02[7] dsp.I02[8] dsp.I02[9] dsp.I02[10] dsp.I02[11] dsp.I32[0] dsp.I32[1] dsp.I32[2] dsp.I32[3] dsp.I32[4] dsp.I32[5] dsp.I32[6] dsp.I32[7] dsp.I32[8] dsp.I32[9] dsp.I32[10] dsp.I32[11] " output="dsp_rtl.b_i[14]" add_const_input="false">
          <delay_constant in_port="dsp.I02[0] dsp.I02[1] dsp.I02[2] dsp.I02[3] dsp.I02[4] dsp.I02[5] dsp.I02[6] dsp.I02[7] dsp.I02[8] dsp.I02[9] dsp.I02[10] dsp.I02[11] dsp.I32[0] dsp.I32[1] dsp.I32[2] dsp.I32[3] dsp.I32[4] dsp.I32[5] dsp.I32[6] dsp.I32[7] dsp.I32[8] dsp.I32[9] dsp.I32[10] dsp.I32[11] " out_port="dsp_rtl.b_i[14]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <!-- 2 15 unused -->
        <!-- 2 14 unused -->
        <!-- 2 13 unused -->
        <mux name="II_2_12" input="dsp.I02[0] dsp.I02[1] dsp.I02[2] dsp.I02[3] dsp.I02[4] dsp.I02[5] dsp.I02[6] dsp.I02[7] dsp.I02[8] dsp.I02[9] dsp.I02[10] dsp.I02[11] dsp.I32[0] dsp.I32[1] dsp.I32[2] dsp.I32[3] dsp.I32[4] dsp.I32[5] dsp.I32[6] dsp.I32[7] dsp.I32[8] dsp.I32[9] dsp.I32[10] dsp.I32[11] " output="opt.I[6]" add_const_input="false">
          <delay_constant in_port="dsp.I02[0] dsp.I02[1] dsp.I02[2] dsp.I02[3] dsp.I02[4] dsp.I02[5] dsp.I02[6] dsp.I02[7] dsp.I02[8] dsp.I02[9] dsp.I02[10] dsp.I02[11] dsp.I32[0] dsp.I32[1] dsp.I32[2] dsp.I32[3] dsp.I32[4] dsp.I32[5] dsp.I32[6] dsp.I32[7] dsp.I32[8] dsp.I32[9] dsp.I32[10] dsp.I32[11] " out_port="opt.I[6]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <!-- 2 11 unused -->
        <mux name="II_2_10" input="dsp.I02[0] dsp.I02[1] dsp.I02[2] dsp.I02[3] dsp.I02[4] dsp.I02[5] dsp.I02[6] dsp.I02[7] dsp.I02[8] dsp.I02[9] dsp.I02[10] dsp.I02[11] dsp.I32[0] dsp.I32[1] dsp.I32[2] dsp.I32[3] dsp.I32[4] dsp.I32[5] dsp.I32[6] dsp.I32[7] dsp.I32[8] dsp.I32[9] dsp.I32[10] dsp.I32[11] " output="dsp_rtl.a_i[13]" add_const_input="false">
          <delay_constant in_port="dsp.I02[0] dsp.I02[1] dsp.I02[2] dsp.I02[3] dsp.I02[4] dsp.I02[5] dsp.I02[6] dsp.I02[7] dsp.I02[8] dsp.I02[9] dsp.I02[10] dsp.I02[11] dsp.I32[0] dsp.I32[1] dsp.I32[2] dsp.I32[3] dsp.I32[4] dsp.I32[5] dsp.I32[6] dsp.I32[7] dsp.I32[8] dsp.I32[9] dsp.I32[10] dsp.I32[11] " out_port="dsp_rtl.a_i[13]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <!-- 2 9 unused -->
        <mux name="II_2_8" input="dsp.I02[0] dsp.I02[1] dsp.I02[2] dsp.I02[3] dsp.I02[4] dsp.I02[5] dsp.I02[6] dsp.I02[7] dsp.I02[8] dsp.I02[9] dsp.I02[10] dsp.I02[11] dsp.I22[0] dsp.I22[1] dsp.I22[2] dsp.I22[3] dsp.I22[4] dsp.I22[5] dsp.I22[6] dsp.I22[7] dsp.I22[8] dsp.I22[9] dsp.I22[10] dsp.I22[11] " output="dsp_rtl.b_i[13]" add_const_input="false">
          <delay_constant in_port="dsp.I02[0] dsp.I02[1] dsp.I02[2] dsp.I02[3] dsp.I02[4] dsp.I02[5] dsp.I02[6] dsp.I02[7] dsp.I02[8] dsp.I02[9] dsp.I02[10] dsp.I02[11] dsp.I22[0] dsp.I22[1] dsp.I22[2] dsp.I22[3] dsp.I22[4] dsp.I22[5] dsp.I22[6] dsp.I22[7] dsp.I22[8] dsp.I22[9] dsp.I22[10] dsp.I22[11] " out_port="dsp_rtl.b_i[13]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <!-- 2 7 unused -->
        <!-- 2 6 unused -->
        <!-- 2 5 unused -->
        <mux name="II_2_4" input="dsp.I02[0] dsp.I02[1] dsp.I02[2] dsp.I02[3] dsp.I02[4] dsp.I02[5] dsp.I02[6] dsp.I02[7] dsp.I02[8] dsp.I02[9] dsp.I02[10] dsp.I02[11] dsp.I32[0] dsp.I32[1] dsp.I32[2] dsp.I32[3] dsp.I32[4] dsp.I32[5] dsp.I32[6] dsp.I32[7] dsp.I32[8] dsp.I32[9] dsp.I32[10] dsp.I32[11] " output="opt.I[5]" add_const_input="false">
          <delay_constant in_port="dsp.I02[0] dsp.I02[1] dsp.I02[2] dsp.I02[3] dsp.I02[4] dsp.I02[5] dsp.I02[6] dsp.I02[7] dsp.I02[8] dsp.I02[9] dsp.I02[10] dsp.I02[11] dsp.I32[0] dsp.I32[1] dsp.I32[2] dsp.I32[3] dsp.I32[4] dsp.I32[5] dsp.I32[6] dsp.I32[7] dsp.I32[8] dsp.I32[9] dsp.I32[10] dsp.I32[11] " out_port="opt.I[5]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <!-- 2 3 unused -->
        <mux name="II_2_2" input="dsp.I02[0] dsp.I02[1] dsp.I02[2] dsp.I02[3] dsp.I02[4] dsp.I02[5] dsp.I02[6] dsp.I02[7] dsp.I02[8] dsp.I02[9] dsp.I02[10] dsp.I02[11] dsp.I22[0] dsp.I22[1] dsp.I22[2] dsp.I22[3] dsp.I22[4] dsp.I22[5] dsp.I22[6] dsp.I22[7] dsp.I22[8] dsp.I22[9] dsp.I22[10] dsp.I22[11] " output="dsp_rtl.a_i[12]" add_const_input="false">
          <delay_constant in_port="dsp.I02[0] dsp.I02[1] dsp.I02[2] dsp.I02[3] dsp.I02[4] dsp.I02[5] dsp.I02[6] dsp.I02[7] dsp.I02[8] dsp.I02[9] dsp.I02[10] dsp.I02[11] dsp.I22[0] dsp.I22[1] dsp.I22[2] dsp.I22[3] dsp.I22[4] dsp.I22[5] dsp.I22[6] dsp.I22[7] dsp.I22[8] dsp.I22[9] dsp.I22[10] dsp.I22[11] " out_port="dsp_rtl.a_i[12]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <!-- 2 1 unused -->
        <mux name="II_2_0" input="dsp.I02[0] dsp.I02[1] dsp.I02[2] dsp.I02[3] dsp.I02[4] dsp.I02[5] dsp.I02[6] dsp.I02[7] dsp.I02[8] dsp.I02[9] dsp.I02[10] dsp.I02[11] dsp.I32[0] dsp.I32[1] dsp.I32[2] dsp.I32[3] dsp.I32[4] dsp.I32[5] dsp.I32[6] dsp.I32[7] dsp.I32[8] dsp.I32[9] dsp.I32[10] dsp.I32[11] " output="dsp_rtl.b_i[12]" add_const_input="false">
          <delay_constant in_port="dsp.I02[0] dsp.I02[1] dsp.I02[2] dsp.I02[3] dsp.I02[4] dsp.I02[5] dsp.I02[6] dsp.I02[7] dsp.I02[8] dsp.I02[9] dsp.I02[10] dsp.I02[11] dsp.I32[0] dsp.I32[1] dsp.I32[2] dsp.I32[3] dsp.I32[4] dsp.I32[5] dsp.I32[6] dsp.I32[7] dsp.I32[8] dsp.I32[9] dsp.I32[10] dsp.I32[11] " out_port="dsp_rtl.b_i[12]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <!-- 1 47 unused -->
        <!-- 1 46 unused -->
        <!-- 1 45 unused -->
        <mux name="II_1_44" input="dsp.I01[0] dsp.I01[1] dsp.I01[2] dsp.I01[3] dsp.I01[4] dsp.I01[5] dsp.I01[6] dsp.I01[7] dsp.I01[8] dsp.I01[9] dsp.I01[10] dsp.I01[11] dsp.I21[0] dsp.I21[1] dsp.I21[2] dsp.I21[3] dsp.I21[4] dsp.I21[5] dsp.I21[6] dsp.I21[7] dsp.I21[8] dsp.I21[9] dsp.I21[10] dsp.I21[11] " output="opt.I[20]" add_const_input="false">
          <delay_constant in_port="dsp.I01[0] dsp.I01[1] dsp.I01[2] dsp.I01[3] dsp.I01[4] dsp.I01[5] dsp.I01[6] dsp.I01[7] dsp.I01[8] dsp.I01[9] dsp.I01[10] dsp.I01[11] dsp.I21[0] dsp.I21[1] dsp.I21[2] dsp.I21[3] dsp.I21[4] dsp.I21[5] dsp.I21[6] dsp.I21[7] dsp.I21[8] dsp.I21[9] dsp.I21[10] dsp.I21[11] " out_port="opt.I[20]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <!-- 1 43 unused -->
        <mux name="II_1_42" input="dsp.I01[0] dsp.I01[1] dsp.I01[2] dsp.I01[3] dsp.I01[4] dsp.I01[5] dsp.I01[6] dsp.I01[7] dsp.I01[8] dsp.I01[9] dsp.I01[10] dsp.I01[11] dsp.I31[0] dsp.I31[1] dsp.I31[2] dsp.I31[3] dsp.I31[4] dsp.I31[5] dsp.I31[6] dsp.I31[7] dsp.I31[8] dsp.I31[9] dsp.I31[10] dsp.I31[11] " output="dsp_rtl.a_i[11]" add_const_input="false">
          <delay_constant in_port="dsp.I01[0] dsp.I01[1] dsp.I01[2] dsp.I01[3] dsp.I01[4] dsp.I01[5] dsp.I01[6] dsp.I01[7] dsp.I01[8] dsp.I01[9] dsp.I01[10] dsp.I01[11] dsp.I31[0] dsp.I31[1] dsp.I31[2] dsp.I31[3] dsp.I31[4] dsp.I31[5] dsp.I31[6] dsp.I31[7] dsp.I31[8] dsp.I31[9] dsp.I31[10] dsp.I31[11] " out_port="dsp_rtl.a_i[11]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <!-- 1 41 unused -->
        <mux name="II_1_40" input="dsp.I01[0] dsp.I01[1] dsp.I01[2] dsp.I01[3] dsp.I01[4] dsp.I01[5] dsp.I01[6] dsp.I01[7] dsp.I01[8] dsp.I01[9] dsp.I01[10] dsp.I01[11] dsp.I31[0] dsp.I31[1] dsp.I31[2] dsp.I31[3] dsp.I31[4] dsp.I31[5] dsp.I31[6] dsp.I31[7] dsp.I31[8] dsp.I31[9] dsp.I31[10] dsp.I31[11] " output="dsp_rtl.b_i[11]" add_const_input="false">
          <delay_constant in_port="dsp.I01[0] dsp.I01[1] dsp.I01[2] dsp.I01[3] dsp.I01[4] dsp.I01[5] dsp.I01[6] dsp.I01[7] dsp.I01[8] dsp.I01[9] dsp.I01[10] dsp.I01[11] dsp.I31[0] dsp.I31[1] dsp.I31[2] dsp.I31[3] dsp.I31[4] dsp.I31[5] dsp.I31[6] dsp.I31[7] dsp.I31[8] dsp.I31[9] dsp.I31[10] dsp.I31[11] " out_port="dsp_rtl.b_i[11]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <!-- 1 39 unused -->
        <!-- 1 38 unused -->
        <!-- 1 37 unused -->
        <mux name="II_1_36" input="dsp.I01[0] dsp.I01[1] dsp.I01[2] dsp.I01[3] dsp.I01[4] dsp.I01[5] dsp.I01[6] dsp.I01[7] dsp.I01[8] dsp.I01[9] dsp.I01[10] dsp.I01[11] dsp.I31[0] dsp.I31[1] dsp.I31[2] dsp.I31[3] dsp.I31[4] dsp.I31[5] dsp.I31[6] dsp.I31[7] dsp.I31[8] dsp.I31[9] dsp.I31[10] dsp.I31[11] " output="opt.I[19]" add_const_input="false">
          <delay_constant in_port="dsp.I01[0] dsp.I01[1] dsp.I01[2] dsp.I01[3] dsp.I01[4] dsp.I01[5] dsp.I01[6] dsp.I01[7] dsp.I01[8] dsp.I01[9] dsp.I01[10] dsp.I01[11] dsp.I31[0] dsp.I31[1] dsp.I31[2] dsp.I31[3] dsp.I31[4] dsp.I31[5] dsp.I31[6] dsp.I31[7] dsp.I31[8] dsp.I31[9] dsp.I31[10] dsp.I31[11] " out_port="opt.I[19]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <!-- 1 35 unused -->
        <mux name="II_1_34" input="dsp.I01[0] dsp.I01[1] dsp.I01[2] dsp.I01[3] dsp.I01[4] dsp.I01[5] dsp.I01[6] dsp.I01[7] dsp.I01[8] dsp.I01[9] dsp.I01[10] dsp.I01[11] dsp.I31[0] dsp.I31[1] dsp.I31[2] dsp.I31[3] dsp.I31[4] dsp.I31[5] dsp.I31[6] dsp.I31[7] dsp.I31[8] dsp.I31[9] dsp.I31[10] dsp.I31[11] " output="dsp_rtl.a_i[10]" add_const_input="false">
          <delay_constant in_port="dsp.I01[0] dsp.I01[1] dsp.I01[2] dsp.I01[3] dsp.I01[4] dsp.I01[5] dsp.I01[6] dsp.I01[7] dsp.I01[8] dsp.I01[9] dsp.I01[10] dsp.I01[11] dsp.I31[0] dsp.I31[1] dsp.I31[2] dsp.I31[3] dsp.I31[4] dsp.I31[5] dsp.I31[6] dsp.I31[7] dsp.I31[8] dsp.I31[9] dsp.I31[10] dsp.I31[11] " out_port="dsp_rtl.a_i[10]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <!-- 1 33 unused -->
        <mux name="II_1_32" input="dsp.I01[0] dsp.I01[1] dsp.I01[2] dsp.I01[3] dsp.I01[4] dsp.I01[5] dsp.I01[6] dsp.I01[7] dsp.I01[8] dsp.I01[9] dsp.I01[10] dsp.I01[11] dsp.I21[0] dsp.I21[1] dsp.I21[2] dsp.I21[3] dsp.I21[4] dsp.I21[5] dsp.I21[6] dsp.I21[7] dsp.I21[8] dsp.I21[9] dsp.I21[10] dsp.I21[11] " output="dsp_rtl.b_i[10]" add_const_input="false">
          <delay_constant in_port="dsp.I01[0] dsp.I01[1] dsp.I01[2] dsp.I01[3] dsp.I01[4] dsp.I01[5] dsp.I01[6] dsp.I01[7] dsp.I01[8] dsp.I01[9] dsp.I01[10] dsp.I01[11] dsp.I21[0] dsp.I21[1] dsp.I21[2] dsp.I21[3] dsp.I21[4] dsp.I21[5] dsp.I21[6] dsp.I21[7] dsp.I21[8] dsp.I21[9] dsp.I21[10] dsp.I21[11] " out_port="dsp_rtl.b_i[10]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <!-- 1 31 unused -->
        <!-- 1 30 unused -->
        <!-- 1 29 unused -->
        <mux name="II_1_28" input="dsp.I01[0] dsp.I01[1] dsp.I01[2] dsp.I01[3] dsp.I01[4] dsp.I01[5] dsp.I01[6] dsp.I01[7] dsp.I01[8] dsp.I01[9] dsp.I01[10] dsp.I01[11] dsp.I31[0] dsp.I31[1] dsp.I31[2] dsp.I31[3] dsp.I31[4] dsp.I31[5] dsp.I31[6] dsp.I31[7] dsp.I31[8] dsp.I31[9] dsp.I31[10] dsp.I31[11] " output="opt.I[18]" add_const_input="false">
          <delay_constant in_port="dsp.I01[0] dsp.I01[1] dsp.I01[2] dsp.I01[3] dsp.I01[4] dsp.I01[5] dsp.I01[6] dsp.I01[7] dsp.I01[8] dsp.I01[9] dsp.I01[10] dsp.I01[11] dsp.I31[0] dsp.I31[1] dsp.I31[2] dsp.I31[3] dsp.I31[4] dsp.I31[5] dsp.I31[6] dsp.I31[7] dsp.I31[8] dsp.I31[9] dsp.I31[10] dsp.I31[11] " out_port="opt.I[18]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <!-- 1 27 unused -->
        <mux name="II_1_26" input="dsp.I01[0] dsp.I01[1] dsp.I01[2] dsp.I01[3] dsp.I01[4] dsp.I01[5] dsp.I01[6] dsp.I01[7] dsp.I01[8] dsp.I01[9] dsp.I01[10] dsp.I01[11] dsp.I21[0] dsp.I21[1] dsp.I21[2] dsp.I21[3] dsp.I21[4] dsp.I21[5] dsp.I21[6] dsp.I21[7] dsp.I21[8] dsp.I21[9] dsp.I21[10] dsp.I21[11] " output="dsp_rtl.a_i[9]" add_const_input="false">
          <delay_constant in_port="dsp.I01[0] dsp.I01[1] dsp.I01[2] dsp.I01[3] dsp.I01[4] dsp.I01[5] dsp.I01[6] dsp.I01[7] dsp.I01[8] dsp.I01[9] dsp.I01[10] dsp.I01[11] dsp.I21[0] dsp.I21[1] dsp.I21[2] dsp.I21[3] dsp.I21[4] dsp.I21[5] dsp.I21[6] dsp.I21[7] dsp.I21[8] dsp.I21[9] dsp.I21[10] dsp.I21[11] " out_port="dsp_rtl.a_i[9]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <!-- 1 25 unused -->
        <mux name="II_1_24" input="dsp.I01[0] dsp.I01[1] dsp.I01[2] dsp.I01[3] dsp.I01[4] dsp.I01[5] dsp.I01[6] dsp.I01[7] dsp.I01[8] dsp.I01[9] dsp.I01[10] dsp.I01[11] dsp.I31[0] dsp.I31[1] dsp.I31[2] dsp.I31[3] dsp.I31[4] dsp.I31[5] dsp.I31[6] dsp.I31[7] dsp.I31[8] dsp.I31[9] dsp.I31[10] dsp.I31[11] " output="dsp_rtl.b_i[9]" add_const_input="false">
          <delay_constant in_port="dsp.I01[0] dsp.I01[1] dsp.I01[2] dsp.I01[3] dsp.I01[4] dsp.I01[5] dsp.I01[6] dsp.I01[7] dsp.I01[8] dsp.I01[9] dsp.I01[10] dsp.I01[11] dsp.I31[0] dsp.I31[1] dsp.I31[2] dsp.I31[3] dsp.I31[4] dsp.I31[5] dsp.I31[6] dsp.I31[7] dsp.I31[8] dsp.I31[9] dsp.I31[10] dsp.I31[11] " out_port="dsp_rtl.b_i[9]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <!-- 1 23 unused -->
        <!-- 1 22 unused -->
        <!-- 1 21 unused -->
        <mux name="II_1_20" input="dsp.I01[0] dsp.I01[1] dsp.I01[2] dsp.I01[3] dsp.I01[4] dsp.I01[5] dsp.I01[6] dsp.I01[7] dsp.I01[8] dsp.I01[9] dsp.I01[10] dsp.I01[11] dsp.I21[0] dsp.I21[1] dsp.I21[2] dsp.I21[3] dsp.I21[4] dsp.I21[5] dsp.I21[6] dsp.I21[7] dsp.I21[8] dsp.I21[9] dsp.I21[10] dsp.I21[11] " output="opt.I[17]" add_const_input="false">
          <delay_constant in_port="dsp.I01[0] dsp.I01[1] dsp.I01[2] dsp.I01[3] dsp.I01[4] dsp.I01[5] dsp.I01[6] dsp.I01[7] dsp.I01[8] dsp.I01[9] dsp.I01[10] dsp.I01[11] dsp.I21[0] dsp.I21[1] dsp.I21[2] dsp.I21[3] dsp.I21[4] dsp.I21[5] dsp.I21[6] dsp.I21[7] dsp.I21[8] dsp.I21[9] dsp.I21[10] dsp.I21[11] " out_port="opt.I[17]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <!-- 1 19 unused -->
        <mux name="II_1_18" input="dsp.I01[0] dsp.I01[1] dsp.I01[2] dsp.I01[3] dsp.I01[4] dsp.I01[5] dsp.I01[6] dsp.I01[7] dsp.I01[8] dsp.I01[9] dsp.I01[10] dsp.I01[11] dsp.I31[0] dsp.I31[1] dsp.I31[2] dsp.I31[3] dsp.I31[4] dsp.I31[5] dsp.I31[6] dsp.I31[7] dsp.I31[8] dsp.I31[9] dsp.I31[10] dsp.I31[11] " output="dsp_rtl.a_i[8]" add_const_input="false">
          <delay_constant in_port="dsp.I01[0] dsp.I01[1] dsp.I01[2] dsp.I01[3] dsp.I01[4] dsp.I01[5] dsp.I01[6] dsp.I01[7] dsp.I01[8] dsp.I01[9] dsp.I01[10] dsp.I01[11] dsp.I31[0] dsp.I31[1] dsp.I31[2] dsp.I31[3] dsp.I31[4] dsp.I31[5] dsp.I31[6] dsp.I31[7] dsp.I31[8] dsp.I31[9] dsp.I31[10] dsp.I31[11] " out_port="dsp_rtl.a_i[8]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <!-- 1 17 unused -->
        <mux name="II_1_16" input="dsp.I01[0] dsp.I01[1] dsp.I01[2] dsp.I01[3] dsp.I01[4] dsp.I01[5] dsp.I01[6] dsp.I01[7] dsp.I01[8] dsp.I01[9] dsp.I01[10] dsp.I01[11] dsp.I31[0] dsp.I31[1] dsp.I31[2] dsp.I31[3] dsp.I31[4] dsp.I31[5] dsp.I31[6] dsp.I31[7] dsp.I31[8] dsp.I31[9] dsp.I31[10] dsp.I31[11] " output="dsp_rtl.b_i[8]" add_const_input="false">
          <delay_constant in_port="dsp.I01[0] dsp.I01[1] dsp.I01[2] dsp.I01[3] dsp.I01[4] dsp.I01[5] dsp.I01[6] dsp.I01[7] dsp.I01[8] dsp.I01[9] dsp.I01[10] dsp.I01[11] dsp.I31[0] dsp.I31[1] dsp.I31[2] dsp.I31[3] dsp.I31[4] dsp.I31[5] dsp.I31[6] dsp.I31[7] dsp.I31[8] dsp.I31[9] dsp.I31[10] dsp.I31[11] " out_port="dsp_rtl.b_i[8]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <!-- 1 15 unused -->
        <!-- 1 14 unused -->
        <!-- 1 13 unused -->
        <mux name="II_1_12" input="dsp.I01[0] dsp.I01[1] dsp.I01[2] dsp.I01[3] dsp.I01[4] dsp.I01[5] dsp.I01[6] dsp.I01[7] dsp.I01[8] dsp.I01[9] dsp.I01[10] dsp.I01[11] dsp.I31[0] dsp.I31[1] dsp.I31[2] dsp.I31[3] dsp.I31[4] dsp.I31[5] dsp.I31[6] dsp.I31[7] dsp.I31[8] dsp.I31[9] dsp.I31[10] dsp.I31[11] " output="opt.I[16]" add_const_input="false">
          <delay_constant in_port="dsp.I01[0] dsp.I01[1] dsp.I01[2] dsp.I01[3] dsp.I01[4] dsp.I01[5] dsp.I01[6] dsp.I01[7] dsp.I01[8] dsp.I01[9] dsp.I01[10] dsp.I01[11] dsp.I31[0] dsp.I31[1] dsp.I31[2] dsp.I31[3] dsp.I31[4] dsp.I31[5] dsp.I31[6] dsp.I31[7] dsp.I31[8] dsp.I31[9] dsp.I31[10] dsp.I31[11] " out_port="opt.I[16]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <!-- 1 11 unused -->
        <mux name="II_1_10" input="dsp.I01[0] dsp.I01[1] dsp.I01[2] dsp.I01[3] dsp.I01[4] dsp.I01[5] dsp.I01[6] dsp.I01[7] dsp.I01[8] dsp.I01[9] dsp.I01[10] dsp.I01[11] dsp.I31[0] dsp.I31[1] dsp.I31[2] dsp.I31[3] dsp.I31[4] dsp.I31[5] dsp.I31[6] dsp.I31[7] dsp.I31[8] dsp.I31[9] dsp.I31[10] dsp.I31[11] " output="dsp_rtl.a_i[7]" add_const_input="false">
          <delay_constant in_port="dsp.I01[0] dsp.I01[1] dsp.I01[2] dsp.I01[3] dsp.I01[4] dsp.I01[5] dsp.I01[6] dsp.I01[7] dsp.I01[8] dsp.I01[9] dsp.I01[10] dsp.I01[11] dsp.I31[0] dsp.I31[1] dsp.I31[2] dsp.I31[3] dsp.I31[4] dsp.I31[5] dsp.I31[6] dsp.I31[7] dsp.I31[8] dsp.I31[9] dsp.I31[10] dsp.I31[11] " out_port="dsp_rtl.a_i[7]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <!-- 1 9 unused -->
        <mux name="II_1_8" input="dsp.I01[0] dsp.I01[1] dsp.I01[2] dsp.I01[3] dsp.I01[4] dsp.I01[5] dsp.I01[6] dsp.I01[7] dsp.I01[8] dsp.I01[9] dsp.I01[10] dsp.I01[11] dsp.I21[0] dsp.I21[1] dsp.I21[2] dsp.I21[3] dsp.I21[4] dsp.I21[5] dsp.I21[6] dsp.I21[7] dsp.I21[8] dsp.I21[9] dsp.I21[10] dsp.I21[11] " output="dsp_rtl.b_i[7]" add_const_input="false">
          <delay_constant in_port="dsp.I01[0] dsp.I01[1] dsp.I01[2] dsp.I01[3] dsp.I01[4] dsp.I01[5] dsp.I01[6] dsp.I01[7] dsp.I01[8] dsp.I01[9] dsp.I01[10] dsp.I01[11] dsp.I21[0] dsp.I21[1] dsp.I21[2] dsp.I21[3] dsp.I21[4] dsp.I21[5] dsp.I21[6] dsp.I21[7] dsp.I21[8] dsp.I21[9] dsp.I21[10] dsp.I21[11] " out_port="dsp_rtl.b_i[7]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <!-- 1 7 unused -->
        <!-- 1 6 unused -->
        <!-- 1 5 unused -->
        <mux name="II_1_4" input="dsp.I01[0] dsp.I01[1] dsp.I01[2] dsp.I01[3] dsp.I01[4] dsp.I01[5] dsp.I01[6] dsp.I01[7] dsp.I01[8] dsp.I01[9] dsp.I01[10] dsp.I01[11] dsp.I31[0] dsp.I31[1] dsp.I31[2] dsp.I31[3] dsp.I31[4] dsp.I31[5] dsp.I31[6] dsp.I31[7] dsp.I31[8] dsp.I31[9] dsp.I31[10] dsp.I31[11] " output="opt.I[15]" add_const_input="false">
          <delay_constant in_port="dsp.I01[0] dsp.I01[1] dsp.I01[2] dsp.I01[3] dsp.I01[4] dsp.I01[5] dsp.I01[6] dsp.I01[7] dsp.I01[8] dsp.I01[9] dsp.I01[10] dsp.I01[11] dsp.I31[0] dsp.I31[1] dsp.I31[2] dsp.I31[3] dsp.I31[4] dsp.I31[5] dsp.I31[6] dsp.I31[7] dsp.I31[8] dsp.I31[9] dsp.I31[10] dsp.I31[11] " out_port="opt.I[15]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <!-- 1 3 unused -->
        <mux name="II_1_2" input="dsp.I01[0] dsp.I01[1] dsp.I01[2] dsp.I01[3] dsp.I01[4] dsp.I01[5] dsp.I01[6] dsp.I01[7] dsp.I01[8] dsp.I01[9] dsp.I01[10] dsp.I01[11] dsp.I21[0] dsp.I21[1] dsp.I21[2] dsp.I21[3] dsp.I21[4] dsp.I21[5] dsp.I21[6] dsp.I21[7] dsp.I21[8] dsp.I21[9] dsp.I21[10] dsp.I21[11] " output="dsp_rtl.a_i[6]" add_const_input="false">
          <delay_constant in_port="dsp.I01[0] dsp.I01[1] dsp.I01[2] dsp.I01[3] dsp.I01[4] dsp.I01[5] dsp.I01[6] dsp.I01[7] dsp.I01[8] dsp.I01[9] dsp.I01[10] dsp.I01[11] dsp.I21[0] dsp.I21[1] dsp.I21[2] dsp.I21[3] dsp.I21[4] dsp.I21[5] dsp.I21[6] dsp.I21[7] dsp.I21[8] dsp.I21[9] dsp.I21[10] dsp.I21[11] " out_port="dsp_rtl.a_i[6]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <!-- 1 1 unused -->
        <mux name="II_1_0" input="dsp.I01[0] dsp.I01[1] dsp.I01[2] dsp.I01[3] dsp.I01[4] dsp.I01[5] dsp.I01[6] dsp.I01[7] dsp.I01[8] dsp.I01[9] dsp.I01[10] dsp.I01[11] dsp.I31[0] dsp.I31[1] dsp.I31[2] dsp.I31[3] dsp.I31[4] dsp.I31[5] dsp.I31[6] dsp.I31[7] dsp.I31[8] dsp.I31[9] dsp.I31[10] dsp.I31[11] " output="dsp_rtl.b_i[6]" add_const_input="false">
          <delay_constant in_port="dsp.I01[0] dsp.I01[1] dsp.I01[2] dsp.I01[3] dsp.I01[4] dsp.I01[5] dsp.I01[6] dsp.I01[7] dsp.I01[8] dsp.I01[9] dsp.I01[10] dsp.I01[11] dsp.I31[0] dsp.I31[1] dsp.I31[2] dsp.I31[3] dsp.I31[4] dsp.I31[5] dsp.I31[6] dsp.I31[7] dsp.I31[8] dsp.I31[9] dsp.I31[10] dsp.I31[11] " out_port="dsp_rtl.b_i[6]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <!-- 0 47 unused -->
        <mux name="II_0_46" input="dsp.I00[0] dsp.I00[1] dsp.I00[2] dsp.I00[3] dsp.I00[4] dsp.I00[5] dsp.I00[6] dsp.I00[7] dsp.I00[8] dsp.I00[9] dsp.I00[10] dsp.I00[11] dsp.I30[0] dsp.I30[1] dsp.I30[2] dsp.I30[3] dsp.I30[4] dsp.I30[5] dsp.I30[6] dsp.I30[7] dsp.I30[8] dsp.I30[9] dsp.I30[10] dsp.I30[11] " output="opt.I[14]" add_const_input="false">
          <delay_constant in_port="dsp.I00[0] dsp.I00[1] dsp.I00[2] dsp.I00[3] dsp.I00[4] dsp.I00[5] dsp.I00[6] dsp.I00[7] dsp.I00[8] dsp.I00[9] dsp.I00[10] dsp.I00[11] dsp.I30[0] dsp.I30[1] dsp.I30[2] dsp.I30[3] dsp.I30[4] dsp.I30[5] dsp.I30[6] dsp.I30[7] dsp.I30[8] dsp.I30[9] dsp.I30[10] dsp.I30[11] " out_port="opt.I[14]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <!-- 0 45 unused -->
        <!-- 0 44 unused -->
        <!-- 0 43 unused -->
        <mux name="II_0_42" input="dsp.I00[0] dsp.I00[1] dsp.I00[2] dsp.I00[3] dsp.I00[4] dsp.I00[5] dsp.I00[6] dsp.I00[7] dsp.I00[8] dsp.I00[9] dsp.I00[10] dsp.I00[11] dsp.I30[0] dsp.I30[1] dsp.I30[2] dsp.I30[3] dsp.I30[4] dsp.I30[5] dsp.I30[6] dsp.I30[7] dsp.I30[8] dsp.I30[9] dsp.I30[10] dsp.I30[11] " output="dsp_rtl.a_i[5]" add_const_input="false">
          <delay_constant in_port="dsp.I00[0] dsp.I00[1] dsp.I00[2] dsp.I00[3] dsp.I00[4] dsp.I00[5] dsp.I00[6] dsp.I00[7] dsp.I00[8] dsp.I00[9] dsp.I00[10] dsp.I00[11] dsp.I30[0] dsp.I30[1] dsp.I30[2] dsp.I30[3] dsp.I30[4] dsp.I30[5] dsp.I30[6] dsp.I30[7] dsp.I30[8] dsp.I30[9] dsp.I30[10] dsp.I30[11] " out_port="dsp_rtl.a_i[5]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <!-- 0 41 unused -->
        <mux name="II_0_40" input="dsp.I00[0] dsp.I00[1] dsp.I00[2] dsp.I00[3] dsp.I00[4] dsp.I00[5] dsp.I00[6] dsp.I00[7] dsp.I00[8] dsp.I00[9] dsp.I00[10] dsp.I00[11] dsp.I30[0] dsp.I30[1] dsp.I30[2] dsp.I30[3] dsp.I30[4] dsp.I30[5] dsp.I30[6] dsp.I30[7] dsp.I30[8] dsp.I30[9] dsp.I30[10] dsp.I30[11] " output="dsp_rtl.b_i[5]" add_const_input="false">
          <delay_constant in_port="dsp.I00[0] dsp.I00[1] dsp.I00[2] dsp.I00[3] dsp.I00[4] dsp.I00[5] dsp.I00[6] dsp.I00[7] dsp.I00[8] dsp.I00[9] dsp.I00[10] dsp.I00[11] dsp.I30[0] dsp.I30[1] dsp.I30[2] dsp.I30[3] dsp.I30[4] dsp.I30[5] dsp.I30[6] dsp.I30[7] dsp.I30[8] dsp.I30[9] dsp.I30[10] dsp.I30[11] " out_port="dsp_rtl.b_i[5]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <!-- 0 39 unused -->
        <mux name="II_0_38" input="dsp.I00[0] dsp.I00[1] dsp.I00[2] dsp.I00[3] dsp.I00[4] dsp.I00[5] dsp.I00[6] dsp.I00[7] dsp.I00[8] dsp.I00[9] dsp.I00[10] dsp.I00[11] dsp.I20[0] dsp.I20[1] dsp.I20[2] dsp.I20[3] dsp.I20[4] dsp.I20[5] dsp.I20[6] dsp.I20[7] dsp.I20[8] dsp.I20[9] dsp.I20[10] dsp.I20[11] " output="opt.I[13]" add_const_input="false">
          <delay_constant in_port="dsp.I00[0] dsp.I00[1] dsp.I00[2] dsp.I00[3] dsp.I00[4] dsp.I00[5] dsp.I00[6] dsp.I00[7] dsp.I00[8] dsp.I00[9] dsp.I00[10] dsp.I00[11] dsp.I20[0] dsp.I20[1] dsp.I20[2] dsp.I20[3] dsp.I20[4] dsp.I20[5] dsp.I20[6] dsp.I20[7] dsp.I20[8] dsp.I20[9] dsp.I20[10] dsp.I20[11] " out_port="opt.I[13]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <!-- 0 37 unused -->
        <!-- 0 36 unused -->
        <!-- 0 35 unused -->
        <mux name="II_0_34" input="dsp.I00[0] dsp.I00[1] dsp.I00[2] dsp.I00[3] dsp.I00[4] dsp.I00[5] dsp.I00[6] dsp.I00[7] dsp.I00[8] dsp.I00[9] dsp.I00[10] dsp.I00[11] dsp.I30[0] dsp.I30[1] dsp.I30[2] dsp.I30[3] dsp.I30[4] dsp.I30[5] dsp.I30[6] dsp.I30[7] dsp.I30[8] dsp.I30[9] dsp.I30[10] dsp.I30[11] " output="dsp_rtl.a_i[4]" add_const_input="false">
          <delay_constant in_port="dsp.I00[0] dsp.I00[1] dsp.I00[2] dsp.I00[3] dsp.I00[4] dsp.I00[5] dsp.I00[6] dsp.I00[7] dsp.I00[8] dsp.I00[9] dsp.I00[10] dsp.I00[11] dsp.I30[0] dsp.I30[1] dsp.I30[2] dsp.I30[3] dsp.I30[4] dsp.I30[5] dsp.I30[6] dsp.I30[7] dsp.I30[8] dsp.I30[9] dsp.I30[10] dsp.I30[11] " out_port="dsp_rtl.a_i[4]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <!-- 0 33 unused -->
        <mux name="II_0_32" input="dsp.I00[0] dsp.I00[1] dsp.I00[2] dsp.I00[3] dsp.I00[4] dsp.I00[5] dsp.I00[6] dsp.I00[7] dsp.I00[8] dsp.I00[9] dsp.I00[10] dsp.I00[11] dsp.I20[0] dsp.I20[1] dsp.I20[2] dsp.I20[3] dsp.I20[4] dsp.I20[5] dsp.I20[6] dsp.I20[7] dsp.I20[8] dsp.I20[9] dsp.I20[10] dsp.I20[11] " output="dsp_rtl.b_i[4]" add_const_input="false">
          <delay_constant in_port="dsp.I00[0] dsp.I00[1] dsp.I00[2] dsp.I00[3] dsp.I00[4] dsp.I00[5] dsp.I00[6] dsp.I00[7] dsp.I00[8] dsp.I00[9] dsp.I00[10] dsp.I00[11] dsp.I20[0] dsp.I20[1] dsp.I20[2] dsp.I20[3] dsp.I20[4] dsp.I20[5] dsp.I20[6] dsp.I20[7] dsp.I20[8] dsp.I20[9] dsp.I20[10] dsp.I20[11] " out_port="dsp_rtl.b_i[4]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <!-- 0 31 unused -->
        <mux name="II_0_30" input="dsp.I00[0] dsp.I00[1] dsp.I00[2] dsp.I00[3] dsp.I00[4] dsp.I00[5] dsp.I00[6] dsp.I00[7] dsp.I00[8] dsp.I00[9] dsp.I00[10] dsp.I00[11] dsp.I30[0] dsp.I30[1] dsp.I30[2] dsp.I30[3] dsp.I30[4] dsp.I30[5] dsp.I30[6] dsp.I30[7] dsp.I30[8] dsp.I30[9] dsp.I30[10] dsp.I30[11] " output="opt.I[12]" add_const_input="false">
          <delay_constant in_port="dsp.I00[0] dsp.I00[1] dsp.I00[2] dsp.I00[3] dsp.I00[4] dsp.I00[5] dsp.I00[6] dsp.I00[7] dsp.I00[8] dsp.I00[9] dsp.I00[10] dsp.I00[11] dsp.I30[0] dsp.I30[1] dsp.I30[2] dsp.I30[3] dsp.I30[4] dsp.I30[5] dsp.I30[6] dsp.I30[7] dsp.I30[8] dsp.I30[9] dsp.I30[10] dsp.I30[11] " out_port="opt.I[12]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <!-- 0 29 unused -->
        <!-- 0 28 unused -->
        <!-- 0 27 unused -->
        <mux name="II_0_26" input="dsp.I00[0] dsp.I00[1] dsp.I00[2] dsp.I00[3] dsp.I00[4] dsp.I00[5] dsp.I00[6] dsp.I00[7] dsp.I00[8] dsp.I00[9] dsp.I00[10] dsp.I00[11] dsp.I20[0] dsp.I20[1] dsp.I20[2] dsp.I20[3] dsp.I20[4] dsp.I20[5] dsp.I20[6] dsp.I20[7] dsp.I20[8] dsp.I20[9] dsp.I20[10] dsp.I20[11] " output="dsp_rtl.a_i[3]" add_const_input="false">
          <delay_constant in_port="dsp.I00[0] dsp.I00[1] dsp.I00[2] dsp.I00[3] dsp.I00[4] dsp.I00[5] dsp.I00[6] dsp.I00[7] dsp.I00[8] dsp.I00[9] dsp.I00[10] dsp.I00[11] dsp.I20[0] dsp.I20[1] dsp.I20[2] dsp.I20[3] dsp.I20[4] dsp.I20[5] dsp.I20[6] dsp.I20[7] dsp.I20[8] dsp.I20[9] dsp.I20[10] dsp.I20[11] " out_port="dsp_rtl.a_i[3]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <!-- 0 25 unused -->
        <mux name="II_0_24" input="dsp.I00[0] dsp.I00[1] dsp.I00[2] dsp.I00[3] dsp.I00[4] dsp.I00[5] dsp.I00[6] dsp.I00[7] dsp.I00[8] dsp.I00[9] dsp.I00[10] dsp.I00[11] dsp.I30[0] dsp.I30[1] dsp.I30[2] dsp.I30[3] dsp.I30[4] dsp.I30[5] dsp.I30[6] dsp.I30[7] dsp.I30[8] dsp.I30[9] dsp.I30[10] dsp.I30[11] " output="dsp_rtl.b_i[3]" add_const_input="false">
          <delay_constant in_port="dsp.I00[0] dsp.I00[1] dsp.I00[2] dsp.I00[3] dsp.I00[4] dsp.I00[5] dsp.I00[6] dsp.I00[7] dsp.I00[8] dsp.I00[9] dsp.I00[10] dsp.I00[11] dsp.I30[0] dsp.I30[1] dsp.I30[2] dsp.I30[3] dsp.I30[4] dsp.I30[5] dsp.I30[6] dsp.I30[7] dsp.I30[8] dsp.I30[9] dsp.I30[10] dsp.I30[11] " out_port="dsp_rtl.b_i[3]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <!-- 0 23 unused -->
        <mux name="II_0_22" input="dsp.I00[0] dsp.I00[1] dsp.I00[2] dsp.I00[3] dsp.I00[4] dsp.I00[5] dsp.I00[6] dsp.I00[7] dsp.I00[8] dsp.I00[9] dsp.I00[10] dsp.I00[11] dsp.I30[0] dsp.I30[1] dsp.I30[2] dsp.I30[3] dsp.I30[4] dsp.I30[5] dsp.I30[6] dsp.I30[7] dsp.I30[8] dsp.I30[9] dsp.I30[10] dsp.I30[11] " output="opt.I[11]" add_const_input="false">
          <delay_constant in_port="dsp.I00[0] dsp.I00[1] dsp.I00[2] dsp.I00[3] dsp.I00[4] dsp.I00[5] dsp.I00[6] dsp.I00[7] dsp.I00[8] dsp.I00[9] dsp.I00[10] dsp.I00[11] dsp.I30[0] dsp.I30[1] dsp.I30[2] dsp.I30[3] dsp.I30[4] dsp.I30[5] dsp.I30[6] dsp.I30[7] dsp.I30[8] dsp.I30[9] dsp.I30[10] dsp.I30[11] " out_port="opt.I[11]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <!-- 0 21 unused -->
        <!-- 0 20 unused -->
        <!-- 0 19 unused -->
        <mux name="II_0_18" input="dsp.I00[0] dsp.I00[1] dsp.I00[2] dsp.I00[3] dsp.I00[4] dsp.I00[5] dsp.I00[6] dsp.I00[7] dsp.I00[8] dsp.I00[9] dsp.I00[10] dsp.I00[11] dsp.I30[0] dsp.I30[1] dsp.I30[2] dsp.I30[3] dsp.I30[4] dsp.I30[5] dsp.I30[6] dsp.I30[7] dsp.I30[8] dsp.I30[9] dsp.I30[10] dsp.I30[11] " output="dsp_rtl.a_i[2]" add_const_input="false">
          <delay_constant in_port="dsp.I00[0] dsp.I00[1] dsp.I00[2] dsp.I00[3] dsp.I00[4] dsp.I00[5] dsp.I00[6] dsp.I00[7] dsp.I00[8] dsp.I00[9] dsp.I00[10] dsp.I00[11] dsp.I30[0] dsp.I30[1] dsp.I30[2] dsp.I30[3] dsp.I30[4] dsp.I30[5] dsp.I30[6] dsp.I30[7] dsp.I30[8] dsp.I30[9] dsp.I30[10] dsp.I30[11] " out_port="dsp_rtl.a_i[2]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <!-- 0 17 unused -->
        <mux name="II_0_16" input="dsp.I00[0] dsp.I00[1] dsp.I00[2] dsp.I00[3] dsp.I00[4] dsp.I00[5] dsp.I00[6] dsp.I00[7] dsp.I00[8] dsp.I00[9] dsp.I00[10] dsp.I00[11] dsp.I30[0] dsp.I30[1] dsp.I30[2] dsp.I30[3] dsp.I30[4] dsp.I30[5] dsp.I30[6] dsp.I30[7] dsp.I30[8] dsp.I30[9] dsp.I30[10] dsp.I30[11] " output="dsp_rtl.b_i[2]" add_const_input="false">
          <delay_constant in_port="dsp.I00[0] dsp.I00[1] dsp.I00[2] dsp.I00[3] dsp.I00[4] dsp.I00[5] dsp.I00[6] dsp.I00[7] dsp.I00[8] dsp.I00[9] dsp.I00[10] dsp.I00[11] dsp.I30[0] dsp.I30[1] dsp.I30[2] dsp.I30[3] dsp.I30[4] dsp.I30[5] dsp.I30[6] dsp.I30[7] dsp.I30[8] dsp.I30[9] dsp.I30[10] dsp.I30[11] " out_port="dsp_rtl.b_i[2]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <!-- 0 15 unused -->
        <mux name="II_0_14" input="dsp.I00[0] dsp.I00[1] dsp.I00[2] dsp.I00[3] dsp.I00[4] dsp.I00[5] dsp.I00[6] dsp.I00[7] dsp.I00[8] dsp.I00[9] dsp.I00[10] dsp.I00[11] dsp.I20[0] dsp.I20[1] dsp.I20[2] dsp.I20[3] dsp.I20[4] dsp.I20[5] dsp.I20[6] dsp.I20[7] dsp.I20[8] dsp.I20[9] dsp.I20[10] dsp.I20[11] " output="opt.I[4]" add_const_input="false">
          <delay_constant in_port="dsp.I00[0] dsp.I00[1] dsp.I00[2] dsp.I00[3] dsp.I00[4] dsp.I00[5] dsp.I00[6] dsp.I00[7] dsp.I00[8] dsp.I00[9] dsp.I00[10] dsp.I00[11] dsp.I20[0] dsp.I20[1] dsp.I20[2] dsp.I20[3] dsp.I20[4] dsp.I20[5] dsp.I20[6] dsp.I20[7] dsp.I20[8] dsp.I20[9] dsp.I20[10] dsp.I20[11] " out_port="opt.I[4]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <!-- 0 13 unused -->
        <mux name="II_0_12" input="dsp.I00[0] dsp.I00[1] dsp.I00[2] dsp.I00[3] dsp.I00[4] dsp.I00[5] dsp.I00[6] dsp.I00[7] dsp.I00[8] dsp.I00[9] dsp.I00[10] dsp.I00[11] dsp.I30[0] dsp.I30[1] dsp.I30[2] dsp.I30[3] dsp.I30[4] dsp.I30[5] dsp.I30[6] dsp.I30[7] dsp.I30[8] dsp.I30[9] dsp.I30[10] dsp.I30[11] " output="dsp_rtl.a_i[19]" add_const_input="false">
          <delay_constant in_port="dsp.I00[0] dsp.I00[1] dsp.I00[2] dsp.I00[3] dsp.I00[4] dsp.I00[5] dsp.I00[6] dsp.I00[7] dsp.I00[8] dsp.I00[9] dsp.I00[10] dsp.I00[11] dsp.I30[0] dsp.I30[1] dsp.I30[2] dsp.I30[3] dsp.I30[4] dsp.I30[5] dsp.I30[6] dsp.I30[7] dsp.I30[8] dsp.I30[9] dsp.I30[10] dsp.I30[11] " out_port="dsp_rtl.a_i[19]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <!-- 0 11 unused -->
        <mux name="II_0_10" input="dsp.I00[0] dsp.I00[1] dsp.I00[2] dsp.I00[3] dsp.I00[4] dsp.I00[5] dsp.I00[6] dsp.I00[7] dsp.I00[8] dsp.I00[9] dsp.I00[10] dsp.I00[11] dsp.I30[0] dsp.I30[1] dsp.I30[2] dsp.I30[3] dsp.I30[4] dsp.I30[5] dsp.I30[6] dsp.I30[7] dsp.I30[8] dsp.I30[9] dsp.I30[10] dsp.I30[11] " output="dsp_rtl.a_i[1]" add_const_input="false">
          <delay_constant in_port="dsp.I00[0] dsp.I00[1] dsp.I00[2] dsp.I00[3] dsp.I00[4] dsp.I00[5] dsp.I00[6] dsp.I00[7] dsp.I00[8] dsp.I00[9] dsp.I00[10] dsp.I00[11] dsp.I30[0] dsp.I30[1] dsp.I30[2] dsp.I30[3] dsp.I30[4] dsp.I30[5] dsp.I30[6] dsp.I30[7] dsp.I30[8] dsp.I30[9] dsp.I30[10] dsp.I30[11] " out_port="dsp_rtl.a_i[1]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <!-- 0 9 unused -->
        <mux name="II_0_8" input="dsp.I00[0] dsp.I00[1] dsp.I00[2] dsp.I00[3] dsp.I00[4] dsp.I00[5] dsp.I00[6] dsp.I00[7] dsp.I00[8] dsp.I00[9] dsp.I00[10] dsp.I00[11] dsp.I20[0] dsp.I20[1] dsp.I20[2] dsp.I20[3] dsp.I20[4] dsp.I20[5] dsp.I20[6] dsp.I20[7] dsp.I20[8] dsp.I20[9] dsp.I20[10] dsp.I20[11] " output="dsp_rtl.b_i[1]" add_const_input="false">
          <delay_constant in_port="dsp.I00[0] dsp.I00[1] dsp.I00[2] dsp.I00[3] dsp.I00[4] dsp.I00[5] dsp.I00[6] dsp.I00[7] dsp.I00[8] dsp.I00[9] dsp.I00[10] dsp.I00[11] dsp.I20[0] dsp.I20[1] dsp.I20[2] dsp.I20[3] dsp.I20[4] dsp.I20[5] dsp.I20[6] dsp.I20[7] dsp.I20[8] dsp.I20[9] dsp.I20[10] dsp.I20[11] " out_port="dsp_rtl.b_i[1]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <!-- 0 7 unused -->
        <mux name="II_0_6" input="dsp.I00[0] dsp.I00[1] dsp.I00[2] dsp.I00[3] dsp.I00[4] dsp.I00[5] dsp.I00[6] dsp.I00[7] dsp.I00[8] dsp.I00[9] dsp.I00[10] dsp.I00[11] dsp.I30[0] dsp.I30[1] dsp.I30[2] dsp.I30[3] dsp.I30[4] dsp.I30[5] dsp.I30[6] dsp.I30[7] dsp.I30[8] dsp.I30[9] dsp.I30[10] dsp.I30[11] " output="opt.I[3]" add_const_input="false">
          <delay_constant in_port="dsp.I00[0] dsp.I00[1] dsp.I00[2] dsp.I00[3] dsp.I00[4] dsp.I00[5] dsp.I00[6] dsp.I00[7] dsp.I00[8] dsp.I00[9] dsp.I00[10] dsp.I00[11] dsp.I30[0] dsp.I30[1] dsp.I30[2] dsp.I30[3] dsp.I30[4] dsp.I30[5] dsp.I30[6] dsp.I30[7] dsp.I30[8] dsp.I30[9] dsp.I30[10] dsp.I30[11] " out_port="opt.I[3]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <!-- 0 5 unused -->
        <mux name="II_0_4" input="dsp.I00[0] dsp.I00[1] dsp.I00[2] dsp.I00[3] dsp.I00[4] dsp.I00[5] dsp.I00[6] dsp.I00[7] dsp.I00[8] dsp.I00[9] dsp.I00[10] dsp.I00[11] dsp.I30[0] dsp.I30[1] dsp.I30[2] dsp.I30[3] dsp.I30[4] dsp.I30[5] dsp.I30[6] dsp.I30[7] dsp.I30[8] dsp.I30[9] dsp.I30[10] dsp.I30[11] " output="dsp_rtl.a_i[18]" add_const_input="false">
          <delay_constant in_port="dsp.I00[0] dsp.I00[1] dsp.I00[2] dsp.I00[3] dsp.I00[4] dsp.I00[5] dsp.I00[6] dsp.I00[7] dsp.I00[8] dsp.I00[9] dsp.I00[10] dsp.I00[11] dsp.I30[0] dsp.I30[1] dsp.I30[2] dsp.I30[3] dsp.I30[4] dsp.I30[5] dsp.I30[6] dsp.I30[7] dsp.I30[8] dsp.I30[9] dsp.I30[10] dsp.I30[11] " out_port="dsp_rtl.a_i[18]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <!-- 0 3 unused -->
        <mux name="II_0_2" input="dsp.I00[0] dsp.I00[1] dsp.I00[2] dsp.I00[3] dsp.I00[4] dsp.I00[5] dsp.I00[6] dsp.I00[7] dsp.I00[8] dsp.I00[9] dsp.I00[10] dsp.I00[11] dsp.I20[0] dsp.I20[1] dsp.I20[2] dsp.I20[3] dsp.I20[4] dsp.I20[5] dsp.I20[6] dsp.I20[7] dsp.I20[8] dsp.I20[9] dsp.I20[10] dsp.I20[11] " output="dsp_rtl.a_i[0]" add_const_input="false">
          <delay_constant in_port="dsp.I00[0] dsp.I00[1] dsp.I00[2] dsp.I00[3] dsp.I00[4] dsp.I00[5] dsp.I00[6] dsp.I00[7] dsp.I00[8] dsp.I00[9] dsp.I00[10] dsp.I00[11] dsp.I20[0] dsp.I20[1] dsp.I20[2] dsp.I20[3] dsp.I20[4] dsp.I20[5] dsp.I20[6] dsp.I20[7] dsp.I20[8] dsp.I20[9] dsp.I20[10] dsp.I20[11] " out_port="dsp_rtl.a_i[0]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <!-- 0 1 unused -->
        <mux name="II_0_0" input="dsp.I00[0] dsp.I00[1] dsp.I00[2] dsp.I00[3] dsp.I00[4] dsp.I00[5] dsp.I00[6] dsp.I00[7] dsp.I00[8] dsp.I00[9] dsp.I00[10] dsp.I00[11] dsp.I30[0] dsp.I30[1] dsp.I30[2] dsp.I30[3] dsp.I30[4] dsp.I30[5] dsp.I30[6] dsp.I30[7] dsp.I30[8] dsp.I30[9] dsp.I30[10] dsp.I30[11] " output="dsp_rtl.b_i[0]" add_const_input="false">
          <delay_constant in_port="dsp.I00[0] dsp.I00[1] dsp.I00[2] dsp.I00[3] dsp.I00[4] dsp.I00[5] dsp.I00[6] dsp.I00[7] dsp.I00[8] dsp.I00[9] dsp.I00[10] dsp.I00[11] dsp.I30[0] dsp.I30[1] dsp.I30[2] dsp.I30[3] dsp.I30[4] dsp.I30[5] dsp.I30[6] dsp.I30[7] dsp.I30[8] dsp.I30[9] dsp.I30[10] dsp.I30[11] " out_port="dsp_rtl.b_i[0]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <!-- special routable inputs -->
        <mux name="SS_0_0" input="dsp.IS0[0] dsp.IS0[1] dsp.IS0[2] dsp.IS0[3] dsp.IS0[4] dsp.IS0[5] " output="sr_opt.I" add_const_input="false">
          <delay_constant in_port="dsp.IS0[0] dsp.IS0[1] dsp.IS0[2] dsp.IS0[3] dsp.IS0[4] dsp.IS0[5] " out_port="sr_opt.I" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <!-- logically the guts are here -->
        <!-- routable outputs -->
        <direct name="direct_o_2_23" input="z_pad[15].logic0" output="dsp.O2[23]"/>
        <direct name="direct_o_2_22" input="dsp_rtl.z_o[35]" output="dsp.O2[22]"/>
        <direct name="direct_o_2_21" input="dsp_rtl.z_o[17]" output="dsp.O2[21]"/>
        <direct name="direct_o_2_20" input="dsp_rtl.dly_b_o[17]" output="dsp.O2[20]"/>
        <direct name="direct_o_2_19" input="z_pad[14].logic0" output="dsp.O2[19]"/>
        <direct name="direct_o_2_18" input="dsp_rtl.z_o[34]" output="dsp.O2[18]"/>
        <direct name="direct_o_2_17" input="dsp_rtl.z_o[16]" output="dsp.O2[17]"/>
        <direct name="direct_o_2_16" input="dsp_rtl.dly_b_o[16]" output="dsp.O2[16]"/>
        <direct name="direct_o_2_15" input="z_pad[13].logic0" output="dsp.O2[15]"/>
        <direct name="direct_o_2_14" input="dsp_rtl.z_o[33]" output="dsp.O2[14]"/>
        <direct name="direct_o_2_13" input="dsp_rtl.z_o[15]" output="dsp.O2[13]"/>
        <direct name="direct_o_2_12" input="dsp_rtl.dly_b_o[15]" output="dsp.O2[12]"/>
        <direct name="direct_o_2_11" input="z_pad[12].logic0" output="dsp.O2[11]"/>
        <direct name="direct_o_2_10" input="dsp_rtl.z_o[32]" output="dsp.O2[10]"/>
        <direct name="direct_o_2_9" input="dsp_rtl.z_o[14]" output="dsp.O2[9]"/>
        <direct name="direct_o_2_8" input="dsp_rtl.dly_b_o[14]" output="dsp.O2[8]"/>
        <direct name="direct_o_2_7" input="z_pad[11].logic0" output="dsp.O2[7]"/>
        <direct name="direct_o_2_6" input="dsp_rtl.z_o[31]" output="dsp.O2[6]"/>
        <direct name="direct_o_2_5" input="dsp_rtl.z_o[13]" output="dsp.O2[5]"/>
        <direct name="direct_o_2_4" input="dsp_rtl.dly_b_o[13]" output="dsp.O2[4]"/>
        <direct name="direct_o_2_3" input="z_pad[10].logic0" output="dsp.O2[3]"/>
        <direct name="direct_o_2_2" input="dsp_rtl.z_o[30]" output="dsp.O2[2]"/>
        <direct name="direct_o_2_1" input="dsp_rtl.z_o[12]" output="dsp.O2[1]"/>
        <direct name="direct_o_2_0" input="dsp_rtl.dly_b_o[12]" output="dsp.O2[0]"/>
        <direct name="direct_o_1_23" input="z_pad[9].logic0" output="dsp.O1[23]"/>
        <direct name="direct_o_1_22" input="dsp_rtl.z_o[29]" output="dsp.O1[22]"/>
        <direct name="direct_o_1_21" input="dsp_rtl.z_o[11]" output="dsp.O1[21]"/>
        <direct name="direct_o_1_20" input="dsp_rtl.dly_b_o[11]" output="dsp.O1[20]"/>
        <direct name="direct_o_1_19" input="z_pad[8].logic0" output="dsp.O1[19]"/>
        <direct name="direct_o_1_18" input="dsp_rtl.z_o[28]" output="dsp.O1[18]"/>
        <direct name="direct_o_1_17" input="dsp_rtl.z_o[10]" output="dsp.O1[17]"/>
        <direct name="direct_o_1_16" input="dsp_rtl.dly_b_o[10]" output="dsp.O1[16]"/>
        <direct name="direct_o_1_15" input="z_pad[7].logic0" output="dsp.O1[15]"/>
        <direct name="direct_o_1_14" input="dsp_rtl.z_o[27]" output="dsp.O1[14]"/>
        <direct name="direct_o_1_13" input="dsp_rtl.z_o[9]" output="dsp.O1[13]"/>
        <direct name="direct_o_1_12" input="dsp_rtl.dly_b_o[9]" output="dsp.O1[12]"/>
        <direct name="direct_o_1_11" input="z_pad[6].logic0" output="dsp.O1[11]"/>
        <direct name="direct_o_1_10" input="dsp_rtl.z_o[26]" output="dsp.O1[10]"/>
        <direct name="direct_o_1_9" input="dsp_rtl.z_o[8]" output="dsp.O1[9]"/>
        <direct name="direct_o_1_8" input="dsp_rtl.dly_b_o[8]" output="dsp.O1[8]"/>
        <direct name="direct_o_1_7" input="z_pad[5].logic0" output="dsp.O1[7]"/>
        <direct name="direct_o_1_6" input="dsp_rtl.z_o[25]" output="dsp.O1[6]"/>
        <direct name="direct_o_1_5" input="dsp_rtl.z_o[7]" output="dsp.O1[5]"/>
        <direct name="direct_o_1_4" input="dsp_rtl.dly_b_o[7]" output="dsp.O1[4]"/>
        <direct name="direct_o_1_3" input="z_pad[4].logic0" output="dsp.O1[3]"/>
        <direct name="direct_o_1_2" input="dsp_rtl.z_o[24]" output="dsp.O1[2]"/>
        <direct name="direct_o_1_1" input="dsp_rtl.z_o[6]" output="dsp.O1[1]"/>
        <direct name="direct_o_1_0" input="dsp_rtl.dly_b_o[6]" output="dsp.O1[0]"/>
        <direct name="direct_o_0_23" input="z_pad[3].logic0" output="dsp.O0[23]"/>
        <direct name="direct_o_0_22" input="dsp_rtl.z_o[23]" output="dsp.O0[22]"/>
        <direct name="direct_o_0_21" input="dsp_rtl.z_o[5]" output="dsp.O0[21]"/>
        <direct name="direct_o_0_20" input="dsp_rtl.dly_b_o[5]" output="dsp.O0[20]"/>
        <direct name="direct_o_0_19" input="z_pad[2].logic0" output="dsp.O0[19]"/>
        <direct name="direct_o_0_18" input="dsp_rtl.z_o[22]" output="dsp.O0[18]"/>
        <direct name="direct_o_0_17" input="dsp_rtl.z_o[4]" output="dsp.O0[17]"/>
        <direct name="direct_o_0_16" input="dsp_rtl.dly_b_o[4]" output="dsp.O0[16]"/>
        <direct name="direct_o_0_15" input="z_pad[1].logic0" output="dsp.O0[15]"/>
        <direct name="direct_o_0_14" input="dsp_rtl.z_o[21]" output="dsp.O0[14]"/>
        <direct name="direct_o_0_13" input="dsp_rtl.z_o[3]" output="dsp.O0[13]"/>
        <direct name="direct_o_0_12" input="dsp_rtl.dly_b_o[3]" output="dsp.O0[12]"/>
        <direct name="direct_o_0_11" input="z_pad[0].logic0" output="dsp.O0[11]"/>
        <direct name="direct_o_0_10" input="dsp_rtl.z_o[20]" output="dsp.O0[10]"/>
        <direct name="direct_o_0_9" input="dsp_rtl.z_o[2]" output="dsp.O0[9]"/>
        <direct name="direct_o_0_8" input="dsp_rtl.dly_b_o[2]" output="dsp.O0[8]"/>
        <direct name="direct_o_0_7" input="dsp_rtl.z_o[37]" output="dsp.O0[7]"/>
        <direct name="direct_o_0_6" input="dsp_rtl.z_o[19]" output="dsp.O0[6]"/>
        <direct name="direct_o_0_5" input="dsp_rtl.z_o[1]" output="dsp.O0[5]"/>
        <direct name="direct_o_0_4" input="dsp_rtl.dly_b_o[1]" output="dsp.O0[4]"/>
        <direct name="direct_o_0_3" input="dsp_rtl.z_o[36]" output="dsp.O0[3]"/>
        <direct name="direct_o_0_2" input="dsp_rtl.z_o[18]" output="dsp.O0[2]"/>
        <direct name="direct_o_0_1" input="dsp_rtl.z_o[0]" output="dsp.O0[1]"/>
        <direct name="direct_o_0_0" input="dsp_rtl.dly_b_o[0]" output="dsp.O0[0]"/>
        <!-- tile non-fabric connections -->
        <complete name="dsp_clk_mux" input="dsp.clk" output="clk_opt.I"/>
        <!-- 16:1 -->
        <direct name="direct_sc_in" input="dsp.sc_in" output="dsp_rtl.sc_in"/>
        <direct name="direct_sc_out" input="dsp_rtl.sc_out" output="dsp.sc_out"/>
        <!-- internal connections -->
        <direct name="direct_lreset" input="sr_opt.O" output="dsp_rtl.lreset"/>
        <direct name="direct_clk" input="clk_opt.O" output="dsp_rtl.clk"/>
        <complete name="direct0" input="opt.O" output="dsp_rtl.feedback"/>
        <complete name="direct1" input="opt.O" output="dsp_rtl.unsigned_a"/>
        <complete name="direct2" input="opt.O" output="dsp_rtl.unsigned_b"/>
        <complete name="direct3" input="opt.O" output="dsp_rtl.shift_right"/>
        <complete name="direct4" input="opt.O" output="dsp_rtl.saturate_enable"/>
        <complete name="direct5" input="opt.O" output="dsp_rtl.round"/>
        <complete name="direct6" input="opt.O" output="dsp_rtl.subtract"/>
        <complete name="direct7" input="opt.O" output="dsp_rtl.load_acc"/>
        <complete name="direct8" input="opt.O" output="dsp_rtl.acc_fir_i"/>
      </interconnect>
    </pb_type>
    <!-- dsp -->
    <!-- Define RS_BRAM begin -->
    <!-- the port order must match the tile definition exactly (seriously!) -->
    <pb_type name="bram">
      <input name="I00" num_pins="12" equivalent="full"/>
      <input name="I10" num_pins="12" equivalent="full"/>
      <input name="I20" num_pins="12" equivalent="full"/>
      <input name="I30" num_pins="12" equivalent="full"/>
      <input name="IS0" num_pins="6" equivalent="full"/>
      <output name="O0" num_pins="24" equivalent="none"/>
      <input name="I01" num_pins="12" equivalent="full"/>
      <input name="I11" num_pins="12" equivalent="full"/>
      <input name="I21" num_pins="12" equivalent="full"/>
      <input name="I31" num_pins="12" equivalent="full"/>
      <input name="IS1" num_pins="6" equivalent="full"/>
      <output name="O1" num_pins="24" equivalent="none"/>
      <input name="I02" num_pins="12" equivalent="full"/>
      <input name="I12" num_pins="12" equivalent="full"/>
      <input name="I22" num_pins="12" equivalent="full"/>
      <input name="I32" num_pins="12" equivalent="full"/>
      <input name="IS2" num_pins="6" equivalent="full"/>
      <output name="O2" num_pins="24" equivalent="none"/>
      <clock name="clk" num_pins="16"/>
      <input name="sc_in" num_pins="48"/>
      <output name="sc_out" num_pins="48"/>
      <input name="RAM_ID_i" num_pins="20"/>
      <input name="PL_IN" num_pins="74"/>
      <output name="PL_OUT" num_pins="74"/>
      <input name="PL_DATA_IN" num_pins="36"/>
      <output name="PL_DATA_OUT" num_pins="36"/>
      <pb_type name="bram_rtl" num_pb="1">
        <input name="WDATA_A1_i" num_pins="18"/>
        <input name="WDATA_A2_i" num_pins="18"/>
        <output name="RDATA_A1_o" num_pins="18"/>
        <output name="RDATA_A2_o" num_pins="18"/>
        <input name="ADDR_A1_i" num_pins="15"/>
        <input name="ADDR_A2_i" num_pins="14"/>
        <clock name="CLK_A1_i" num_pins="1"/>
        <clock name="CLK_A2_i" num_pins="1"/>
        <input name="REN_A1_i" num_pins="1"/>
        <input name="REN_A2_i" num_pins="1"/>
        <input name="WEN_A1_i" num_pins="1"/>
        <input name="WEN_A2_i" num_pins="1"/>
        <input name="BE_A1_i" num_pins="2"/>
        <input name="BE_A2_i" num_pins="2"/>
        <input name="FLUSH1_i" num_pins="1"/>
        <input name="WDATA_B1_i" num_pins="18"/>
        <input name="WDATA_B2_i" num_pins="18"/>
        <output name="RDATA_B1_o" num_pins="18"/>
        <output name="RDATA_B2_o" num_pins="18"/>
        <input name="ADDR_B1_i" num_pins="15"/>
        <input name="ADDR_B2_i" num_pins="14"/>
        <clock name="CLK_B1_i" num_pins="1"/>
        <clock name="CLK_B2_i" num_pins="1"/>
        <input name="REN_B1_i" num_pins="1"/>
        <input name="REN_B2_i" num_pins="1"/>
        <input name="WEN_B1_i" num_pins="1"/>
        <input name="WEN_B2_i" num_pins="1"/>
        <input name="BE_B1_i" num_pins="2"/>
        <input name="BE_B2_i" num_pins="2"/>
        <input name="FLUSH2_i" num_pins="1"/>
        <input name="RAM_ID_i" num_pins="20"/>
        <input name="PL_INIT_i" num_pins="1"/>
        <input name="PL_ENA_i" num_pins="1"/>
        <input name="PL_REN_i" num_pins="1"/>
        <clock name="PL_CLK_i" num_pins="1"/>
        <input name="PL_WEN_i" num_pins="2"/>
        <input name="PL_ADDR_i" num_pins="32"/>
        <input name="PL_DATA_i" num_pins="36"/>
        <output name="PL_INIT_o" num_pins="1"/>
        <output name="PL_ENA_o" num_pins="1"/>
        <output name="PL_REN_o" num_pins="1"/>
        <output name="PL_CLK_o" num_pins="1"/>
        <output name="PL_WEN_o" num_pins="2"/>
        <output name="PL_ADDR_o" num_pins="32"/>
        <output name="PL_DATA_o" num_pins="36"/>
        <input name="sc_in" num_pins="44"/>
        <output name="sc_out" num_pins="44"/>
        <mode name="physical" disable_packing="true">
          <pb_type name="bram_phy" blif_model=".subckt bram_phy" num_pb="1">
            <input name="WDATA_A1_i" num_pins="18"/>
            <input name="WDATA_A2_i" num_pins="18"/>
            <output name="RDATA_A1_o" num_pins="18"/>
            <output name="RDATA_A2_o" num_pins="18"/>
            <input name="ADDR_A1_i" num_pins="15"/>
            <input name="ADDR_A2_i" num_pins="14"/>
            <clock name="CLK_A1_i" num_pins="1"/>
            <clock name="CLK_A2_i" num_pins="1"/>
            <input name="REN_A1_i" num_pins="1"/>
            <input name="REN_A2_i" num_pins="1"/>
            <input name="WEN_A1_i" num_pins="1"/>
            <input name="WEN_A2_i" num_pins="1"/>
            <input name="BE_A1_i" num_pins="2"/>
            <input name="BE_A2_i" num_pins="2"/>
            <input name="FLUSH1_i" num_pins="1"/>
            <input name="WDATA_B1_i" num_pins="18"/>
            <input name="WDATA_B2_i" num_pins="18"/>
            <output name="RDATA_B1_o" num_pins="18"/>
            <output name="RDATA_B2_o" num_pins="18"/>
            <input name="ADDR_B1_i" num_pins="15"/>
            <input name="ADDR_B2_i" num_pins="14"/>
            <clock name="CLK_B1_i" num_pins="1"/>
            <clock name="CLK_B2_i" num_pins="1"/>
            <input name="REN_B1_i" num_pins="1"/>
            <input name="REN_B2_i" num_pins="1"/>
            <input name="WEN_B1_i" num_pins="1"/>
            <input name="WEN_B2_i" num_pins="1"/>
            <input name="BE_B1_i" num_pins="2"/>
            <input name="BE_B2_i" num_pins="2"/>
            <input name="FLUSH2_i" num_pins="1"/>
            <input name="RAM_ID_i" num_pins="20"/>
            <input name="PL_INIT_i" num_pins="1"/>
            <input name="PL_ENA_i" num_pins="1"/>
            <input name="PL_REN_i" num_pins="1"/>
            <clock name="PL_CLK_i" num_pins="1"/>
            <input name="PL_WEN_i" num_pins="2"/>
            <input name="PL_ADDR_i" num_pins="32"/>
            <input name="PL_DATA_i" num_pins="36"/>
            <output name="PL_INIT_o" num_pins="1"/>
            <output name="PL_ENA_o" num_pins="1"/>
            <output name="PL_REN_o" num_pins="1"/>
            <output name="PL_CLK_o" num_pins="1"/>
            <output name="PL_WEN_o" num_pins="2"/>
            <output name="PL_ADDR_o" num_pins="32"/>
            <output name="PL_DATA_o" num_pins="36"/>
            <input name="sc_in" num_pins="44"/>
            <output name="sc_out" num_pins="44"/>
            <T_setup value="500e-12" port="bram_phy.WDATA_A1_i" clock="CLK_A1_i"/>
            <T_setup value="500e-12" port="bram_phy.WDATA_A2_i" clock="CLK_A2_i"/>
            <T_clock_to_Q max="500e-12" port="bram_phy.RDATA_A1_o" clock="CLK_A1_i"/>
            <T_clock_to_Q max="500e-12" port="bram_phy.RDATA_A2_o" clock="CLK_A2_i"/>
            <T_setup value="500e-12" port="bram_phy.ADDR_A1_i" clock="CLK_A1_i"/>
            <T_setup value="500e-12" port="bram_phy.ADDR_A2_i" clock="CLK_A2_i"/>
            <T_setup value="500e-12" port="bram_phy.REN_A1_i" clock="CLK_A1_i"/>
            <T_setup value="500e-12" port="bram_phy.REN_A2_i" clock="CLK_A2_i"/>
            <T_setup value="500e-12" port="bram_phy.WEN_A1_i" clock="CLK_A1_i"/>
            <T_setup value="500e-12" port="bram_phy.WEN_A2_i" clock="CLK_A2_i"/>
            <T_setup value="500e-12" port="bram_phy.BE_A1_i" clock="CLK_A1_i"/>
            <T_setup value="500e-12" port="bram_phy.BE_A2_i" clock="CLK_A2_i"/>
            <T_setup value="500e-12" port="bram_phy.FLUSH1_i" clock="CLK_A1_i"/>
            <T_setup value="500e-12" port="bram_phy.WDATA_B1_i" clock="CLK_B1_i"/>
            <T_setup value="500e-12" port="bram_phy.WDATA_B2_i" clock="CLK_B2_i"/>
            <T_clock_to_Q max="500e-12" port="bram_phy.RDATA_B1_o" clock="CLK_B1_i"/>
            <T_clock_to_Q max="500e-12" port="bram_phy.RDATA_B2_o" clock="CLK_B2_i"/>
            <T_setup value="500e-12" port="bram_phy.ADDR_B1_i" clock="CLK_B1_i"/>
            <T_setup value="500e-12" port="bram_phy.ADDR_B2_i" clock="CLK_B2_i"/>
            <T_setup value="500e-12" port="bram_phy.REN_B1_i" clock="CLK_B1_i"/>
            <T_setup value="500e-12" port="bram_phy.REN_B2_i" clock="CLK_B2_i"/>
            <T_setup value="500e-12" port="bram_phy.WEN_B1_i" clock="CLK_B1_i"/>
            <T_setup value="500e-12" port="bram_phy.WEN_B2_i" clock="CLK_B2_i"/>
            <T_setup value="500e-12" port="bram_phy.BE_B1_i" clock="CLK_B1_i"/>
            <T_setup value="500e-12" port="bram_phy.BE_B2_i" clock="CLK_B2_i"/>
            <T_setup value="500e-12" port="bram_phy.FLUSH2_i" clock="CLK_B1_i"/>
          </pb_type>
          <interconnect>
            <direct name="direct_WDATA_A1_i" input="bram_rtl.WDATA_A1_i" output="bram_phy.WDATA_A1_i"/>
            <direct name="direct_WDATA_A2_i" input="bram_rtl.WDATA_A2_i" output="bram_phy.WDATA_A2_i"/>
            <direct name="direct_RDATA_A1_o" input="bram_phy.RDATA_A1_o" output="bram_rtl.RDATA_A1_o"/>
            <direct name="direct_RDATA_A2_o" input="bram_phy.RDATA_A2_o" output="bram_rtl.RDATA_A2_o"/>
            <direct name="direct_ADDR_A1_i" input="bram_rtl.ADDR_A1_i" output="bram_phy.ADDR_A1_i"/>
            <direct name="direct_ADDR_A2_i" input="bram_rtl.ADDR_A2_i" output="bram_phy.ADDR_A2_i"/>
            <direct name="direct_CLK_A1_c" input="bram_rtl.CLK_A1_i" output="bram_phy.CLK_A1_i"/>
            <direct name="direct_CLK_A2_c" input="bram_rtl.CLK_A2_i" output="bram_phy.CLK_A2_i"/>
            <direct name="direct_REN_A1_i" input="bram_rtl.REN_A1_i" output="bram_phy.REN_A1_i"/>
            <direct name="direct_REN_A2_i" input="bram_rtl.REN_A2_i" output="bram_phy.REN_A2_i"/>
            <direct name="direct_WEN_A1_i" input="bram_rtl.WEN_A1_i" output="bram_phy.WEN_A1_i"/>
            <direct name="direct_WEN_A2_i" input="bram_rtl.WEN_A2_i" output="bram_phy.WEN_A2_i"/>
            <direct name="direct_BE_A1_i" input="bram_rtl.BE_A1_i" output="bram_phy.BE_A1_i"/>
            <direct name="direct_BE_A2_i" input="bram_rtl.BE_A2_i" output="bram_phy.BE_A2_i"/>
            <direct name="direct_FLUSH1_i" input="bram_rtl.FLUSH1_i" output="bram_phy.FLUSH1_i"/>
            <direct name="direct_WDATA_B1_i" input="bram_rtl.WDATA_B1_i" output="bram_phy.WDATA_B1_i"/>
            <direct name="direct_WDATA_B2_i" input="bram_rtl.WDATA_B2_i" output="bram_phy.WDATA_B2_i"/>
            <direct name="direct_RDATA_B1_o" input="bram_phy.RDATA_B1_o" output="bram_rtl.RDATA_B1_o"/>
            <direct name="direct_RDATA_B2_o" input="bram_phy.RDATA_B2_o" output="bram_rtl.RDATA_B2_o"/>
            <direct name="direct_ADDR_B1_i" input="bram_rtl.ADDR_B1_i" output="bram_phy.ADDR_B1_i"/>
            <direct name="direct_ADDR_B2_i" input="bram_rtl.ADDR_B2_i" output="bram_phy.ADDR_B2_i"/>
            <direct name="direct_CLK_B1_c" input="bram_rtl.CLK_B1_i" output="bram_phy.CLK_B1_i"/>
            <direct name="direct_CLK_B2_c" input="bram_rtl.CLK_B2_i" output="bram_phy.CLK_B2_i"/>
            <direct name="direct_REN_B1_i" input="bram_rtl.REN_B1_i" output="bram_phy.REN_B1_i"/>
            <direct name="direct_REN_B2_i" input="bram_rtl.REN_B2_i" output="bram_phy.REN_B2_i"/>
            <direct name="direct_WEN_B1_i" input="bram_rtl.WEN_B1_i" output="bram_phy.WEN_B1_i"/>
            <direct name="direct_WEN_B2_i" input="bram_rtl.WEN_B2_i" output="bram_phy.WEN_B2_i"/>
            <direct name="direct_BE_B1_i" input="bram_rtl.BE_B1_i" output="bram_phy.BE_B1_i"/>
            <direct name="direct_BE_B2_i" input="bram_rtl.BE_B2_i" output="bram_phy.BE_B2_i"/>
            <direct name="direct_FLUSH2_i" input="bram_rtl.FLUSH2_i" output="bram_phy.FLUSH2_i"/>
            <direct name="direct_RAM_ID_i_i" input="bram_rtl.RAM_ID_i" output="bram_phy.RAM_ID_i"/>
            <direct name="direct_PL_INIT_i_i" input="bram_rtl.PL_INIT_i" output="bram_phy.PL_INIT_i"/>
            <direct name="direct_PL_ENA_i_i" input="bram_rtl.PL_ENA_i" output="bram_phy.PL_ENA_i"/>
            <direct name="direct_PL_REN_i_i" input="bram_rtl.PL_REN_i" output="bram_phy.PL_REN_i"/>
            <direct name="direct_PL_CLK_i_c" input="bram_rtl.PL_CLK_i" output="bram_phy.PL_CLK_i"/>
            <direct name="direct_PL_WEN_i_i" input="bram_rtl.PL_WEN_i" output="bram_phy.PL_WEN_i"/>
            <direct name="direct_PL_ADDR_i_i" input="bram_rtl.PL_ADDR_i" output="bram_phy.PL_ADDR_i"/>
            <direct name="direct_PL_DATA_i_i" input="bram_rtl.PL_DATA_i" output="bram_phy.PL_DATA_i"/>
            <direct name="direct_PL_INIT_o_o" input="bram_phy.PL_INIT_o" output="bram_rtl.PL_INIT_o"/>
            <direct name="direct_PL_ENA_o_o" input="bram_phy.PL_ENA_o" output="bram_rtl.PL_ENA_o"/>
            <direct name="direct_PL_REN_o_o" input="bram_phy.PL_REN_o" output="bram_rtl.PL_REN_o"/>
            <direct name="direct_PL_CLK_o_o" input="bram_phy.PL_CLK_o" output="bram_rtl.PL_CLK_o"/>
            <direct name="direct_PL_WEN_o_o" input="bram_phy.PL_WEN_o" output="bram_rtl.PL_WEN_o"/>
            <direct name="direct_PL_ADDR_o_o" input="bram_phy.PL_ADDR_o" output="bram_rtl.PL_ADDR_o"/>
            <direct name="direct_PL_DATA_o_o" input="bram_phy.PL_DATA_o" output="bram_rtl.PL_DATA_o"/>
            <direct name="direct_sc_in_i" input="bram_rtl.sc_in" output="bram_phy.sc_in"/>
            <direct name="direct_sc_out_o" input="bram_phy.sc_out" output="bram_rtl.sc_out"/>
          </interconnect>
        </mode>
        <mode name="RS_TDP36K" disable_packing="false">
          <pb_type name="RS_TDP36K" blif_model=".subckt RS_TDP36K" num_pb="1">
            <input name="WDATA_A1" num_pins="18"/>
            <input name="WDATA_A2" num_pins="18"/>
            <output name="RDATA_A1" num_pins="18"/>
            <output name="RDATA_A2" num_pins="18"/>
            <input name="ADDR_A1" num_pins="15"/>
            <input name="ADDR_A2" num_pins="14"/>
            <clock name="CLK_A1" num_pins="1"/>
            <clock name="CLK_A2" num_pins="1"/>
            <input name="REN_A1" num_pins="1"/>
            <input name="REN_A2" num_pins="1"/>
            <input name="WEN_A1" num_pins="1"/>
            <input name="WEN_A2" num_pins="1"/>
            <input name="BE_A1" num_pins="2"/>
            <input name="BE_A2" num_pins="2"/>
            <input name="FLUSH1" num_pins="1"/>
            <input name="WDATA_B1" num_pins="18"/>
            <input name="WDATA_B2" num_pins="18"/>
            <output name="RDATA_B1" num_pins="18"/>
            <output name="RDATA_B2" num_pins="18"/>
            <input name="ADDR_B1" num_pins="15"/>
            <input name="ADDR_B2" num_pins="14"/>
            <clock name="CLK_B1" num_pins="1"/>
            <clock name="CLK_B2" num_pins="1"/>
            <input name="REN_B1" num_pins="1"/>
            <input name="REN_B2" num_pins="1"/>
            <input name="WEN_B1" num_pins="1"/>
            <input name="WEN_B2" num_pins="1"/>
            <input name="BE_B1" num_pins="2"/>
            <input name="BE_B2" num_pins="2"/>
            <input name="FLUSH2" num_pins="1"/>
            <T_setup value="500e-12" port="RS_TDP36K.WDATA_A1" clock="CLK_A1"/>
            <T_setup value="500e-12" port="RS_TDP36K.WDATA_A2" clock="CLK_A2"/>
            <T_clock_to_Q max="500e-12" port="RS_TDP36K.RDATA_A1" clock="CLK_A1"/>
            <T_clock_to_Q max="500e-12" port="RS_TDP36K.RDATA_A2" clock="CLK_A2"/>
            <T_setup value="500e-12" port="RS_TDP36K.ADDR_A1" clock="CLK_A1"/>
            <T_setup value="500e-12" port="RS_TDP36K.ADDR_A2" clock="CLK_A2"/>
            <T_setup value="500e-12" port="RS_TDP36K.REN_A1" clock="CLK_A1"/>
            <T_setup value="500e-12" port="RS_TDP36K.REN_A2" clock="CLK_A2"/>
            <T_setup value="500e-12" port="RS_TDP36K.WEN_A1" clock="CLK_A1"/>
            <T_setup value="500e-12" port="RS_TDP36K.WEN_A2" clock="CLK_A2"/>
            <T_setup value="500e-12" port="RS_TDP36K.BE_A1" clock="CLK_A1"/>
            <T_setup value="500e-12" port="RS_TDP36K.BE_A2" clock="CLK_A2"/>
            <T_setup value="500e-12" port="RS_TDP36K.FLUSH1" clock="CLK_A1"/>
            <T_setup value="500e-12" port="RS_TDP36K.WDATA_B1" clock="CLK_B1"/>
            <T_setup value="500e-12" port="RS_TDP36K.WDATA_B2" clock="CLK_B2"/>
            <T_clock_to_Q max="500e-12" port="RS_TDP36K.RDATA_B1" clock="CLK_B1"/>
            <T_clock_to_Q max="500e-12" port="RS_TDP36K.RDATA_B2" clock="CLK_B2"/>
            <T_setup value="500e-12" port="RS_TDP36K.ADDR_B1" clock="CLK_B1"/>
            <T_setup value="500e-12" port="RS_TDP36K.ADDR_B2" clock="CLK_B2"/>
            <T_setup value="500e-12" port="RS_TDP36K.REN_B1" clock="CLK_B1"/>
            <T_setup value="500e-12" port="RS_TDP36K.REN_B2" clock="CLK_B2"/>
            <T_setup value="500e-12" port="RS_TDP36K.WEN_B1" clock="CLK_B1"/>
            <T_setup value="500e-12" port="RS_TDP36K.WEN_B2" clock="CLK_B2"/>
            <T_setup value="500e-12" port="RS_TDP36K.BE_B1" clock="CLK_B1"/>
            <T_setup value="500e-12" port="RS_TDP36K.BE_B2" clock="CLK_B2"/>
            <T_setup value="500e-12" port="RS_TDP36K.FLUSH2" clock="CLK_B1"/>
          </pb_type>
          <interconnect>
            <direct name="direct_WDATA_A1_i" input="bram_rtl.WDATA_A1_i" output="RS_TDP36K.WDATA_A1"/>
            <direct name="direct_WDATA_A2_i" input="bram_rtl.WDATA_A2_i" output="RS_TDP36K.WDATA_A2"/>
            <direct name="direct_RDATA_A1_o" input="RS_TDP36K.RDATA_A1" output="bram_rtl.RDATA_A1_o"/>
            <direct name="direct_RDATA_A2_o" input="RS_TDP36K.RDATA_A2" output="bram_rtl.RDATA_A2_o"/>
            <direct name="direct_ADDR_A1_i" input="bram_rtl.ADDR_A1_i" output="RS_TDP36K.ADDR_A1"/>
            <direct name="direct_ADDR_A2_i" input="bram_rtl.ADDR_A2_i" output="RS_TDP36K.ADDR_A2"/>
            <direct name="direct_CLK_A1_c" input="bram_rtl.CLK_A1_i" output="RS_TDP36K.CLK_A1"/>
            <direct name="direct_CLK_A2_c" input="bram_rtl.CLK_A2_i" output="RS_TDP36K.CLK_A2"/>
            <direct name="direct_REN_A1_i" input="bram_rtl.REN_A1_i" output="RS_TDP36K.REN_A1"/>
            <direct name="direct_REN_A2_i" input="bram_rtl.REN_A2_i" output="RS_TDP36K.REN_A2"/>
            <direct name="direct_WEN_A1_i" input="bram_rtl.WEN_A1_i" output="RS_TDP36K.WEN_A1"/>
            <direct name="direct_WEN_A2_i" input="bram_rtl.WEN_A2_i" output="RS_TDP36K.WEN_A2"/>
            <direct name="direct_BE_A1_i" input="bram_rtl.BE_A1_i" output="RS_TDP36K.BE_A1"/>
            <direct name="direct_BE_A2_i" input="bram_rtl.BE_A2_i" output="RS_TDP36K.BE_A2"/>
            <direct name="direct_FLUSH1_i" input="bram_rtl.FLUSH1_i" output="RS_TDP36K.FLUSH1"/>
            <direct name="direct_WDATA_B1_i" input="bram_rtl.WDATA_B1_i" output="RS_TDP36K.WDATA_B1"/>
            <direct name="direct_WDATA_B2_i" input="bram_rtl.WDATA_B2_i" output="RS_TDP36K.WDATA_B2"/>
            <direct name="direct_RDATA_B1_o" input="RS_TDP36K.RDATA_B1" output="bram_rtl.RDATA_B1_o"/>
            <direct name="direct_RDATA_B2_o" input="RS_TDP36K.RDATA_B2" output="bram_rtl.RDATA_B2_o"/>
            <direct name="direct_ADDR_B1_i" input="bram_rtl.ADDR_B1_i" output="RS_TDP36K.ADDR_B1"/>
            <direct name="direct_ADDR_B2_i" input="bram_rtl.ADDR_B2_i" output="RS_TDP36K.ADDR_B2"/>
            <direct name="direct_CLK_B1_c" input="bram_rtl.CLK_B1_i" output="RS_TDP36K.CLK_B1"/>
            <direct name="direct_CLK_B2_c" input="bram_rtl.CLK_B2_i" output="RS_TDP36K.CLK_B2"/>
            <direct name="direct_REN_B1_i" input="bram_rtl.REN_B1_i" output="RS_TDP36K.REN_B1"/>
            <direct name="direct_REN_B2_i" input="bram_rtl.REN_B2_i" output="RS_TDP36K.REN_B2"/>
            <direct name="direct_WEN_B1_i" input="bram_rtl.WEN_B1_i" output="RS_TDP36K.WEN_B1"/>
            <direct name="direct_WEN_B2_i" input="bram_rtl.WEN_B2_i" output="RS_TDP36K.WEN_B2"/>
            <direct name="direct_BE_B1_i" input="bram_rtl.BE_B1_i" output="RS_TDP36K.BE_B1"/>
            <direct name="direct_BE_B2_i" input="bram_rtl.BE_B2_i" output="RS_TDP36K.BE_B2"/>
            <direct name="direct_FLUSH2_i" input="bram_rtl.FLUSH2_i" output="RS_TDP36K.FLUSH2"/>
          </interconnect>
        </mode>
      </pb_type>
      <!-- OPTIONAL RESET INVERTER -->
      <pb_type name="sr_opt" num_pb="4">
        <input name="I" num_pins="1"/>
        <output name="O" num_pins="1"/>
        <pb_type name="sr_inv" blif_model=".subckt inverter" num_pb="1">
          <input name="a" num_pins="1"/>
          <output name="z" num_pins="1"/>
          <delay_constant max="100.0e-12" min="100.0e-12" in_port="sr_inv.a" out_port="sr_inv.z"/>
        </pb_type>
        <interconnect>
          <direct name="direct1" input="sr_opt.I" output="sr_inv.a"/>
          <mux name="sr_mux" input="sr_opt.I sr_inv.z" output="sr_opt.O"/>
        </interconnect>
      </pb_type>
      <!-- OPTIONAL CONSTANT GENERATORS -->
      <pb_type name="flush_opt" num_pb="1">
        <input name="I" num_pins="2"/>
        <output name="O" num_pins="2"/>
        <pb_type name="logic0" blif_model=".subckt logic0" num_pb="1">
          <output name="logic0" num_pins="1"/>
        </pb_type>
        <pb_type name="logic1" blif_model=".subckt logic1" num_pb="1">
          <output name="logic1" num_pins="1"/>
        </pb_type>
        <interconnect>
          <complete name="opt_const" input="flush_opt.I logic0.logic0 logic1.logic1" output="flush_opt.O"/>
        </interconnect>
      </pb_type>
      <!-- OPTIONAL CLOCK INVERSION -->
      <pb_type name="clk_opt" num_pb="4">
        <input name="I" num_pins="1"/>
        <output name="O" num_pins="1"/>
        <pb_type name="clk_inv" blif_model=".subckt clock_inverter" num_pb="1">
          <clock name="a" num_pins="1"/>
          <output name="z" num_pins="1"/>
          <delay_constant max="100.0e-12" min="100.0e-12" in_port="clk_inv.a" out_port="clk_inv.z"/>
        </pb_type>
        <interconnect>
          <direct name="direct1" input="clk_opt.I" output="clk_inv.a"/>
          <mux name="clk_mux" input="clk_opt.I clk_inv.z" output="clk_opt.O"/>
        </interconnect>
      </pb_type>
      <pb_type name="ff_wrap" num_pb="1">
        <input name="rdata_a1" num_pins="18"/>
        <input name="rdata_b1" num_pins="18"/>
        <input name="rdata_a2" num_pins="18"/>
        <input name="rdata_b2" num_pins="18"/>
        <input name="reset" num_pins="4"/>
        <input name="enable" num_pins="4"/>
        <clock name="clock" num_pins="4"/>
        <output name="out_a1" num_pins="18"/>
        <output name="out_b1" num_pins="18"/>
        <output name="out_a2" num_pins="18"/>
        <output name="out_b2" num_pins="18"/>
        <input name="sc_in" num_pins="4"/>
        <output name="sc_out" num_pins="4"/>
        <pb_type name="ff_group" num_pb="4">
          <input name="in" num_pins="18"/>
          <clock name="clock" num_pins="1"/>
          <clock name="reset" num_pins="1"/>
          <clock name="enable" num_pins="1"/>
          <output name="out" num_pins="18"/>
          <input name="SI" num_pins="1"/>
          <output name="SO" num_pins="1"/>
          <mode name="physical" disable_packing="true">
            <pb_type name="flop_group" num_pb="1">
              <input name="DIN" num_pins="18"/>
              <input name="RESET" num_pins="1"/>
              <input name="ENABLE" num_pins="1"/>
              <clock name="CLOCK" num_pins="1"/>
              <output name="Q" num_pins="18"/>
              <input name="SI" num_pins="1"/>
              <output name="SO" num_pins="1"/>
              <pb_type name="MMFF" num_pb="18" blif_model=".subckt mmff">
                <input name="D" num_pins="1"/>
                <input name="R" num_pins="1"/>
                <input name="E" num_pins="1"/>
                <clock name="C" num_pins="1"/>
                <output name="Q" num_pins="1"/>
                <input name="SI" num_pins="1"/>
                <output name="SO" num_pins="1"/>
                <T_setup value="1.41766e-10" port="MMFF.D" clock="C"/>
                <T_setup value="1.41766e-10" port="MMFF.R" clock="C"/>
                <T_setup value="1.41766e-10" port="MMFF.E" clock="C"/>
                <T_hold value="9.72197e-11" port="MMFF.D" clock="C"/>
                <T_clock_to_Q min="8.6558e-11" max="9.9981e-11" port="MMFF.Q" clock="C"/>
              </pb_type>
              <interconnect>
                <direct name="direct_din" input="flop_group.DIN" output="MMFF.D"/>
                <complete name="direct_reset" input="flop_group.RESET" output="MMFF.R"/>
                <complete name="direct_enable" input="flop_group.ENABLE" output="MMFF.E"/>
                <complete name="direct_clock" input="flop_group.CLOCK" output="MMFF.C"/>
                <direct name="direct_q" input="MMFF.Q" output="flop_group.Q"/>
                <direct name="scan0" input="flop_group.SI" output="MMFF[0].SI"/>
                <direct name="scan1" input="MMFF[0].SO" output="MMFF[1].SI"/>
                <direct name="scan2" input="MMFF[1].SO" output="MMFF[2].SI"/>
                <direct name="scan3" input="MMFF[2].SO" output="MMFF[3].SI"/>
                <direct name="scan4" input="MMFF[3].SO" output="MMFF[4].SI"/>
                <direct name="scan5" input="MMFF[4].SO" output="MMFF[5].SI"/>
                <direct name="scan6" input="MMFF[5].SO" output="MMFF[6].SI"/>
                <direct name="scan7" input="MMFF[6].SO" output="MMFF[7].SI"/>
                <direct name="scan8" input="MMFF[7].SO" output="MMFF[8].SI"/>
                <direct name="scan9" input="MMFF[8].SO" output="MMFF[9].SI"/>
                <direct name="scan10" input="MMFF[9].SO" output="MMFF[10].SI"/>
                <direct name="scan11" input="MMFF[10].SO" output="MMFF[11].SI"/>
                <direct name="scan12" input="MMFF[11].SO" output="MMFF[12].SI"/>
                <direct name="scan13" input="MMFF[12].SO" output="MMFF[13].SI"/>
                <direct name="scan14" input="MMFF[13].SO" output="MMFF[14].SI"/>
                <direct name="scan15" input="MMFF[14].SO" output="MMFF[15].SI"/>
                <direct name="scan16" input="MMFF[15].SO" output="MMFF[16].SI"/>
                <direct name="scan17" input="MMFF[16].SO" output="MMFF[17].SI"/>
                <direct name="scan18" input="MMFF[17].SO" output="flop_group.SO"/>
              </interconnect>
            </pb_type>
            <interconnect>
              <direct name="direct_si" input="ff_group.SI" output="flop_group.SI"/>
              <direct name="direct_so" input="flop_group.SO" output="ff_group.SO"/>
              <direct name="direct_in" input="ff_group.in" output="flop_group.DIN"/>
              <direct name="direct_clock" input="ff_group.clock" output="flop_group.CLOCK"/>
              <direct name="direct_reset" input="ff_group.reset" output="flop_group.RESET"/>
              <direct name="direct_enable" input="ff_group.enable" output="flop_group.ENABLE"/>
              <direct name="direct_q" input="flop_group.Q" output="ff_group.out"/>
            </interconnect>
          </mode>
          <mode name="posedge_flop_flop_mode">
            <pb_type name="flop_group" num_pb="1">
              <input name="DIN" num_pins="18"/>
              <input name="RESET" num_pins="1"/>
              <input name="ENABLE" num_pins="1"/>
              <clock name="CLOCK" num_pins="1"/>
              <output name="Q" num_pins="18"/>
              <mode name="flop_no_reset_no_enable">
                <pb_type name="DFF" num_pb="18" blif_model=".subckt dff">
                  <input name="D" num_pins="1"/>
                  <clock name="C" num_pins="1"/>
                  <output name="Q" num_pins="1"/>
                  <T_setup value="1.41766e-10" port="DFF.D" clock="C"/>
                  <T_hold value="9.72197e-11" port="DFF.D" clock="C"/>
                  <T_clock_to_Q min="8.6558e-11" max="9.9981e-11" port="DFF.Q" clock="C"/>
                </pb_type>
                <interconnect>
                  <direct name="direct_din" input="flop_group.DIN" output="DFF.D"/>
                  <complete name="direct_clock" input="flop_group.CLOCK" output="DFF.C"/>
                  <direct name="direct_q" input="DFF.Q" output="flop_group.Q"/>
                </interconnect>
              </mode>
              <mode name="no_reset_sync_enable">
                <pb_type name="DFFE" num_pb="18" blif_model=".subckt dffe">
                  <input name="D" num_pins="1"/>
                  <input name="E" num_pins="1"/>
                  <clock name="C" num_pins="1"/>
                  <output name="Q" num_pins="1"/>
                  <T_setup value="1.41766e-10" port="DFFE.D" clock="C"/>
                  <T_setup value="1.41766e-10" port="DFFE.E" clock="C"/>
                  <T_hold value="9.72197e-11" port="DFFE.D" clock="C"/>
                  <T_clock_to_Q min="8.6558e-11" max="9.9981e-11" port="DFFE.Q" clock="C"/>
                </pb_type>
                <interconnect>
                  <direct name="direct_din" input="flop_group.DIN" output="DFFE.D"/>
                  <complete name="direct_reset" input="flop_group.ENABLE" output="DFFE.E"/>
                  <complete name="direct_clock" input="flop_group.CLOCK" output="DFFE.C"/>
                  <direct name="direct_q" input="DFFE.Q" output="flop_group.Q"/>
                </interconnect>
              </mode>
              <mode name="sync_reset_sync_enable">
                <pb_type name="SDFFRE" num_pb="18" blif_model=".subckt sdffre">
                  <input name="D" num_pins="1"/>
                  <input name="R" num_pins="1"/>
                  <input name="E" num_pins="1"/>
                  <clock name="C" num_pins="1"/>
                  <output name="Q" num_pins="1"/>
                  <T_setup value="1.41766e-10" port="SDFFRE.D" clock="C"/>
                  <T_setup value="1.41766e-10" port="SDFFRE.R" clock="C"/>
                  <T_setup value="1.41766e-10" port="SDFFRE.E" clock="C"/>
                  <T_hold value="9.72197e-11" port="SDFFRE.D" clock="C"/>
                  <T_clock_to_Q min="8.6558e-11" max="9.9981e-11" port="SDFFRE.Q" clock="C"/>
                </pb_type>
                <interconnect>
                  <direct name="direct_din" input="flop_group.DIN" output="SDFFRE.D"/>
                  <complete name="direct_reset" input="flop_group.RESET" output="SDFFRE.R"/>
                  <complete name="direct_enable" input="flop_group.ENABLE" output="SDFFRE.E"/>
                  <complete name="direct_clock" input="flop_group.CLOCK" output="SDFFRE.C"/>
                  <direct name="direct_q" input="SDFFRE.Q" output="flop_group.Q"/>
                </interconnect>
              </mode>
              <mode name="async_reset_sync_enable">
                <pb_type name="DFFRE" num_pb="18" blif_model=".subckt dffre">
                  <input name="D" num_pins="1"/>
                  <input name="R" num_pins="1"/>
                  <input name="E" num_pins="1"/>
                  <clock name="C" num_pins="1"/>
                  <output name="Q" num_pins="1"/>
                  <T_setup value="1.41766e-10" port="DFFRE.D" clock="C"/>
                  <T_setup value="1.41766e-10" port="DFFRE.R" clock="C"/>
                  <T_setup value="1.41766e-10" port="DFFRE.E" clock="C"/>
                  <T_hold value="9.72197e-11" port="DFFRE.D" clock="C"/>
                  <T_clock_to_Q min="8.6558e-11" max="9.9981e-11" port="DFFRE.Q" clock="C"/>
                </pb_type>
                <interconnect>
                  <direct name="direct_din" input="flop_group.DIN" output="DFFRE.D"/>
                  <complete name="direct_reset" input="flop_group.RESET" output="DFFRE.R"/>
                  <complete name="direct_enable" input="flop_group.ENABLE" output="DFFRE.E"/>
                  <complete name="direct_clock" input="flop_group.CLOCK" output="DFFRE.C"/>
                  <direct name="direct_q" input="DFFRE.Q" output="flop_group.Q"/>
                </interconnect>
              </mode>
              <mode name="sync_reset_no_enable">
                <pb_type name="SDFF" num_pb="18" blif_model=".subckt sdff">
                  <input name="D" num_pins="1"/>
                  <input name="R" num_pins="1"/>
                  <clock name="C" num_pins="1"/>
                  <output name="Q" num_pins="1"/>
                  <T_setup value="1.41766e-10" port="SDFF.D" clock="C"/>
                  <T_setup value="1.41766e-10" port="SDFF.R" clock="C"/>
                  <T_hold value="9.72197e-11" port="SDFF.D" clock="C"/>
                  <T_clock_to_Q min="8.6558e-11" max="9.9981e-11" port="SDFF.Q" clock="C"/>
                </pb_type>
                <interconnect>
                  <direct name="direct_din" input="flop_group.DIN" output="SDFF.D"/>
                  <complete name="direct_reset" input="flop_group.RESET" output="SDFF.R"/>
                  <complete name="direct_clock" input="flop_group.CLOCK" output="SDFF.C"/>
                  <direct name="direct_q" input="SDFF.Q" output="flop_group.Q"/>
                </interconnect>
              </mode>
              <mode name="async_reset_no_enable">
                <pb_type name="DFFR" num_pb="18" blif_model=".subckt dffr">
                  <input name="D" num_pins="1" port_class="D"/>
                  <input name="R" num_pins="1"/>
                  <clock name="C" num_pins="1" port_class="clock"/>
                  <output name="Q" num_pins="1" port_class="Q"/>
                  <T_setup value="1.41766e-10" port="DFFR.D" clock="C"/>
                  <T_setup value="1.41766e-10" port="DFFR.R" clock="C"/>
                  <T_hold value="9.72197e-11" port="DFFR.D" clock="C"/>
                  <T_clock_to_Q min="8.6558e-11" max="9.9981e-11" port="DFFR.Q" clock="C"/>
                </pb_type>
                <interconnect>
                  <direct name="direct_din" input="flop_group.DIN" output="DFFR.D"/>
                  <complete name="direct_reset" input="flop_group.RESET" output="DFFR.R"/>
                  <complete name="direct_clock" input="flop_group.CLOCK" output="DFFR.C"/>
                  <direct name="direct_q" input="DFFR.Q" output="flop_group.Q"/>
                </interconnect>
              </mode>
            </pb_type>
            <interconnect>
              <direct name="direct_in" input="ff_group.in" output="flop_group.DIN"/>
              <direct name="direct_clock" input="ff_group.clock" output="flop_group.CLOCK"/>
              <direct name="direct_reset" input="ff_group.reset" output="flop_group.RESET"/>
              <direct name="direct_enable" input="ff_group.enable" output="flop_group.ENABLE"/>
              <direct name="direct_q" input="flop_group.Q" output="ff_group.out"/>
            </interconnect>
          </mode>
          <mode name="negedge_flop_flop_mode">
            <pb_type name="flop_group" num_pb="1">
              <input name="DIN" num_pins="18"/>
              <input name="RESET" num_pins="1"/>
              <input name="ENABLE" num_pins="1"/>
              <clock name="CLOCK" num_pins="1"/>
              <output name="Q" num_pins="18"/>
              <mode name="flop_no_reset_no_enable">
                <pb_type name="DFFN" num_pb="18" blif_model=".subckt dffn">
                  <input name="D" num_pins="1"/>
                  <clock name="C" num_pins="1"/>
                  <output name="Q" num_pins="1"/>
                  <T_setup value="1.41766e-10" port="DFFN.D" clock="C"/>
                  <T_hold value="9.72197e-11" port="DFFN.D" clock="C"/>
                  <T_clock_to_Q min="8.6558e-11" max="9.9981e-11" port="DFFN.Q" clock="C"/>
                </pb_type>
                <interconnect>
                  <direct name="direct_din" input="flop_group.DIN" output="DFFN.D"/>
                  <complete name="direct_clock" input="flop_group.CLOCK" output="DFFN.C"/>
                  <direct name="direct_q" input="DFFN.Q" output="flop_group.Q"/>
                </interconnect>
              </mode>
              <mode name="no_reset_sync_enable">
                <pb_type name="DFFNE" num_pb="18" blif_model=".subckt dffne">
                  <input name="D" num_pins="1"/>
                  <input name="E" num_pins="1"/>
                  <clock name="C" num_pins="1"/>
                  <output name="Q" num_pins="1"/>
                  <T_setup value="1.41766e-10" port="DFFNE.D" clock="C"/>
                  <T_setup value="1.41766e-10" port="DFFNE.E" clock="C"/>
                  <T_hold value="9.72197e-11" port="DFFNE.D" clock="C"/>
                  <T_clock_to_Q min="8.6558e-11" max="9.9981e-11" port="DFFNE.Q" clock="C"/>
                </pb_type>
                <interconnect>
                  <direct name="direct_din" input="flop_group.DIN" output="DFFNE.D"/>
                  <complete name="direct_reset" input="flop_group.ENABLE" output="DFFNE.E"/>
                  <complete name="direct_clock" input="flop_group.CLOCK" output="DFFNE.C"/>
                  <direct name="direct_q" input="DFFNE.Q" output="flop_group.Q"/>
                </interconnect>
              </mode>
              <mode name="sync_reset_sync_enable">
                <pb_type name="SDFFNRE" num_pb="18" blif_model=".subckt sdffnre">
                  <input name="D" num_pins="1"/>
                  <input name="R" num_pins="1"/>
                  <input name="E" num_pins="1"/>
                  <clock name="C" num_pins="1"/>
                  <output name="Q" num_pins="1"/>
                  <T_setup value="1.41766e-10" port="SDFFNRE.D" clock="C"/>
                  <T_setup value="1.41766e-10" port="SDFFNRE.R" clock="C"/>
                  <T_setup value="1.41766e-10" port="SDFFNRE.E" clock="C"/>
                  <T_hold value="9.72197e-11" port="SDFFNRE.D" clock="C"/>
                  <T_clock_to_Q min="8.6558e-11" max="9.9981e-11" port="SDFFNRE.Q" clock="C"/>
                </pb_type>
                <interconnect>
                  <direct name="direct_din" input="flop_group.DIN" output="SDFFNRE.D"/>
                  <complete name="direct_reset" input="flop_group.RESET" output="SDFFNRE.R"/>
                  <complete name="direct_enable" input="flop_group.ENABLE" output="SDFFNRE.E"/>
                  <complete name="direct_clock" input="flop_group.CLOCK" output="SDFFNRE.C"/>
                  <direct name="direct_q" input="SDFFNRE.Q" output="flop_group.Q"/>
                </interconnect>
              </mode>
              <mode name="async_reset_sync_enable">
                <pb_type name="DFFNRE" num_pb="18" blif_model=".subckt dffnre">
                  <input name="D" num_pins="1"/>
                  <input name="R" num_pins="1"/>
                  <input name="E" num_pins="1"/>
                  <clock name="C" num_pins="1"/>
                  <output name="Q" num_pins="1"/>
                  <T_setup value="1.41766e-10" port="DFFNRE.D" clock="C"/>
                  <T_setup value="1.41766e-10" port="DFFNRE.R" clock="C"/>
                  <T_setup value="1.41766e-10" port="DFFNRE.E" clock="C"/>
                  <T_hold value="9.72197e-11" port="DFFNRE.D" clock="C"/>
                  <T_clock_to_Q min="8.6558e-11" max="9.9981e-11" port="DFFNRE.Q" clock="C"/>
                </pb_type>
                <interconnect>
                  <direct name="direct_din" input="flop_group.DIN" output="DFFNRE.D"/>
                  <complete name="direct_reset" input="flop_group.RESET" output="DFFNRE.R"/>
                  <complete name="direct_enable" input="flop_group.ENABLE" output="DFFNRE.E"/>
                  <complete name="direct_clock" input="flop_group.CLOCK" output="DFFNRE.C"/>
                  <direct name="direct_q" input="DFFNRE.Q" output="flop_group.Q"/>
                </interconnect>
              </mode>
              <mode name="sync_reset_no_enable">
                <pb_type name="SDFFN" num_pb="18" blif_model=".subckt sdffn">
                  <input name="D" num_pins="1"/>
                  <input name="R" num_pins="1"/>
                  <clock name="C" num_pins="1"/>
                  <output name="Q" num_pins="1"/>
                  <T_setup value="1.41766e-10" port="SDFFN.D" clock="C"/>
                  <T_setup value="1.41766e-10" port="SDFFN.R" clock="C"/>
                  <T_hold value="9.72197e-11" port="SDFFN.D" clock="C"/>
                  <T_clock_to_Q min="8.6558e-11" max="9.9981e-11" port="SDFFN.Q" clock="C"/>
                </pb_type>
                <interconnect>
                  <direct name="direct_din" input="flop_group.DIN" output="SDFFN.D"/>
                  <complete name="direct_reset" input="flop_group.RESET" output="SDFFN.R"/>
                  <complete name="direct_clock" input="flop_group.CLOCK" output="SDFFN.C"/>
                  <direct name="direct_q" input="SDFFN.Q" output="flop_group.Q"/>
                </interconnect>
              </mode>
              <mode name="async_reset_no_enable">
                <pb_type name="DFFNR" num_pb="18" blif_model=".subckt dffnr">
                  <input name="D" num_pins="1" port_class="D"/>
                  <input name="R" num_pins="1"/>
                  <clock name="C" num_pins="1" port_class="clock"/>
                  <output name="Q" num_pins="1" port_class="Q"/>
                  <T_setup value="1.41766e-10" port="DFFNR.D" clock="C"/>
                  <T_setup value="1.41766e-10" port="DFFNR.R" clock="C"/>
                  <T_hold value="9.72197e-11" port="DFFNR.D" clock="C"/>
                  <T_clock_to_Q min="8.6558e-11" max="9.9981e-11" port="DFFNR.Q" clock="C"/>
                </pb_type>
                <interconnect>
                  <direct name="direct_din" input="flop_group.DIN" output="DFFNR.D"/>
                  <complete name="direct_reset" input="flop_group.RESET" output="DFFNR.R"/>
                  <complete name="direct_clock" input="flop_group.CLOCK" output="DFFNR.C"/>
                  <direct name="direct_q" input="DFFNR.Q" output="flop_group.Q"/>
                </interconnect>
              </mode>
            </pb_type>
            <interconnect>
              <direct name="direct_in" input="ff_group.in" output="flop_group.DIN"/>
              <direct name="direct_clock" input="ff_group.clock" output="flop_group.CLOCK"/>
              <direct name="direct_reset" input="ff_group.reset" output="flop_group.RESET"/>
              <direct name="direct_enable" input="ff_group.enable" output="flop_group.ENABLE"/>
              <direct name="direct_q" input="flop_group.Q" output="ff_group.out"/>
            </interconnect>
          </mode>
          <mode name="posedge_flop_latch_mode">
            <pb_type name="flop_group" num_pb="1">
              <input name="DIN" num_pins="18"/>
              <input name="RESET" num_pins="1"/>
              <input name="ENABLE" num_pins="1"/>
              <clock name="CLOCK" num_pins="1"/>
              <output name="Q" num_pins="18"/>
              <mode name="flop_no_reset_no_enable">
                <pb_type name="LATCH" num_pb="18" blif_model=".subckt latch">
                  <input name="D" num_pins="1"/>
                  <clock name="G" num_pins="1"/>
                  <output name="Q" num_pins="1"/>
                  <T_setup value="1.41766e-10" port="LATCH.D" clock="G"/>
                  <T_hold value="9.72197e-11" port="LATCH.D" clock="G"/>
                  <T_clock_to_Q min="8.6558e-11" max="9.9981e-11" port="LATCH.Q" clock="G"/>
                </pb_type>
                <interconnect>
                  <direct name="direct_din" input="flop_group.DIN" output="LATCH.D"/>
                  <complete name="direct_clock" input="flop_group.CLOCK" output="LATCH.G"/>
                  <direct name="direct_q" input="LATCH.Q" output="flop_group.Q"/>
                </interconnect>
              </mode>
              <mode name="async_reset_no_enable">
                <pb_type name="LATCHR" num_pb="18" blif_model=".subckt latchr">
                  <input name="D" num_pins="1" port_class="D"/>
                  <input name="R" num_pins="1"/>
                  <clock name="G" num_pins="1" port_class="clock"/>
                  <output name="Q" num_pins="1" port_class="Q"/>
                  <T_setup value="1.41766e-10" port="LATCHR.D" clock="G"/>
                  <T_setup value="1.41766e-10" port="LATCHR.R" clock="G"/>
                  <T_hold value="9.72197e-11" port="LATCHR.D" clock="G"/>
                  <T_clock_to_Q min="8.6558e-11" max="9.9981e-11" port="LATCHR.Q" clock="G"/>
                </pb_type>
                <interconnect>
                  <direct name="direct_din" input="flop_group.DIN" output="LATCHR.D"/>
                  <complete name="direct_reset" input="flop_group.RESET" output="LATCHR.R"/>
                  <complete name="direct_clock" input="flop_group.CLOCK" output="LATCHR.G"/>
                  <direct name="direct_q" input="LATCHR.Q" output="flop_group.Q"/>
                </interconnect>
              </mode>
            </pb_type>
            <interconnect>
              <direct name="direct_in" input="ff_group.in" output="flop_group.DIN"/>
              <direct name="direct_clock" input="ff_group.clock" output="flop_group.CLOCK"/>
              <direct name="direct_reset" input="ff_group.reset" output="flop_group.RESET"/>
              <direct name="direct_enable" input="ff_group.enable" output="flop_group.ENABLE"/>
              <direct name="direct_q" input="flop_group.Q" output="ff_group.out"/>
            </interconnect>
          </mode>
          <mode name="negedge_flop_latch_mode">
            <pb_type name="flop_group" num_pb="1">
              <input name="DIN" num_pins="18"/>
              <input name="RESET" num_pins="1"/>
              <input name="ENABLE" num_pins="1"/>
              <clock name="CLOCK" num_pins="1"/>
              <output name="Q" num_pins="18"/>
              <mode name="flop_no_reset_no_enable">
                <pb_type name="LATCHN" num_pb="18" blif_model=".subckt latchn">
                  <input name="D" num_pins="1"/>
                  <clock name="G" num_pins="1"/>
                  <output name="Q" num_pins="1"/>
                  <T_setup value="1.41766e-10" port="LATCHN.D" clock="G"/>
                  <T_hold value="9.72197e-11" port="LATCHN.D" clock="G"/>
                  <T_clock_to_Q min="8.6558e-11" max="9.9981e-11" port="LATCHN.Q" clock="G"/>
                </pb_type>
                <interconnect>
                  <direct name="direct_din" input="flop_group.DIN" output="LATCHN.D"/>
                  <complete name="direct_clock" input="flop_group.CLOCK" output="LATCHN.G"/>
                  <direct name="direct_q" input="LATCHN.Q" output="flop_group.Q"/>
                </interconnect>
              </mode>
              <mode name="async_reset_no_enable">
                <pb_type name="LATCHNR" num_pb="18" blif_model=".subckt latchnr">
                  <input name="D" num_pins="1" port_class="D"/>
                  <input name="R" num_pins="1"/>
                  <clock name="G" num_pins="1" port_class="clock"/>
                  <output name="Q" num_pins="1" port_class="Q"/>
                  <T_setup value="1.41766e-10" port="LATCHNR.D" clock="G"/>
                  <T_setup value="1.41766e-10" port="LATCHNR.R" clock="G"/>
                  <T_hold value="9.72197e-11" port="LATCHNR.D" clock="G"/>
                  <T_clock_to_Q min="8.6558e-11" max="9.9981e-11" port="LATCHNR.Q" clock="G"/>
                </pb_type>
                <interconnect>
                  <direct name="direct_din" input="flop_group.DIN" output="LATCHNR.D"/>
                  <complete name="direct_reset" input="flop_group.RESET" output="LATCHNR.R"/>
                  <complete name="direct_clock" input="flop_group.CLOCK" output="LATCHNR.G"/>
                  <direct name="direct_q" input="LATCHNR.Q" output="flop_group.Q"/>
                </interconnect>
              </mode>
            </pb_type>
            <interconnect>
              <direct name="direct_in" input="ff_group.in" output="flop_group.DIN"/>
              <direct name="direct_clock" input="ff_group.clock" output="flop_group.CLOCK"/>
              <direct name="direct_reset" input="ff_group.reset" output="flop_group.RESET"/>
              <direct name="direct_enable" input="ff_group.enable" output="flop_group.ENABLE"/>
              <direct name="direct_q" input="flop_group.Q" output="ff_group.out"/>
            </interconnect>
          </mode>
        </pb_type>
        <interconnect>
          <!-- Scan connections -->
          <direct name="scani0" input="ff_wrap.sc_in[0]" output="ff_group[0].SI"/>
          <direct name="scan00" input="ff_group[0].SO" output="ff_wrap.sc_out[0]"/>
          <direct name="scani1" input="ff_wrap.sc_in[1]" output="ff_group[1].SI"/>
          <direct name="scan01" input="ff_group[1].SO" output="ff_wrap.sc_out[1]"/>
          <direct name="scani2" input="ff_wrap.sc_in[2]" output="ff_group[2].SI"/>
          <direct name="scan02" input="ff_group[2].SO" output="ff_wrap.sc_out[2]"/>
          <direct name="scani3" input="ff_wrap.sc_in[3]" output="ff_group[3].SI"/>
          <direct name="scan03" input="ff_group[3].SO" output="ff_wrap.sc_out[3]"/>
          <!-- Input connection -->
          <direct name="input_0" input="ff_wrap.rdata_a1" output="ff_group[0].in"/>
          <direct name="input_1" input="ff_wrap.rdata_b1" output="ff_group[1].in"/>
          <direct name="input_2" input="ff_wrap.rdata_a2" output="ff_group[2].in"/>
          <direct name="input_3" input="ff_wrap.rdata_b2" output="ff_group[3].in"/>
          <direct name="direct_clock_0" input="ff_wrap.clock[0]" output="ff_group[0].clock"/>
          <direct name="direct_clock_1" input="ff_wrap.clock[1]" output="ff_group[1].clock"/>
          <direct name="direct_clock_2" input="ff_wrap.clock[2]" output="ff_group[2].clock"/>
          <direct name="direct_clock_3" input="ff_wrap.clock[3]" output="ff_group[3].clock"/>
          <direct name="direct_reset_0" input="ff_wrap.reset[0]" output="ff_group[0].reset"/>
          <direct name="direct_reset_1" input="ff_wrap.reset[1]" output="ff_group[1].reset"/>
          <direct name="direct_reset_2" input="ff_wrap.reset[2]" output="ff_group[2].reset"/>
          <direct name="direct_reset_3" input="ff_wrap.reset[3]" output="ff_group[3].reset"/>
          <direct name="direct_enable_0" input="ff_wrap.enable[0]" output="ff_group[0].enable"/>
          <direct name="direct_enable_1" input="ff_wrap.enable[1]" output="ff_group[1].enable"/>
          <direct name="direct_enable_2" input="ff_wrap.enable[2]" output="ff_group[2].enable"/>
          <direct name="direct_enable_3" input="ff_wrap.enable[3]" output="ff_group[3].enable"/>
          <!-- output muxes -->
          <mux name="ff_out_0_0" input="ff_wrap.rdata_a1[0] ff_group[0].out[0]" output="ff_wrap.out_a1[0]"/>
          <mux name="ff_out_0_1" input="ff_wrap.rdata_a1[1] ff_group[0].out[1]" output="ff_wrap.out_a1[1]"/>
          <mux name="ff_out_0_2" input="ff_wrap.rdata_a1[2] ff_group[0].out[2]" output="ff_wrap.out_a1[2]"/>
          <mux name="ff_out_0_3" input="ff_wrap.rdata_a1[3] ff_group[0].out[3]" output="ff_wrap.out_a1[3]"/>
          <mux name="ff_out_0_4" input="ff_wrap.rdata_a1[4] ff_group[0].out[4]" output="ff_wrap.out_a1[4]"/>
          <mux name="ff_out_0_5" input="ff_wrap.rdata_a1[5] ff_group[0].out[5]" output="ff_wrap.out_a1[5]"/>
          <mux name="ff_out_0_6" input="ff_wrap.rdata_a1[6] ff_group[0].out[6]" output="ff_wrap.out_a1[6]"/>
          <mux name="ff_out_0_7" input="ff_wrap.rdata_a1[7] ff_group[0].out[7]" output="ff_wrap.out_a1[7]"/>
          <mux name="ff_out_0_8" input="ff_wrap.rdata_a1[8] ff_group[0].out[8]" output="ff_wrap.out_a1[8]"/>
          <mux name="ff_out_0_9" input="ff_wrap.rdata_a1[9] ff_group[0].out[9]" output="ff_wrap.out_a1[9]"/>
          <mux name="ff_out_0_10" input="ff_wrap.rdata_a1[10] ff_group[0].out[10]" output="ff_wrap.out_a1[10]"/>
          <mux name="ff_out_0_11" input="ff_wrap.rdata_a1[11] ff_group[0].out[11]" output="ff_wrap.out_a1[11]"/>
          <mux name="ff_out_0_12" input="ff_wrap.rdata_a1[12] ff_group[0].out[12]" output="ff_wrap.out_a1[12]"/>
          <mux name="ff_out_0_13" input="ff_wrap.rdata_a1[13] ff_group[0].out[13]" output="ff_wrap.out_a1[13]"/>
          <mux name="ff_out_0_14" input="ff_wrap.rdata_a1[14] ff_group[0].out[14]" output="ff_wrap.out_a1[14]"/>
          <mux name="ff_out_0_15" input="ff_wrap.rdata_a1[15] ff_group[0].out[15]" output="ff_wrap.out_a1[15]"/>
          <mux name="ff_out_0_16" input="ff_wrap.rdata_a1[16] ff_group[0].out[16]" output="ff_wrap.out_a1[16]"/>
          <mux name="ff_out_0_17" input="ff_wrap.rdata_a1[17] ff_group[0].out[17]" output="ff_wrap.out_a1[17]"/>
          <mux name="ff_out_1_0" input="ff_wrap.rdata_b1[0] ff_group[1].out[0]" output="ff_wrap.out_b1[0]"/>
          <mux name="ff_out_1_1" input="ff_wrap.rdata_b1[1] ff_group[1].out[1]" output="ff_wrap.out_b1[1]"/>
          <mux name="ff_out_1_2" input="ff_wrap.rdata_b1[2] ff_group[1].out[2]" output="ff_wrap.out_b1[2]"/>
          <mux name="ff_out_1_3" input="ff_wrap.rdata_b1[3] ff_group[1].out[3]" output="ff_wrap.out_b1[3]"/>
          <mux name="ff_out_1_4" input="ff_wrap.rdata_b1[4] ff_group[1].out[4]" output="ff_wrap.out_b1[4]"/>
          <mux name="ff_out_1_5" input="ff_wrap.rdata_b1[5] ff_group[1].out[5]" output="ff_wrap.out_b1[5]"/>
          <mux name="ff_out_1_6" input="ff_wrap.rdata_b1[6] ff_group[1].out[6]" output="ff_wrap.out_b1[6]"/>
          <mux name="ff_out_1_7" input="ff_wrap.rdata_b1[7] ff_group[1].out[7]" output="ff_wrap.out_b1[7]"/>
          <mux name="ff_out_1_8" input="ff_wrap.rdata_b1[8] ff_group[1].out[8]" output="ff_wrap.out_b1[8]"/>
          <mux name="ff_out_1_9" input="ff_wrap.rdata_b1[9] ff_group[1].out[9]" output="ff_wrap.out_b1[9]"/>
          <mux name="ff_out_1_10" input="ff_wrap.rdata_b1[10] ff_group[1].out[10]" output="ff_wrap.out_b1[10]"/>
          <mux name="ff_out_1_11" input="ff_wrap.rdata_b1[11] ff_group[1].out[11]" output="ff_wrap.out_b1[11]"/>
          <mux name="ff_out_1_12" input="ff_wrap.rdata_b1[12] ff_group[1].out[12]" output="ff_wrap.out_b1[12]"/>
          <mux name="ff_out_1_13" input="ff_wrap.rdata_b1[13] ff_group[1].out[13]" output="ff_wrap.out_b1[13]"/>
          <mux name="ff_out_1_14" input="ff_wrap.rdata_b1[14] ff_group[1].out[14]" output="ff_wrap.out_b1[14]"/>
          <mux name="ff_out_1_15" input="ff_wrap.rdata_b1[15] ff_group[1].out[15]" output="ff_wrap.out_b1[15]"/>
          <mux name="ff_out_1_16" input="ff_wrap.rdata_b1[16] ff_group[1].out[16]" output="ff_wrap.out_b1[16]"/>
          <mux name="ff_out_1_17" input="ff_wrap.rdata_b1[17] ff_group[1].out[17]" output="ff_wrap.out_b1[17]"/>
          <mux name="ff_out_2_0" input="ff_wrap.rdata_a2[0] ff_group[2].out[0]" output="ff_wrap.out_a2[0]"/>
          <mux name="ff_out_2_1" input="ff_wrap.rdata_a2[1] ff_group[2].out[1]" output="ff_wrap.out_a2[1]"/>
          <mux name="ff_out_2_2" input="ff_wrap.rdata_a2[2] ff_group[2].out[2]" output="ff_wrap.out_a2[2]"/>
          <mux name="ff_out_2_3" input="ff_wrap.rdata_a2[3] ff_group[2].out[3]" output="ff_wrap.out_a2[3]"/>
          <mux name="ff_out_2_4" input="ff_wrap.rdata_a2[4] ff_group[2].out[4]" output="ff_wrap.out_a2[4]"/>
          <mux name="ff_out_2_5" input="ff_wrap.rdata_a2[5] ff_group[2].out[5]" output="ff_wrap.out_a2[5]"/>
          <mux name="ff_out_2_6" input="ff_wrap.rdata_a2[6] ff_group[2].out[6]" output="ff_wrap.out_a2[6]"/>
          <mux name="ff_out_2_7" input="ff_wrap.rdata_a2[7] ff_group[2].out[7]" output="ff_wrap.out_a2[7]"/>
          <mux name="ff_out_2_8" input="ff_wrap.rdata_a2[8] ff_group[2].out[8]" output="ff_wrap.out_a2[8]"/>
          <mux name="ff_out_2_9" input="ff_wrap.rdata_a2[9] ff_group[2].out[9]" output="ff_wrap.out_a2[9]"/>
          <mux name="ff_out_2_10" input="ff_wrap.rdata_a2[10] ff_group[2].out[10]" output="ff_wrap.out_a2[10]"/>
          <mux name="ff_out_2_11" input="ff_wrap.rdata_a2[11] ff_group[2].out[11]" output="ff_wrap.out_a2[11]"/>
          <mux name="ff_out_2_12" input="ff_wrap.rdata_a2[12] ff_group[2].out[12]" output="ff_wrap.out_a2[12]"/>
          <mux name="ff_out_2_13" input="ff_wrap.rdata_a2[13] ff_group[2].out[13]" output="ff_wrap.out_a2[13]"/>
          <mux name="ff_out_2_14" input="ff_wrap.rdata_a2[14] ff_group[2].out[14]" output="ff_wrap.out_a2[14]"/>
          <mux name="ff_out_2_15" input="ff_wrap.rdata_a2[15] ff_group[2].out[15]" output="ff_wrap.out_a2[15]"/>
          <mux name="ff_out_2_16" input="ff_wrap.rdata_a2[16] ff_group[2].out[16]" output="ff_wrap.out_a2[16]"/>
          <mux name="ff_out_2_17" input="ff_wrap.rdata_a2[17] ff_group[2].out[17]" output="ff_wrap.out_a2[17]"/>
          <mux name="ff_out_3_0" input="ff_wrap.rdata_b2[0] ff_group[3].out[0]" output="ff_wrap.out_b2[0]"/>
          <mux name="ff_out_3_1" input="ff_wrap.rdata_b2[1] ff_group[3].out[1]" output="ff_wrap.out_b2[1]"/>
          <mux name="ff_out_3_2" input="ff_wrap.rdata_b2[2] ff_group[3].out[2]" output="ff_wrap.out_b2[2]"/>
          <mux name="ff_out_3_3" input="ff_wrap.rdata_b2[3] ff_group[3].out[3]" output="ff_wrap.out_b2[3]"/>
          <mux name="ff_out_3_4" input="ff_wrap.rdata_b2[4] ff_group[3].out[4]" output="ff_wrap.out_b2[4]"/>
          <mux name="ff_out_3_5" input="ff_wrap.rdata_b2[5] ff_group[3].out[5]" output="ff_wrap.out_b2[5]"/>
          <mux name="ff_out_3_6" input="ff_wrap.rdata_b2[6] ff_group[3].out[6]" output="ff_wrap.out_b2[6]"/>
          <mux name="ff_out_3_7" input="ff_wrap.rdata_b2[7] ff_group[3].out[7]" output="ff_wrap.out_b2[7]"/>
          <mux name="ff_out_3_8" input="ff_wrap.rdata_b2[8] ff_group[3].out[8]" output="ff_wrap.out_b2[8]"/>
          <mux name="ff_out_3_9" input="ff_wrap.rdata_b2[9] ff_group[3].out[9]" output="ff_wrap.out_b2[9]"/>
          <mux name="ff_out_3_10" input="ff_wrap.rdata_b2[10] ff_group[3].out[10]" output="ff_wrap.out_b2[10]"/>
          <mux name="ff_out_3_11" input="ff_wrap.rdata_b2[11] ff_group[3].out[11]" output="ff_wrap.out_b2[11]"/>
          <mux name="ff_out_3_12" input="ff_wrap.rdata_b2[12] ff_group[3].out[12]" output="ff_wrap.out_b2[12]"/>
          <mux name="ff_out_3_13" input="ff_wrap.rdata_b2[13] ff_group[3].out[13]" output="ff_wrap.out_b2[13]"/>
          <mux name="ff_out_3_14" input="ff_wrap.rdata_b2[14] ff_group[3].out[14]" output="ff_wrap.out_b2[14]"/>
          <mux name="ff_out_3_15" input="ff_wrap.rdata_b2[15] ff_group[3].out[15]" output="ff_wrap.out_b2[15]"/>
          <mux name="ff_out_3_16" input="ff_wrap.rdata_b2[16] ff_group[3].out[16]" output="ff_wrap.out_b2[16]"/>
          <mux name="ff_out_3_17" input="ff_wrap.rdata_b2[17] ff_group[3].out[17]" output="ff_wrap.out_b2[17]"/>
        </interconnect>
      </pb_type>
      <interconnect>
        <!-- tile fabric connections -->
        <direct name="direct_o_2_23" input="ff_wrap.out_a1[17]" output="bram.O2[23]"/>
        <direct name="direct_o_2_22" input="ff_wrap.out_b1[17]" output="bram.O2[22]"/>
        <direct name="direct_o_2_21" input="ff_wrap.out_a2[17]" output="bram.O2[21]"/>
        <direct name="direct_o_2_20" input="ff_wrap.out_b2[17]" output="bram.O2[20]"/>
        <direct name="direct_o_2_19" input="ff_wrap.out_a1[16]" output="bram.O2[19]"/>
        <direct name="direct_o_2_18" input="ff_wrap.out_b1[16]" output="bram.O2[18]"/>
        <direct name="direct_o_2_17" input="ff_wrap.out_a2[16]" output="bram.O2[17]"/>
        <direct name="direct_o_2_16" input="ff_wrap.out_b2[16]" output="bram.O2[16]"/>
        <direct name="direct_o_2_15" input="ff_wrap.out_a1[15]" output="bram.O2[15]"/>
        <direct name="direct_o_2_14" input="ff_wrap.out_b1[15]" output="bram.O2[14]"/>
        <direct name="direct_o_2_13" input="ff_wrap.out_a2[15]" output="bram.O2[13]"/>
        <direct name="direct_o_2_12" input="ff_wrap.out_b2[15]" output="bram.O2[12]"/>
        <direct name="direct_o_2_11" input="ff_wrap.out_a1[14]" output="bram.O2[11]"/>
        <direct name="direct_o_2_10" input="ff_wrap.out_b1[14]" output="bram.O2[10]"/>
        <direct name="direct_o_2_9" input="ff_wrap.out_a2[14]" output="bram.O2[9]"/>
        <direct name="direct_o_2_8" input="ff_wrap.out_b2[14]" output="bram.O2[8]"/>
        <direct name="direct_o_2_7" input="ff_wrap.out_a1[13]" output="bram.O2[7]"/>
        <direct name="direct_o_2_6" input="ff_wrap.out_b1[13]" output="bram.O2[6]"/>
        <direct name="direct_o_2_5" input="ff_wrap.out_a2[13]" output="bram.O2[5]"/>
        <direct name="direct_o_2_4" input="ff_wrap.out_b2[13]" output="bram.O2[4]"/>
        <direct name="direct_o_2_3" input="ff_wrap.out_a1[12]" output="bram.O2[3]"/>
        <direct name="direct_o_2_2" input="ff_wrap.out_b1[12]" output="bram.O2[2]"/>
        <direct name="direct_o_2_1" input="ff_wrap.out_a2[12]" output="bram.O2[1]"/>
        <direct name="direct_o_2_0" input="ff_wrap.out_b2[12]" output="bram.O2[0]"/>
        <direct name="direct_o_1_23" input="ff_wrap.out_a1[11]" output="bram.O1[23]"/>
        <direct name="direct_o_1_22" input="ff_wrap.out_b1[11]" output="bram.O1[22]"/>
        <direct name="direct_o_1_21" input="ff_wrap.out_a2[11]" output="bram.O1[21]"/>
        <direct name="direct_o_1_20" input="ff_wrap.out_b2[11]" output="bram.O1[20]"/>
        <direct name="direct_o_1_19" input="ff_wrap.out_a1[10]" output="bram.O1[19]"/>
        <direct name="direct_o_1_18" input="ff_wrap.out_b1[10]" output="bram.O1[18]"/>
        <direct name="direct_o_1_17" input="ff_wrap.out_a2[10]" output="bram.O1[17]"/>
        <direct name="direct_o_1_16" input="ff_wrap.out_b2[10]" output="bram.O1[16]"/>
        <direct name="direct_o_1_15" input="ff_wrap.out_a1[9]" output="bram.O1[15]"/>
        <direct name="direct_o_1_14" input="ff_wrap.out_b1[9]" output="bram.O1[14]"/>
        <direct name="direct_o_1_13" input="ff_wrap.out_a2[9]" output="bram.O1[13]"/>
        <direct name="direct_o_1_12" input="ff_wrap.out_b2[9]" output="bram.O1[12]"/>
        <direct name="direct_o_1_11" input="ff_wrap.out_a1[8]" output="bram.O1[11]"/>
        <direct name="direct_o_1_10" input="ff_wrap.out_b1[8]" output="bram.O1[10]"/>
        <direct name="direct_o_1_9" input="ff_wrap.out_a2[8]" output="bram.O1[9]"/>
        <direct name="direct_o_1_8" input="ff_wrap.out_b2[8]" output="bram.O1[8]"/>
        <direct name="direct_o_1_7" input="ff_wrap.out_a1[7]" output="bram.O1[7]"/>
        <direct name="direct_o_1_6" input="ff_wrap.out_b1[7]" output="bram.O1[6]"/>
        <direct name="direct_o_1_5" input="ff_wrap.out_a2[7]" output="bram.O1[5]"/>
        <direct name="direct_o_1_4" input="ff_wrap.out_b2[7]" output="bram.O1[4]"/>
        <direct name="direct_o_1_3" input="ff_wrap.out_a1[6]" output="bram.O1[3]"/>
        <direct name="direct_o_1_2" input="ff_wrap.out_b1[6]" output="bram.O1[2]"/>
        <direct name="direct_o_1_1" input="ff_wrap.out_a2[6]" output="bram.O1[1]"/>
        <direct name="direct_o_1_0" input="ff_wrap.out_b2[6]" output="bram.O1[0]"/>
        <direct name="direct_o_0_23" input="ff_wrap.out_a1[5]" output="bram.O0[23]"/>
        <direct name="direct_o_0_22" input="ff_wrap.out_b1[5]" output="bram.O0[22]"/>
        <direct name="direct_o_0_21" input="ff_wrap.out_a2[5]" output="bram.O0[21]"/>
        <direct name="direct_o_0_20" input="ff_wrap.out_b2[5]" output="bram.O0[20]"/>
        <direct name="direct_o_0_19" input="ff_wrap.out_a1[4]" output="bram.O0[19]"/>
        <direct name="direct_o_0_18" input="ff_wrap.out_b1[4]" output="bram.O0[18]"/>
        <direct name="direct_o_0_17" input="ff_wrap.out_a2[4]" output="bram.O0[17]"/>
        <direct name="direct_o_0_16" input="ff_wrap.out_b2[4]" output="bram.O0[16]"/>
        <direct name="direct_o_0_15" input="ff_wrap.out_a1[3]" output="bram.O0[15]"/>
        <direct name="direct_o_0_14" input="ff_wrap.out_b1[3]" output="bram.O0[14]"/>
        <direct name="direct_o_0_13" input="ff_wrap.out_a2[3]" output="bram.O0[13]"/>
        <direct name="direct_o_0_12" input="ff_wrap.out_b2[3]" output="bram.O0[12]"/>
        <direct name="direct_o_0_11" input="ff_wrap.out_a1[2]" output="bram.O0[11]"/>
        <direct name="direct_o_0_10" input="ff_wrap.out_b1[2]" output="bram.O0[10]"/>
        <direct name="direct_o_0_9" input="ff_wrap.out_a2[2]" output="bram.O0[9]"/>
        <direct name="direct_o_0_8" input="ff_wrap.out_b2[2]" output="bram.O0[8]"/>
        <direct name="direct_o_0_7" input="ff_wrap.out_a1[1]" output="bram.O0[7]"/>
        <direct name="direct_o_0_6" input="ff_wrap.out_b1[1]" output="bram.O0[6]"/>
        <direct name="direct_o_0_5" input="ff_wrap.out_a2[1]" output="bram.O0[5]"/>
        <direct name="direct_o_0_4" input="ff_wrap.out_b2[1]" output="bram.O0[4]"/>
        <direct name="direct_o_0_3" input="ff_wrap.out_a1[0]" output="bram.O0[3]"/>
        <direct name="direct_o_0_2" input="ff_wrap.out_b1[0]" output="bram.O0[2]"/>
        <direct name="direct_o_0_1" input="ff_wrap.out_a2[0]" output="bram.O0[1]"/>
        <direct name="direct_o_0_0" input="ff_wrap.out_b2[0]" output="bram.O0[0]"/>
        <mux name="SS_0_0" input="bram.IS0[0] bram.IS0[1] bram.IS0[2] bram.IS0[3] bram.IS0[4] bram.IS0[5] " output="sr_opt[0].I" add_const_input="false">
          <delay_constant in_port="bram.IS0[0] bram.IS0[1] bram.IS0[2] bram.IS0[3] bram.IS0[4] bram.IS0[5] " out_port="sr_opt[0].I" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="SS_0_1" input="bram.IS0[0] bram.IS0[1] bram.IS0[2] bram.IS0[3] bram.IS0[4] bram.IS0[5] " output="sr_opt[1].I" add_const_input="false">
          <delay_constant in_port="bram.IS0[0] bram.IS0[1] bram.IS0[2] bram.IS0[3] bram.IS0[4] bram.IS0[5] " out_port="sr_opt[1].I" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="SS_0_2" input="bram.IS0[0] bram.IS0[1] bram.IS0[2] bram.IS0[3] bram.IS0[4] bram.IS0[5] " output="sr_opt[2].I" add_const_input="false">
          <delay_constant in_port="bram.IS0[0] bram.IS0[1] bram.IS0[2] bram.IS0[3] bram.IS0[4] bram.IS0[5] " out_port="sr_opt[2].I" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="SS_0_3" input="bram.IS0[0] bram.IS0[1] bram.IS0[2] bram.IS0[3] bram.IS0[4] bram.IS0[5] " output="sr_opt[3].I" add_const_input="false">
          <delay_constant in_port="bram.IS0[0] bram.IS0[1] bram.IS0[2] bram.IS0[3] bram.IS0[4] bram.IS0[5] " out_port="sr_opt[3].I" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="SS_1_0" input="bram.IS1[0] bram.IS1[1] bram.IS1[2] bram.IS1[3] bram.IS1[4] bram.IS1[5] " output="ff_wrap.enable[0]" add_const_input="false">
          <delay_constant in_port="bram.IS1[0] bram.IS1[1] bram.IS1[2] bram.IS1[3] bram.IS1[4] bram.IS1[5] " out_port="ff_wrap.enable[0]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="SS_1_1" input="bram.IS1[0] bram.IS1[1] bram.IS1[2] bram.IS1[3] bram.IS1[4] bram.IS1[5] " output="ff_wrap.enable[1]" add_const_input="false">
          <delay_constant in_port="bram.IS1[0] bram.IS1[1] bram.IS1[2] bram.IS1[3] bram.IS1[4] bram.IS1[5] " out_port="ff_wrap.enable[1]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="SS_1_2" input="bram.IS1[0] bram.IS1[1] bram.IS1[2] bram.IS1[3] bram.IS1[4] bram.IS1[5] " output="ff_wrap.enable[2]" add_const_input="false">
          <delay_constant in_port="bram.IS1[0] bram.IS1[1] bram.IS1[2] bram.IS1[3] bram.IS1[4] bram.IS1[5] " out_port="ff_wrap.enable[2]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="SS_1_3" input="bram.IS1[0] bram.IS1[1] bram.IS1[2] bram.IS1[3] bram.IS1[4] bram.IS1[5] " output="ff_wrap.enable[3]" add_const_input="false">
          <delay_constant in_port="bram.IS1[0] bram.IS1[1] bram.IS1[2] bram.IS1[3] bram.IS1[4] bram.IS1[5] " out_port="ff_wrap.enable[3]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="SS_2_0" input="bram.IS2[0] bram.IS2[1] bram.IS2[2] bram.IS2[3] bram.IS2[4] bram.IS2[5] " output="flush_opt.I[0]" add_const_input="false">
          <delay_constant in_port="bram.IS2[0] bram.IS2[1] bram.IS2[2] bram.IS2[3] bram.IS2[4] bram.IS2[5] " out_port="flush_opt.I[0]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="SS_2_1" input="bram.IS2[0] bram.IS2[1] bram.IS2[2] bram.IS2[3] bram.IS2[4] bram.IS2[5] " output="flush_opt.I[1]" add_const_input="false">
          <delay_constant in_port="bram.IS2[0] bram.IS2[1] bram.IS2[2] bram.IS2[3] bram.IS2[4] bram.IS2[5] " out_port="flush_opt.I[1]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="SS_2_2" input="bram.IS2[0] bram.IS2[1] bram.IS2[2] bram.IS2[3] bram.IS2[4] bram.IS2[5] " output="bram_rtl.WEN_A1_i" add_const_input="false">
          <delay_constant in_port="bram.IS2[0] bram.IS2[1] bram.IS2[2] bram.IS2[3] bram.IS2[4] bram.IS2[5] " out_port="bram_rtl.WEN_A1_i" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="SS_2_3" input="bram.IS2[0] bram.IS2[1] bram.IS2[2] bram.IS2[3] bram.IS2[4] bram.IS2[5] " output="bram_rtl.WEN_A2_i" add_const_input="false">
          <delay_constant in_port="bram.IS2[0] bram.IS2[1] bram.IS2[2] bram.IS2[3] bram.IS2[4] bram.IS2[5] " out_port="bram_rtl.WEN_A2_i" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="SS_2_4" input="bram.IS2[0] bram.IS2[1] bram.IS2[2] bram.IS2[3] bram.IS2[4] bram.IS2[5] " output="bram_rtl.WEN_B1_i" add_const_input="false">
          <delay_constant in_port="bram.IS2[0] bram.IS2[1] bram.IS2[2] bram.IS2[3] bram.IS2[4] bram.IS2[5] " out_port="bram_rtl.WEN_B1_i" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="SS_2_5" input="bram.IS2[0] bram.IS2[1] bram.IS2[2] bram.IS2[3] bram.IS2[4] bram.IS2[5] " output="bram_rtl.WEN_B2_i" add_const_input="false">
          <delay_constant in_port="bram.IS2[0] bram.IS2[1] bram.IS2[2] bram.IS2[3] bram.IS2[4] bram.IS2[5] " out_port="bram_rtl.WEN_B2_i" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_2_47" input="bram.I12[0] bram.I12[1] bram.I12[2] bram.I12[3] bram.I12[4] bram.I12[5] bram.I12[6] bram.I12[7] bram.I12[8] bram.I12[9] bram.I12[10] bram.I12[11] bram.I22[0] bram.I22[1] bram.I22[2] bram.I22[3] bram.I22[4] bram.I22[5] bram.I22[6] bram.I22[7] bram.I22[8] bram.I22[9] bram.I22[10] bram.I22[11] " output="bram_rtl.BE_B2_i[1]" add_const_input="false">
          <delay_constant in_port="bram.I12[0] bram.I12[1] bram.I12[2] bram.I12[3] bram.I12[4] bram.I12[5] bram.I12[6] bram.I12[7] bram.I12[8] bram.I12[9] bram.I12[10] bram.I12[11] bram.I22[0] bram.I22[1] bram.I22[2] bram.I22[3] bram.I22[4] bram.I22[5] bram.I22[6] bram.I22[7] bram.I22[8] bram.I22[9] bram.I22[10] bram.I22[11] " out_port="bram_rtl.BE_B2_i[1]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_2_46" input="bram.I02[0] bram.I02[1] bram.I02[2] bram.I02[3] bram.I02[4] bram.I02[5] bram.I02[6] bram.I02[7] bram.I02[8] bram.I02[9] bram.I02[10] bram.I02[11] bram.I32[0] bram.I32[1] bram.I32[2] bram.I32[3] bram.I32[4] bram.I32[5] bram.I32[6] bram.I32[7] bram.I32[8] bram.I32[9] bram.I32[10] bram.I32[11] " output="bram_rtl.BE_B1_i[1]" add_const_input="false">
          <delay_constant in_port="bram.I02[0] bram.I02[1] bram.I02[2] bram.I02[3] bram.I02[4] bram.I02[5] bram.I02[6] bram.I02[7] bram.I02[8] bram.I02[9] bram.I02[10] bram.I02[11] bram.I32[0] bram.I32[1] bram.I32[2] bram.I32[3] bram.I32[4] bram.I32[5] bram.I32[6] bram.I32[7] bram.I32[8] bram.I32[9] bram.I32[10] bram.I32[11] " out_port="bram_rtl.BE_B1_i[1]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_2_45" input="bram.I12[0] bram.I12[1] bram.I12[2] bram.I12[3] bram.I12[4] bram.I12[5] bram.I12[6] bram.I12[7] bram.I12[8] bram.I12[9] bram.I12[10] bram.I12[11] bram.I32[0] bram.I32[1] bram.I32[2] bram.I32[3] bram.I32[4] bram.I32[5] bram.I32[6] bram.I32[7] bram.I32[8] bram.I32[9] bram.I32[10] bram.I32[11] " output="bram_rtl.BE_A2_i[1]" add_const_input="false">
          <delay_constant in_port="bram.I12[0] bram.I12[1] bram.I12[2] bram.I12[3] bram.I12[4] bram.I12[5] bram.I12[6] bram.I12[7] bram.I12[8] bram.I12[9] bram.I12[10] bram.I12[11] bram.I32[0] bram.I32[1] bram.I32[2] bram.I32[3] bram.I32[4] bram.I32[5] bram.I32[6] bram.I32[7] bram.I32[8] bram.I32[9] bram.I32[10] bram.I32[11] " out_port="bram_rtl.BE_A2_i[1]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_2_44" input="bram.I02[0] bram.I02[1] bram.I02[2] bram.I02[3] bram.I02[4] bram.I02[5] bram.I02[6] bram.I02[7] bram.I02[8] bram.I02[9] bram.I02[10] bram.I02[11] bram.I22[0] bram.I22[1] bram.I22[2] bram.I22[3] bram.I22[4] bram.I22[5] bram.I22[6] bram.I22[7] bram.I22[8] bram.I22[9] bram.I22[10] bram.I22[11] " output="bram_rtl.BE_A1_i[1]" add_const_input="false">
          <delay_constant in_port="bram.I02[0] bram.I02[1] bram.I02[2] bram.I02[3] bram.I02[4] bram.I02[5] bram.I02[6] bram.I02[7] bram.I02[8] bram.I02[9] bram.I02[10] bram.I02[11] bram.I22[0] bram.I22[1] bram.I22[2] bram.I22[3] bram.I22[4] bram.I22[5] bram.I22[6] bram.I22[7] bram.I22[8] bram.I22[9] bram.I22[10] bram.I22[11] " out_port="bram_rtl.BE_A1_i[1]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_2_43" input="bram.I12[0] bram.I12[1] bram.I12[2] bram.I12[3] bram.I12[4] bram.I12[5] bram.I12[6] bram.I12[7] bram.I12[8] bram.I12[9] bram.I12[10] bram.I12[11] bram.I22[0] bram.I22[1] bram.I22[2] bram.I22[3] bram.I22[4] bram.I22[5] bram.I22[6] bram.I22[7] bram.I22[8] bram.I22[9] bram.I22[10] bram.I22[11] " output="bram_rtl.WDATA_B2_i[17]" add_const_input="false">
          <delay_constant in_port="bram.I12[0] bram.I12[1] bram.I12[2] bram.I12[3] bram.I12[4] bram.I12[5] bram.I12[6] bram.I12[7] bram.I12[8] bram.I12[9] bram.I12[10] bram.I12[11] bram.I22[0] bram.I22[1] bram.I22[2] bram.I22[3] bram.I22[4] bram.I22[5] bram.I22[6] bram.I22[7] bram.I22[8] bram.I22[9] bram.I22[10] bram.I22[11] " out_port="bram_rtl.WDATA_B2_i[17]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_2_42" input="bram.I02[0] bram.I02[1] bram.I02[2] bram.I02[3] bram.I02[4] bram.I02[5] bram.I02[6] bram.I02[7] bram.I02[8] bram.I02[9] bram.I02[10] bram.I02[11] bram.I32[0] bram.I32[1] bram.I32[2] bram.I32[3] bram.I32[4] bram.I32[5] bram.I32[6] bram.I32[7] bram.I32[8] bram.I32[9] bram.I32[10] bram.I32[11] " output="bram_rtl.WDATA_B1_i[17]" add_const_input="false">
          <delay_constant in_port="bram.I02[0] bram.I02[1] bram.I02[2] bram.I02[3] bram.I02[4] bram.I02[5] bram.I02[6] bram.I02[7] bram.I02[8] bram.I02[9] bram.I02[10] bram.I02[11] bram.I32[0] bram.I32[1] bram.I32[2] bram.I32[3] bram.I32[4] bram.I32[5] bram.I32[6] bram.I32[7] bram.I32[8] bram.I32[9] bram.I32[10] bram.I32[11] " out_port="bram_rtl.WDATA_B1_i[17]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_2_41" input="bram.I12[0] bram.I12[1] bram.I12[2] bram.I12[3] bram.I12[4] bram.I12[5] bram.I12[6] bram.I12[7] bram.I12[8] bram.I12[9] bram.I12[10] bram.I12[11] bram.I22[0] bram.I22[1] bram.I22[2] bram.I22[3] bram.I22[4] bram.I22[5] bram.I22[6] bram.I22[7] bram.I22[8] bram.I22[9] bram.I22[10] bram.I22[11] " output="bram_rtl.WDATA_A2_i[17]" add_const_input="false">
          <delay_constant in_port="bram.I12[0] bram.I12[1] bram.I12[2] bram.I12[3] bram.I12[4] bram.I12[5] bram.I12[6] bram.I12[7] bram.I12[8] bram.I12[9] bram.I12[10] bram.I12[11] bram.I22[0] bram.I22[1] bram.I22[2] bram.I22[3] bram.I22[4] bram.I22[5] bram.I22[6] bram.I22[7] bram.I22[8] bram.I22[9] bram.I22[10] bram.I22[11] " out_port="bram_rtl.WDATA_A2_i[17]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_2_40" input="bram.I02[0] bram.I02[1] bram.I02[2] bram.I02[3] bram.I02[4] bram.I02[5] bram.I02[6] bram.I02[7] bram.I02[8] bram.I02[9] bram.I02[10] bram.I02[11] bram.I32[0] bram.I32[1] bram.I32[2] bram.I32[3] bram.I32[4] bram.I32[5] bram.I32[6] bram.I32[7] bram.I32[8] bram.I32[9] bram.I32[10] bram.I32[11] " output="bram_rtl.WDATA_A1_i[17]" add_const_input="false">
          <delay_constant in_port="bram.I02[0] bram.I02[1] bram.I02[2] bram.I02[3] bram.I02[4] bram.I02[5] bram.I02[6] bram.I02[7] bram.I02[8] bram.I02[9] bram.I02[10] bram.I02[11] bram.I32[0] bram.I32[1] bram.I32[2] bram.I32[3] bram.I32[4] bram.I32[5] bram.I32[6] bram.I32[7] bram.I32[8] bram.I32[9] bram.I32[10] bram.I32[11] " out_port="bram_rtl.WDATA_A1_i[17]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_2_39" input="bram.I12[0] bram.I12[1] bram.I12[2] bram.I12[3] bram.I12[4] bram.I12[5] bram.I12[6] bram.I12[7] bram.I12[8] bram.I12[9] bram.I12[10] bram.I12[11] bram.I32[0] bram.I32[1] bram.I32[2] bram.I32[3] bram.I32[4] bram.I32[5] bram.I32[6] bram.I32[7] bram.I32[8] bram.I32[9] bram.I32[10] bram.I32[11] " output="bram_rtl.REN_B2_i" add_const_input="false">
          <delay_constant in_port="bram.I12[0] bram.I12[1] bram.I12[2] bram.I12[3] bram.I12[4] bram.I12[5] bram.I12[6] bram.I12[7] bram.I12[8] bram.I12[9] bram.I12[10] bram.I12[11] bram.I32[0] bram.I32[1] bram.I32[2] bram.I32[3] bram.I32[4] bram.I32[5] bram.I32[6] bram.I32[7] bram.I32[8] bram.I32[9] bram.I32[10] bram.I32[11] " out_port="bram_rtl.REN_B2_i" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_2_38" input="bram.I02[0] bram.I02[1] bram.I02[2] bram.I02[3] bram.I02[4] bram.I02[5] bram.I02[6] bram.I02[7] bram.I02[8] bram.I02[9] bram.I02[10] bram.I02[11] bram.I22[0] bram.I22[1] bram.I22[2] bram.I22[3] bram.I22[4] bram.I22[5] bram.I22[6] bram.I22[7] bram.I22[8] bram.I22[9] bram.I22[10] bram.I22[11] " output="bram_rtl.REN_B1_i" add_const_input="false">
          <delay_constant in_port="bram.I02[0] bram.I02[1] bram.I02[2] bram.I02[3] bram.I02[4] bram.I02[5] bram.I02[6] bram.I02[7] bram.I02[8] bram.I02[9] bram.I02[10] bram.I02[11] bram.I22[0] bram.I22[1] bram.I22[2] bram.I22[3] bram.I22[4] bram.I22[5] bram.I22[6] bram.I22[7] bram.I22[8] bram.I22[9] bram.I22[10] bram.I22[11] " out_port="bram_rtl.REN_B1_i" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_2_37" input="bram.I12[0] bram.I12[1] bram.I12[2] bram.I12[3] bram.I12[4] bram.I12[5] bram.I12[6] bram.I12[7] bram.I12[8] bram.I12[9] bram.I12[10] bram.I12[11] bram.I22[0] bram.I22[1] bram.I22[2] bram.I22[3] bram.I22[4] bram.I22[5] bram.I22[6] bram.I22[7] bram.I22[8] bram.I22[9] bram.I22[10] bram.I22[11] " output="bram_rtl.REN_A2_i" add_const_input="false">
          <delay_constant in_port="bram.I12[0] bram.I12[1] bram.I12[2] bram.I12[3] bram.I12[4] bram.I12[5] bram.I12[6] bram.I12[7] bram.I12[8] bram.I12[9] bram.I12[10] bram.I12[11] bram.I22[0] bram.I22[1] bram.I22[2] bram.I22[3] bram.I22[4] bram.I22[5] bram.I22[6] bram.I22[7] bram.I22[8] bram.I22[9] bram.I22[10] bram.I22[11] " out_port="bram_rtl.REN_A2_i" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_2_36" input="bram.I02[0] bram.I02[1] bram.I02[2] bram.I02[3] bram.I02[4] bram.I02[5] bram.I02[6] bram.I02[7] bram.I02[8] bram.I02[9] bram.I02[10] bram.I02[11] bram.I32[0] bram.I32[1] bram.I32[2] bram.I32[3] bram.I32[4] bram.I32[5] bram.I32[6] bram.I32[7] bram.I32[8] bram.I32[9] bram.I32[10] bram.I32[11] " output="bram_rtl.REN_A1_i" add_const_input="false">
          <delay_constant in_port="bram.I02[0] bram.I02[1] bram.I02[2] bram.I02[3] bram.I02[4] bram.I02[5] bram.I02[6] bram.I02[7] bram.I02[8] bram.I02[9] bram.I02[10] bram.I02[11] bram.I32[0] bram.I32[1] bram.I32[2] bram.I32[3] bram.I32[4] bram.I32[5] bram.I32[6] bram.I32[7] bram.I32[8] bram.I32[9] bram.I32[10] bram.I32[11] " out_port="bram_rtl.REN_A1_i" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_2_35" input="bram.I12[0] bram.I12[1] bram.I12[2] bram.I12[3] bram.I12[4] bram.I12[5] bram.I12[6] bram.I12[7] bram.I12[8] bram.I12[9] bram.I12[10] bram.I12[11] bram.I22[0] bram.I22[1] bram.I22[2] bram.I22[3] bram.I22[4] bram.I22[5] bram.I22[6] bram.I22[7] bram.I22[8] bram.I22[9] bram.I22[10] bram.I22[11] " output="bram_rtl.WDATA_B2_i[16]" add_const_input="false">
          <delay_constant in_port="bram.I12[0] bram.I12[1] bram.I12[2] bram.I12[3] bram.I12[4] bram.I12[5] bram.I12[6] bram.I12[7] bram.I12[8] bram.I12[9] bram.I12[10] bram.I12[11] bram.I22[0] bram.I22[1] bram.I22[2] bram.I22[3] bram.I22[4] bram.I22[5] bram.I22[6] bram.I22[7] bram.I22[8] bram.I22[9] bram.I22[10] bram.I22[11] " out_port="bram_rtl.WDATA_B2_i[16]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_2_34" input="bram.I02[0] bram.I02[1] bram.I02[2] bram.I02[3] bram.I02[4] bram.I02[5] bram.I02[6] bram.I02[7] bram.I02[8] bram.I02[9] bram.I02[10] bram.I02[11] bram.I32[0] bram.I32[1] bram.I32[2] bram.I32[3] bram.I32[4] bram.I32[5] bram.I32[6] bram.I32[7] bram.I32[8] bram.I32[9] bram.I32[10] bram.I32[11] " output="bram_rtl.WDATA_B1_i[16]" add_const_input="false">
          <delay_constant in_port="bram.I02[0] bram.I02[1] bram.I02[2] bram.I02[3] bram.I02[4] bram.I02[5] bram.I02[6] bram.I02[7] bram.I02[8] bram.I02[9] bram.I02[10] bram.I02[11] bram.I32[0] bram.I32[1] bram.I32[2] bram.I32[3] bram.I32[4] bram.I32[5] bram.I32[6] bram.I32[7] bram.I32[8] bram.I32[9] bram.I32[10] bram.I32[11] " out_port="bram_rtl.WDATA_B1_i[16]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_2_33" input="bram.I12[0] bram.I12[1] bram.I12[2] bram.I12[3] bram.I12[4] bram.I12[5] bram.I12[6] bram.I12[7] bram.I12[8] bram.I12[9] bram.I12[10] bram.I12[11] bram.I32[0] bram.I32[1] bram.I32[2] bram.I32[3] bram.I32[4] bram.I32[5] bram.I32[6] bram.I32[7] bram.I32[8] bram.I32[9] bram.I32[10] bram.I32[11] " output="bram_rtl.WDATA_A2_i[16]" add_const_input="false">
          <delay_constant in_port="bram.I12[0] bram.I12[1] bram.I12[2] bram.I12[3] bram.I12[4] bram.I12[5] bram.I12[6] bram.I12[7] bram.I12[8] bram.I12[9] bram.I12[10] bram.I12[11] bram.I32[0] bram.I32[1] bram.I32[2] bram.I32[3] bram.I32[4] bram.I32[5] bram.I32[6] bram.I32[7] bram.I32[8] bram.I32[9] bram.I32[10] bram.I32[11] " out_port="bram_rtl.WDATA_A2_i[16]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_2_32" input="bram.I02[0] bram.I02[1] bram.I02[2] bram.I02[3] bram.I02[4] bram.I02[5] bram.I02[6] bram.I02[7] bram.I02[8] bram.I02[9] bram.I02[10] bram.I02[11] bram.I22[0] bram.I22[1] bram.I22[2] bram.I22[3] bram.I22[4] bram.I22[5] bram.I22[6] bram.I22[7] bram.I22[8] bram.I22[9] bram.I22[10] bram.I22[11] " output="bram_rtl.WDATA_A1_i[16]" add_const_input="false">
          <delay_constant in_port="bram.I02[0] bram.I02[1] bram.I02[2] bram.I02[3] bram.I02[4] bram.I02[5] bram.I02[6] bram.I02[7] bram.I02[8] bram.I02[9] bram.I02[10] bram.I02[11] bram.I22[0] bram.I22[1] bram.I22[2] bram.I22[3] bram.I22[4] bram.I22[5] bram.I22[6] bram.I22[7] bram.I22[8] bram.I22[9] bram.I22[10] bram.I22[11] " out_port="bram_rtl.WDATA_A1_i[16]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_2_30" input="bram.I02[0] bram.I02[1] bram.I02[2] bram.I02[3] bram.I02[4] bram.I02[5] bram.I02[6] bram.I02[7] bram.I02[8] bram.I02[9] bram.I02[10] bram.I02[11] bram.I32[0] bram.I32[1] bram.I32[2] bram.I32[3] bram.I32[4] bram.I32[5] bram.I32[6] bram.I32[7] bram.I32[8] bram.I32[9] bram.I32[10] bram.I32[11] " output="bram_rtl.ADDR_B1_i[14]" add_const_input="false">
          <delay_constant in_port="bram.I02[0] bram.I02[1] bram.I02[2] bram.I02[3] bram.I02[4] bram.I02[5] bram.I02[6] bram.I02[7] bram.I02[8] bram.I02[9] bram.I02[10] bram.I02[11] bram.I32[0] bram.I32[1] bram.I32[2] bram.I32[3] bram.I32[4] bram.I32[5] bram.I32[6] bram.I32[7] bram.I32[8] bram.I32[9] bram.I32[10] bram.I32[11] " out_port="bram_rtl.ADDR_B1_i[14]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_2_28" input="bram.I02[0] bram.I02[1] bram.I02[2] bram.I02[3] bram.I02[4] bram.I02[5] bram.I02[6] bram.I02[7] bram.I02[8] bram.I02[9] bram.I02[10] bram.I02[11] bram.I32[0] bram.I32[1] bram.I32[2] bram.I32[3] bram.I32[4] bram.I32[5] bram.I32[6] bram.I32[7] bram.I32[8] bram.I32[9] bram.I32[10] bram.I32[11] " output="bram_rtl.ADDR_A1_i[14]" add_const_input="false">
          <delay_constant in_port="bram.I02[0] bram.I02[1] bram.I02[2] bram.I02[3] bram.I02[4] bram.I02[5] bram.I02[6] bram.I02[7] bram.I02[8] bram.I02[9] bram.I02[10] bram.I02[11] bram.I32[0] bram.I32[1] bram.I32[2] bram.I32[3] bram.I32[4] bram.I32[5] bram.I32[6] bram.I32[7] bram.I32[8] bram.I32[9] bram.I32[10] bram.I32[11] " out_port="bram_rtl.ADDR_A1_i[14]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_2_27" input="bram.I12[0] bram.I12[1] bram.I12[2] bram.I12[3] bram.I12[4] bram.I12[5] bram.I12[6] bram.I12[7] bram.I12[8] bram.I12[9] bram.I12[10] bram.I12[11] bram.I32[0] bram.I32[1] bram.I32[2] bram.I32[3] bram.I32[4] bram.I32[5] bram.I32[6] bram.I32[7] bram.I32[8] bram.I32[9] bram.I32[10] bram.I32[11] " output="bram_rtl.WDATA_B2_i[15]" add_const_input="false">
          <delay_constant in_port="bram.I12[0] bram.I12[1] bram.I12[2] bram.I12[3] bram.I12[4] bram.I12[5] bram.I12[6] bram.I12[7] bram.I12[8] bram.I12[9] bram.I12[10] bram.I12[11] bram.I32[0] bram.I32[1] bram.I32[2] bram.I32[3] bram.I32[4] bram.I32[5] bram.I32[6] bram.I32[7] bram.I32[8] bram.I32[9] bram.I32[10] bram.I32[11] " out_port="bram_rtl.WDATA_B2_i[15]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_2_26" input="bram.I02[0] bram.I02[1] bram.I02[2] bram.I02[3] bram.I02[4] bram.I02[5] bram.I02[6] bram.I02[7] bram.I02[8] bram.I02[9] bram.I02[10] bram.I02[11] bram.I22[0] bram.I22[1] bram.I22[2] bram.I22[3] bram.I22[4] bram.I22[5] bram.I22[6] bram.I22[7] bram.I22[8] bram.I22[9] bram.I22[10] bram.I22[11] " output="bram_rtl.WDATA_B1_i[15]" add_const_input="false">
          <delay_constant in_port="bram.I02[0] bram.I02[1] bram.I02[2] bram.I02[3] bram.I02[4] bram.I02[5] bram.I02[6] bram.I02[7] bram.I02[8] bram.I02[9] bram.I02[10] bram.I02[11] bram.I22[0] bram.I22[1] bram.I22[2] bram.I22[3] bram.I22[4] bram.I22[5] bram.I22[6] bram.I22[7] bram.I22[8] bram.I22[9] bram.I22[10] bram.I22[11] " out_port="bram_rtl.WDATA_B1_i[15]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_2_25" input="bram.I12[0] bram.I12[1] bram.I12[2] bram.I12[3] bram.I12[4] bram.I12[5] bram.I12[6] bram.I12[7] bram.I12[8] bram.I12[9] bram.I12[10] bram.I12[11] bram.I22[0] bram.I22[1] bram.I22[2] bram.I22[3] bram.I22[4] bram.I22[5] bram.I22[6] bram.I22[7] bram.I22[8] bram.I22[9] bram.I22[10] bram.I22[11] " output="bram_rtl.WDATA_A2_i[15]" add_const_input="false">
          <delay_constant in_port="bram.I12[0] bram.I12[1] bram.I12[2] bram.I12[3] bram.I12[4] bram.I12[5] bram.I12[6] bram.I12[7] bram.I12[8] bram.I12[9] bram.I12[10] bram.I12[11] bram.I22[0] bram.I22[1] bram.I22[2] bram.I22[3] bram.I22[4] bram.I22[5] bram.I22[6] bram.I22[7] bram.I22[8] bram.I22[9] bram.I22[10] bram.I22[11] " out_port="bram_rtl.WDATA_A2_i[15]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_2_24" input="bram.I02[0] bram.I02[1] bram.I02[2] bram.I02[3] bram.I02[4] bram.I02[5] bram.I02[6] bram.I02[7] bram.I02[8] bram.I02[9] bram.I02[10] bram.I02[11] bram.I32[0] bram.I32[1] bram.I32[2] bram.I32[3] bram.I32[4] bram.I32[5] bram.I32[6] bram.I32[7] bram.I32[8] bram.I32[9] bram.I32[10] bram.I32[11] " output="bram_rtl.WDATA_A1_i[15]" add_const_input="false">
          <delay_constant in_port="bram.I02[0] bram.I02[1] bram.I02[2] bram.I02[3] bram.I02[4] bram.I02[5] bram.I02[6] bram.I02[7] bram.I02[8] bram.I02[9] bram.I02[10] bram.I02[11] bram.I32[0] bram.I32[1] bram.I32[2] bram.I32[3] bram.I32[4] bram.I32[5] bram.I32[6] bram.I32[7] bram.I32[8] bram.I32[9] bram.I32[10] bram.I32[11] " out_port="bram_rtl.WDATA_A1_i[15]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_2_23" input="bram.I12[0] bram.I12[1] bram.I12[2] bram.I12[3] bram.I12[4] bram.I12[5] bram.I12[6] bram.I12[7] bram.I12[8] bram.I12[9] bram.I12[10] bram.I12[11] bram.I22[0] bram.I22[1] bram.I22[2] bram.I22[3] bram.I22[4] bram.I22[5] bram.I22[6] bram.I22[7] bram.I22[8] bram.I22[9] bram.I22[10] bram.I22[11] " output="bram_rtl.ADDR_B2_i[13]" add_const_input="false">
          <delay_constant in_port="bram.I12[0] bram.I12[1] bram.I12[2] bram.I12[3] bram.I12[4] bram.I12[5] bram.I12[6] bram.I12[7] bram.I12[8] bram.I12[9] bram.I12[10] bram.I12[11] bram.I22[0] bram.I22[1] bram.I22[2] bram.I22[3] bram.I22[4] bram.I22[5] bram.I22[6] bram.I22[7] bram.I22[8] bram.I22[9] bram.I22[10] bram.I22[11] " out_port="bram_rtl.ADDR_B2_i[13]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_2_22" input="bram.I02[0] bram.I02[1] bram.I02[2] bram.I02[3] bram.I02[4] bram.I02[5] bram.I02[6] bram.I02[7] bram.I02[8] bram.I02[9] bram.I02[10] bram.I02[11] bram.I32[0] bram.I32[1] bram.I32[2] bram.I32[3] bram.I32[4] bram.I32[5] bram.I32[6] bram.I32[7] bram.I32[8] bram.I32[9] bram.I32[10] bram.I32[11] " output="bram_rtl.ADDR_B1_i[13]" add_const_input="false">
          <delay_constant in_port="bram.I02[0] bram.I02[1] bram.I02[2] bram.I02[3] bram.I02[4] bram.I02[5] bram.I02[6] bram.I02[7] bram.I02[8] bram.I02[9] bram.I02[10] bram.I02[11] bram.I32[0] bram.I32[1] bram.I32[2] bram.I32[3] bram.I32[4] bram.I32[5] bram.I32[6] bram.I32[7] bram.I32[8] bram.I32[9] bram.I32[10] bram.I32[11] " out_port="bram_rtl.ADDR_B1_i[13]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_2_21" input="bram.I12[0] bram.I12[1] bram.I12[2] bram.I12[3] bram.I12[4] bram.I12[5] bram.I12[6] bram.I12[7] bram.I12[8] bram.I12[9] bram.I12[10] bram.I12[11] bram.I32[0] bram.I32[1] bram.I32[2] bram.I32[3] bram.I32[4] bram.I32[5] bram.I32[6] bram.I32[7] bram.I32[8] bram.I32[9] bram.I32[10] bram.I32[11] " output="bram_rtl.ADDR_A2_i[13]" add_const_input="false">
          <delay_constant in_port="bram.I12[0] bram.I12[1] bram.I12[2] bram.I12[3] bram.I12[4] bram.I12[5] bram.I12[6] bram.I12[7] bram.I12[8] bram.I12[9] bram.I12[10] bram.I12[11] bram.I32[0] bram.I32[1] bram.I32[2] bram.I32[3] bram.I32[4] bram.I32[5] bram.I32[6] bram.I32[7] bram.I32[8] bram.I32[9] bram.I32[10] bram.I32[11] " out_port="bram_rtl.ADDR_A2_i[13]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_2_20" input="bram.I02[0] bram.I02[1] bram.I02[2] bram.I02[3] bram.I02[4] bram.I02[5] bram.I02[6] bram.I02[7] bram.I02[8] bram.I02[9] bram.I02[10] bram.I02[11] bram.I22[0] bram.I22[1] bram.I22[2] bram.I22[3] bram.I22[4] bram.I22[5] bram.I22[6] bram.I22[7] bram.I22[8] bram.I22[9] bram.I22[10] bram.I22[11] " output="bram_rtl.ADDR_A1_i[13]" add_const_input="false">
          <delay_constant in_port="bram.I02[0] bram.I02[1] bram.I02[2] bram.I02[3] bram.I02[4] bram.I02[5] bram.I02[6] bram.I02[7] bram.I02[8] bram.I02[9] bram.I02[10] bram.I02[11] bram.I22[0] bram.I22[1] bram.I22[2] bram.I22[3] bram.I22[4] bram.I22[5] bram.I22[6] bram.I22[7] bram.I22[8] bram.I22[9] bram.I22[10] bram.I22[11] " out_port="bram_rtl.ADDR_A1_i[13]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_2_19" input="bram.I12[0] bram.I12[1] bram.I12[2] bram.I12[3] bram.I12[4] bram.I12[5] bram.I12[6] bram.I12[7] bram.I12[8] bram.I12[9] bram.I12[10] bram.I12[11] bram.I22[0] bram.I22[1] bram.I22[2] bram.I22[3] bram.I22[4] bram.I22[5] bram.I22[6] bram.I22[7] bram.I22[8] bram.I22[9] bram.I22[10] bram.I22[11] " output="bram_rtl.WDATA_B2_i[14]" add_const_input="false">
          <delay_constant in_port="bram.I12[0] bram.I12[1] bram.I12[2] bram.I12[3] bram.I12[4] bram.I12[5] bram.I12[6] bram.I12[7] bram.I12[8] bram.I12[9] bram.I12[10] bram.I12[11] bram.I22[0] bram.I22[1] bram.I22[2] bram.I22[3] bram.I22[4] bram.I22[5] bram.I22[6] bram.I22[7] bram.I22[8] bram.I22[9] bram.I22[10] bram.I22[11] " out_port="bram_rtl.WDATA_B2_i[14]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_2_18" input="bram.I02[0] bram.I02[1] bram.I02[2] bram.I02[3] bram.I02[4] bram.I02[5] bram.I02[6] bram.I02[7] bram.I02[8] bram.I02[9] bram.I02[10] bram.I02[11] bram.I32[0] bram.I32[1] bram.I32[2] bram.I32[3] bram.I32[4] bram.I32[5] bram.I32[6] bram.I32[7] bram.I32[8] bram.I32[9] bram.I32[10] bram.I32[11] " output="bram_rtl.WDATA_B1_i[14]" add_const_input="false">
          <delay_constant in_port="bram.I02[0] bram.I02[1] bram.I02[2] bram.I02[3] bram.I02[4] bram.I02[5] bram.I02[6] bram.I02[7] bram.I02[8] bram.I02[9] bram.I02[10] bram.I02[11] bram.I32[0] bram.I32[1] bram.I32[2] bram.I32[3] bram.I32[4] bram.I32[5] bram.I32[6] bram.I32[7] bram.I32[8] bram.I32[9] bram.I32[10] bram.I32[11] " out_port="bram_rtl.WDATA_B1_i[14]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_2_17" input="bram.I12[0] bram.I12[1] bram.I12[2] bram.I12[3] bram.I12[4] bram.I12[5] bram.I12[6] bram.I12[7] bram.I12[8] bram.I12[9] bram.I12[10] bram.I12[11] bram.I22[0] bram.I22[1] bram.I22[2] bram.I22[3] bram.I22[4] bram.I22[5] bram.I22[6] bram.I22[7] bram.I22[8] bram.I22[9] bram.I22[10] bram.I22[11] " output="bram_rtl.WDATA_A2_i[14]" add_const_input="false">
          <delay_constant in_port="bram.I12[0] bram.I12[1] bram.I12[2] bram.I12[3] bram.I12[4] bram.I12[5] bram.I12[6] bram.I12[7] bram.I12[8] bram.I12[9] bram.I12[10] bram.I12[11] bram.I22[0] bram.I22[1] bram.I22[2] bram.I22[3] bram.I22[4] bram.I22[5] bram.I22[6] bram.I22[7] bram.I22[8] bram.I22[9] bram.I22[10] bram.I22[11] " out_port="bram_rtl.WDATA_A2_i[14]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_2_16" input="bram.I02[0] bram.I02[1] bram.I02[2] bram.I02[3] bram.I02[4] bram.I02[5] bram.I02[6] bram.I02[7] bram.I02[8] bram.I02[9] bram.I02[10] bram.I02[11] bram.I32[0] bram.I32[1] bram.I32[2] bram.I32[3] bram.I32[4] bram.I32[5] bram.I32[6] bram.I32[7] bram.I32[8] bram.I32[9] bram.I32[10] bram.I32[11] " output="bram_rtl.WDATA_A1_i[14]" add_const_input="false">
          <delay_constant in_port="bram.I02[0] bram.I02[1] bram.I02[2] bram.I02[3] bram.I02[4] bram.I02[5] bram.I02[6] bram.I02[7] bram.I02[8] bram.I02[9] bram.I02[10] bram.I02[11] bram.I32[0] bram.I32[1] bram.I32[2] bram.I32[3] bram.I32[4] bram.I32[5] bram.I32[6] bram.I32[7] bram.I32[8] bram.I32[9] bram.I32[10] bram.I32[11] " out_port="bram_rtl.WDATA_A1_i[14]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_2_15" input="bram.I12[0] bram.I12[1] bram.I12[2] bram.I12[3] bram.I12[4] bram.I12[5] bram.I12[6] bram.I12[7] bram.I12[8] bram.I12[9] bram.I12[10] bram.I12[11] bram.I32[0] bram.I32[1] bram.I32[2] bram.I32[3] bram.I32[4] bram.I32[5] bram.I32[6] bram.I32[7] bram.I32[8] bram.I32[9] bram.I32[10] bram.I32[11] " output="bram_rtl.ADDR_B2_i[12]" add_const_input="false">
          <delay_constant in_port="bram.I12[0] bram.I12[1] bram.I12[2] bram.I12[3] bram.I12[4] bram.I12[5] bram.I12[6] bram.I12[7] bram.I12[8] bram.I12[9] bram.I12[10] bram.I12[11] bram.I32[0] bram.I32[1] bram.I32[2] bram.I32[3] bram.I32[4] bram.I32[5] bram.I32[6] bram.I32[7] bram.I32[8] bram.I32[9] bram.I32[10] bram.I32[11] " out_port="bram_rtl.ADDR_B2_i[12]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_2_14" input="bram.I02[0] bram.I02[1] bram.I02[2] bram.I02[3] bram.I02[4] bram.I02[5] bram.I02[6] bram.I02[7] bram.I02[8] bram.I02[9] bram.I02[10] bram.I02[11] bram.I22[0] bram.I22[1] bram.I22[2] bram.I22[3] bram.I22[4] bram.I22[5] bram.I22[6] bram.I22[7] bram.I22[8] bram.I22[9] bram.I22[10] bram.I22[11] " output="bram_rtl.ADDR_B1_i[12]" add_const_input="false">
          <delay_constant in_port="bram.I02[0] bram.I02[1] bram.I02[2] bram.I02[3] bram.I02[4] bram.I02[5] bram.I02[6] bram.I02[7] bram.I02[8] bram.I02[9] bram.I02[10] bram.I02[11] bram.I22[0] bram.I22[1] bram.I22[2] bram.I22[3] bram.I22[4] bram.I22[5] bram.I22[6] bram.I22[7] bram.I22[8] bram.I22[9] bram.I22[10] bram.I22[11] " out_port="bram_rtl.ADDR_B1_i[12]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_2_13" input="bram.I12[0] bram.I12[1] bram.I12[2] bram.I12[3] bram.I12[4] bram.I12[5] bram.I12[6] bram.I12[7] bram.I12[8] bram.I12[9] bram.I12[10] bram.I12[11] bram.I22[0] bram.I22[1] bram.I22[2] bram.I22[3] bram.I22[4] bram.I22[5] bram.I22[6] bram.I22[7] bram.I22[8] bram.I22[9] bram.I22[10] bram.I22[11] " output="bram_rtl.ADDR_A2_i[12]" add_const_input="false">
          <delay_constant in_port="bram.I12[0] bram.I12[1] bram.I12[2] bram.I12[3] bram.I12[4] bram.I12[5] bram.I12[6] bram.I12[7] bram.I12[8] bram.I12[9] bram.I12[10] bram.I12[11] bram.I22[0] bram.I22[1] bram.I22[2] bram.I22[3] bram.I22[4] bram.I22[5] bram.I22[6] bram.I22[7] bram.I22[8] bram.I22[9] bram.I22[10] bram.I22[11] " out_port="bram_rtl.ADDR_A2_i[12]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_2_12" input="bram.I02[0] bram.I02[1] bram.I02[2] bram.I02[3] bram.I02[4] bram.I02[5] bram.I02[6] bram.I02[7] bram.I02[8] bram.I02[9] bram.I02[10] bram.I02[11] bram.I32[0] bram.I32[1] bram.I32[2] bram.I32[3] bram.I32[4] bram.I32[5] bram.I32[6] bram.I32[7] bram.I32[8] bram.I32[9] bram.I32[10] bram.I32[11] " output="bram_rtl.ADDR_A1_i[12]" add_const_input="false">
          <delay_constant in_port="bram.I02[0] bram.I02[1] bram.I02[2] bram.I02[3] bram.I02[4] bram.I02[5] bram.I02[6] bram.I02[7] bram.I02[8] bram.I02[9] bram.I02[10] bram.I02[11] bram.I32[0] bram.I32[1] bram.I32[2] bram.I32[3] bram.I32[4] bram.I32[5] bram.I32[6] bram.I32[7] bram.I32[8] bram.I32[9] bram.I32[10] bram.I32[11] " out_port="bram_rtl.ADDR_A1_i[12]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_2_11" input="bram.I12[0] bram.I12[1] bram.I12[2] bram.I12[3] bram.I12[4] bram.I12[5] bram.I12[6] bram.I12[7] bram.I12[8] bram.I12[9] bram.I12[10] bram.I12[11] bram.I22[0] bram.I22[1] bram.I22[2] bram.I22[3] bram.I22[4] bram.I22[5] bram.I22[6] bram.I22[7] bram.I22[8] bram.I22[9] bram.I22[10] bram.I22[11] " output="bram_rtl.WDATA_B2_i[13]" add_const_input="false">
          <delay_constant in_port="bram.I12[0] bram.I12[1] bram.I12[2] bram.I12[3] bram.I12[4] bram.I12[5] bram.I12[6] bram.I12[7] bram.I12[8] bram.I12[9] bram.I12[10] bram.I12[11] bram.I22[0] bram.I22[1] bram.I22[2] bram.I22[3] bram.I22[4] bram.I22[5] bram.I22[6] bram.I22[7] bram.I22[8] bram.I22[9] bram.I22[10] bram.I22[11] " out_port="bram_rtl.WDATA_B2_i[13]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_2_10" input="bram.I02[0] bram.I02[1] bram.I02[2] bram.I02[3] bram.I02[4] bram.I02[5] bram.I02[6] bram.I02[7] bram.I02[8] bram.I02[9] bram.I02[10] bram.I02[11] bram.I32[0] bram.I32[1] bram.I32[2] bram.I32[3] bram.I32[4] bram.I32[5] bram.I32[6] bram.I32[7] bram.I32[8] bram.I32[9] bram.I32[10] bram.I32[11] " output="bram_rtl.WDATA_B1_i[13]" add_const_input="false">
          <delay_constant in_port="bram.I02[0] bram.I02[1] bram.I02[2] bram.I02[3] bram.I02[4] bram.I02[5] bram.I02[6] bram.I02[7] bram.I02[8] bram.I02[9] bram.I02[10] bram.I02[11] bram.I32[0] bram.I32[1] bram.I32[2] bram.I32[3] bram.I32[4] bram.I32[5] bram.I32[6] bram.I32[7] bram.I32[8] bram.I32[9] bram.I32[10] bram.I32[11] " out_port="bram_rtl.WDATA_B1_i[13]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_2_9" input="bram.I12[0] bram.I12[1] bram.I12[2] bram.I12[3] bram.I12[4] bram.I12[5] bram.I12[6] bram.I12[7] bram.I12[8] bram.I12[9] bram.I12[10] bram.I12[11] bram.I32[0] bram.I32[1] bram.I32[2] bram.I32[3] bram.I32[4] bram.I32[5] bram.I32[6] bram.I32[7] bram.I32[8] bram.I32[9] bram.I32[10] bram.I32[11] " output="bram_rtl.WDATA_A2_i[13]" add_const_input="false">
          <delay_constant in_port="bram.I12[0] bram.I12[1] bram.I12[2] bram.I12[3] bram.I12[4] bram.I12[5] bram.I12[6] bram.I12[7] bram.I12[8] bram.I12[9] bram.I12[10] bram.I12[11] bram.I32[0] bram.I32[1] bram.I32[2] bram.I32[3] bram.I32[4] bram.I32[5] bram.I32[6] bram.I32[7] bram.I32[8] bram.I32[9] bram.I32[10] bram.I32[11] " out_port="bram_rtl.WDATA_A2_i[13]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_2_8" input="bram.I02[0] bram.I02[1] bram.I02[2] bram.I02[3] bram.I02[4] bram.I02[5] bram.I02[6] bram.I02[7] bram.I02[8] bram.I02[9] bram.I02[10] bram.I02[11] bram.I22[0] bram.I22[1] bram.I22[2] bram.I22[3] bram.I22[4] bram.I22[5] bram.I22[6] bram.I22[7] bram.I22[8] bram.I22[9] bram.I22[10] bram.I22[11] " output="bram_rtl.WDATA_A1_i[13]" add_const_input="false">
          <delay_constant in_port="bram.I02[0] bram.I02[1] bram.I02[2] bram.I02[3] bram.I02[4] bram.I02[5] bram.I02[6] bram.I02[7] bram.I02[8] bram.I02[9] bram.I02[10] bram.I02[11] bram.I22[0] bram.I22[1] bram.I22[2] bram.I22[3] bram.I22[4] bram.I22[5] bram.I22[6] bram.I22[7] bram.I22[8] bram.I22[9] bram.I22[10] bram.I22[11] " out_port="bram_rtl.WDATA_A1_i[13]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_2_7" input="bram.I12[0] bram.I12[1] bram.I12[2] bram.I12[3] bram.I12[4] bram.I12[5] bram.I12[6] bram.I12[7] bram.I12[8] bram.I12[9] bram.I12[10] bram.I12[11] bram.I22[0] bram.I22[1] bram.I22[2] bram.I22[3] bram.I22[4] bram.I22[5] bram.I22[6] bram.I22[7] bram.I22[8] bram.I22[9] bram.I22[10] bram.I22[11] " output="bram_rtl.ADDR_B2_i[11]" add_const_input="false">
          <delay_constant in_port="bram.I12[0] bram.I12[1] bram.I12[2] bram.I12[3] bram.I12[4] bram.I12[5] bram.I12[6] bram.I12[7] bram.I12[8] bram.I12[9] bram.I12[10] bram.I12[11] bram.I22[0] bram.I22[1] bram.I22[2] bram.I22[3] bram.I22[4] bram.I22[5] bram.I22[6] bram.I22[7] bram.I22[8] bram.I22[9] bram.I22[10] bram.I22[11] " out_port="bram_rtl.ADDR_B2_i[11]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_2_6" input="bram.I02[0] bram.I02[1] bram.I02[2] bram.I02[3] bram.I02[4] bram.I02[5] bram.I02[6] bram.I02[7] bram.I02[8] bram.I02[9] bram.I02[10] bram.I02[11] bram.I32[0] bram.I32[1] bram.I32[2] bram.I32[3] bram.I32[4] bram.I32[5] bram.I32[6] bram.I32[7] bram.I32[8] bram.I32[9] bram.I32[10] bram.I32[11] " output="bram_rtl.ADDR_B1_i[11]" add_const_input="false">
          <delay_constant in_port="bram.I02[0] bram.I02[1] bram.I02[2] bram.I02[3] bram.I02[4] bram.I02[5] bram.I02[6] bram.I02[7] bram.I02[8] bram.I02[9] bram.I02[10] bram.I02[11] bram.I32[0] bram.I32[1] bram.I32[2] bram.I32[3] bram.I32[4] bram.I32[5] bram.I32[6] bram.I32[7] bram.I32[8] bram.I32[9] bram.I32[10] bram.I32[11] " out_port="bram_rtl.ADDR_B1_i[11]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_2_5" input="bram.I12[0] bram.I12[1] bram.I12[2] bram.I12[3] bram.I12[4] bram.I12[5] bram.I12[6] bram.I12[7] bram.I12[8] bram.I12[9] bram.I12[10] bram.I12[11] bram.I22[0] bram.I22[1] bram.I22[2] bram.I22[3] bram.I22[4] bram.I22[5] bram.I22[6] bram.I22[7] bram.I22[8] bram.I22[9] bram.I22[10] bram.I22[11] " output="bram_rtl.ADDR_A2_i[11]" add_const_input="false">
          <delay_constant in_port="bram.I12[0] bram.I12[1] bram.I12[2] bram.I12[3] bram.I12[4] bram.I12[5] bram.I12[6] bram.I12[7] bram.I12[8] bram.I12[9] bram.I12[10] bram.I12[11] bram.I22[0] bram.I22[1] bram.I22[2] bram.I22[3] bram.I22[4] bram.I22[5] bram.I22[6] bram.I22[7] bram.I22[8] bram.I22[9] bram.I22[10] bram.I22[11] " out_port="bram_rtl.ADDR_A2_i[11]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_2_4" input="bram.I02[0] bram.I02[1] bram.I02[2] bram.I02[3] bram.I02[4] bram.I02[5] bram.I02[6] bram.I02[7] bram.I02[8] bram.I02[9] bram.I02[10] bram.I02[11] bram.I32[0] bram.I32[1] bram.I32[2] bram.I32[3] bram.I32[4] bram.I32[5] bram.I32[6] bram.I32[7] bram.I32[8] bram.I32[9] bram.I32[10] bram.I32[11] " output="bram_rtl.ADDR_A1_i[11]" add_const_input="false">
          <delay_constant in_port="bram.I02[0] bram.I02[1] bram.I02[2] bram.I02[3] bram.I02[4] bram.I02[5] bram.I02[6] bram.I02[7] bram.I02[8] bram.I02[9] bram.I02[10] bram.I02[11] bram.I32[0] bram.I32[1] bram.I32[2] bram.I32[3] bram.I32[4] bram.I32[5] bram.I32[6] bram.I32[7] bram.I32[8] bram.I32[9] bram.I32[10] bram.I32[11] " out_port="bram_rtl.ADDR_A1_i[11]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_2_3" input="bram.I12[0] bram.I12[1] bram.I12[2] bram.I12[3] bram.I12[4] bram.I12[5] bram.I12[6] bram.I12[7] bram.I12[8] bram.I12[9] bram.I12[10] bram.I12[11] bram.I32[0] bram.I32[1] bram.I32[2] bram.I32[3] bram.I32[4] bram.I32[5] bram.I32[6] bram.I32[7] bram.I32[8] bram.I32[9] bram.I32[10] bram.I32[11] " output="bram_rtl.WDATA_B2_i[12]" add_const_input="false">
          <delay_constant in_port="bram.I12[0] bram.I12[1] bram.I12[2] bram.I12[3] bram.I12[4] bram.I12[5] bram.I12[6] bram.I12[7] bram.I12[8] bram.I12[9] bram.I12[10] bram.I12[11] bram.I32[0] bram.I32[1] bram.I32[2] bram.I32[3] bram.I32[4] bram.I32[5] bram.I32[6] bram.I32[7] bram.I32[8] bram.I32[9] bram.I32[10] bram.I32[11] " out_port="bram_rtl.WDATA_B2_i[12]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_2_2" input="bram.I02[0] bram.I02[1] bram.I02[2] bram.I02[3] bram.I02[4] bram.I02[5] bram.I02[6] bram.I02[7] bram.I02[8] bram.I02[9] bram.I02[10] bram.I02[11] bram.I22[0] bram.I22[1] bram.I22[2] bram.I22[3] bram.I22[4] bram.I22[5] bram.I22[6] bram.I22[7] bram.I22[8] bram.I22[9] bram.I22[10] bram.I22[11] " output="bram_rtl.WDATA_B1_i[12]" add_const_input="false">
          <delay_constant in_port="bram.I02[0] bram.I02[1] bram.I02[2] bram.I02[3] bram.I02[4] bram.I02[5] bram.I02[6] bram.I02[7] bram.I02[8] bram.I02[9] bram.I02[10] bram.I02[11] bram.I22[0] bram.I22[1] bram.I22[2] bram.I22[3] bram.I22[4] bram.I22[5] bram.I22[6] bram.I22[7] bram.I22[8] bram.I22[9] bram.I22[10] bram.I22[11] " out_port="bram_rtl.WDATA_B1_i[12]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_2_1" input="bram.I12[0] bram.I12[1] bram.I12[2] bram.I12[3] bram.I12[4] bram.I12[5] bram.I12[6] bram.I12[7] bram.I12[8] bram.I12[9] bram.I12[10] bram.I12[11] bram.I22[0] bram.I22[1] bram.I22[2] bram.I22[3] bram.I22[4] bram.I22[5] bram.I22[6] bram.I22[7] bram.I22[8] bram.I22[9] bram.I22[10] bram.I22[11] " output="bram_rtl.WDATA_A2_i[12]" add_const_input="false">
          <delay_constant in_port="bram.I12[0] bram.I12[1] bram.I12[2] bram.I12[3] bram.I12[4] bram.I12[5] bram.I12[6] bram.I12[7] bram.I12[8] bram.I12[9] bram.I12[10] bram.I12[11] bram.I22[0] bram.I22[1] bram.I22[2] bram.I22[3] bram.I22[4] bram.I22[5] bram.I22[6] bram.I22[7] bram.I22[8] bram.I22[9] bram.I22[10] bram.I22[11] " out_port="bram_rtl.WDATA_A2_i[12]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_2_0" input="bram.I02[0] bram.I02[1] bram.I02[2] bram.I02[3] bram.I02[4] bram.I02[5] bram.I02[6] bram.I02[7] bram.I02[8] bram.I02[9] bram.I02[10] bram.I02[11] bram.I32[0] bram.I32[1] bram.I32[2] bram.I32[3] bram.I32[4] bram.I32[5] bram.I32[6] bram.I32[7] bram.I32[8] bram.I32[9] bram.I32[10] bram.I32[11] " output="bram_rtl.WDATA_A1_i[12]" add_const_input="false">
          <delay_constant in_port="bram.I02[0] bram.I02[1] bram.I02[2] bram.I02[3] bram.I02[4] bram.I02[5] bram.I02[6] bram.I02[7] bram.I02[8] bram.I02[9] bram.I02[10] bram.I02[11] bram.I32[0] bram.I32[1] bram.I32[2] bram.I32[3] bram.I32[4] bram.I32[5] bram.I32[6] bram.I32[7] bram.I32[8] bram.I32[9] bram.I32[10] bram.I32[11] " out_port="bram_rtl.WDATA_A1_i[12]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_1_47" input="bram.I11[0] bram.I11[1] bram.I11[2] bram.I11[3] bram.I11[4] bram.I11[5] bram.I11[6] bram.I11[7] bram.I11[8] bram.I11[9] bram.I11[10] bram.I11[11] bram.I21[0] bram.I21[1] bram.I21[2] bram.I21[3] bram.I21[4] bram.I21[5] bram.I21[6] bram.I21[7] bram.I21[8] bram.I21[9] bram.I21[10] bram.I21[11] " output="bram_rtl.ADDR_B2_i[10]" add_const_input="false">
          <delay_constant in_port="bram.I11[0] bram.I11[1] bram.I11[2] bram.I11[3] bram.I11[4] bram.I11[5] bram.I11[6] bram.I11[7] bram.I11[8] bram.I11[9] bram.I11[10] bram.I11[11] bram.I21[0] bram.I21[1] bram.I21[2] bram.I21[3] bram.I21[4] bram.I21[5] bram.I21[6] bram.I21[7] bram.I21[8] bram.I21[9] bram.I21[10] bram.I21[11] " out_port="bram_rtl.ADDR_B2_i[10]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_1_46" input="bram.I01[0] bram.I01[1] bram.I01[2] bram.I01[3] bram.I01[4] bram.I01[5] bram.I01[6] bram.I01[7] bram.I01[8] bram.I01[9] bram.I01[10] bram.I01[11] bram.I31[0] bram.I31[1] bram.I31[2] bram.I31[3] bram.I31[4] bram.I31[5] bram.I31[6] bram.I31[7] bram.I31[8] bram.I31[9] bram.I31[10] bram.I31[11] " output="bram_rtl.ADDR_B1_i[10]" add_const_input="false">
          <delay_constant in_port="bram.I01[0] bram.I01[1] bram.I01[2] bram.I01[3] bram.I01[4] bram.I01[5] bram.I01[6] bram.I01[7] bram.I01[8] bram.I01[9] bram.I01[10] bram.I01[11] bram.I31[0] bram.I31[1] bram.I31[2] bram.I31[3] bram.I31[4] bram.I31[5] bram.I31[6] bram.I31[7] bram.I31[8] bram.I31[9] bram.I31[10] bram.I31[11] " out_port="bram_rtl.ADDR_B1_i[10]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_1_45" input="bram.I11[0] bram.I11[1] bram.I11[2] bram.I11[3] bram.I11[4] bram.I11[5] bram.I11[6] bram.I11[7] bram.I11[8] bram.I11[9] bram.I11[10] bram.I11[11] bram.I31[0] bram.I31[1] bram.I31[2] bram.I31[3] bram.I31[4] bram.I31[5] bram.I31[6] bram.I31[7] bram.I31[8] bram.I31[9] bram.I31[10] bram.I31[11] " output="bram_rtl.ADDR_A2_i[10]" add_const_input="false">
          <delay_constant in_port="bram.I11[0] bram.I11[1] bram.I11[2] bram.I11[3] bram.I11[4] bram.I11[5] bram.I11[6] bram.I11[7] bram.I11[8] bram.I11[9] bram.I11[10] bram.I11[11] bram.I31[0] bram.I31[1] bram.I31[2] bram.I31[3] bram.I31[4] bram.I31[5] bram.I31[6] bram.I31[7] bram.I31[8] bram.I31[9] bram.I31[10] bram.I31[11] " out_port="bram_rtl.ADDR_A2_i[10]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_1_44" input="bram.I01[0] bram.I01[1] bram.I01[2] bram.I01[3] bram.I01[4] bram.I01[5] bram.I01[6] bram.I01[7] bram.I01[8] bram.I01[9] bram.I01[10] bram.I01[11] bram.I21[0] bram.I21[1] bram.I21[2] bram.I21[3] bram.I21[4] bram.I21[5] bram.I21[6] bram.I21[7] bram.I21[8] bram.I21[9] bram.I21[10] bram.I21[11] " output="bram_rtl.ADDR_A1_i[10]" add_const_input="false">
          <delay_constant in_port="bram.I01[0] bram.I01[1] bram.I01[2] bram.I01[3] bram.I01[4] bram.I01[5] bram.I01[6] bram.I01[7] bram.I01[8] bram.I01[9] bram.I01[10] bram.I01[11] bram.I21[0] bram.I21[1] bram.I21[2] bram.I21[3] bram.I21[4] bram.I21[5] bram.I21[6] bram.I21[7] bram.I21[8] bram.I21[9] bram.I21[10] bram.I21[11] " out_port="bram_rtl.ADDR_A1_i[10]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_1_43" input="bram.I11[0] bram.I11[1] bram.I11[2] bram.I11[3] bram.I11[4] bram.I11[5] bram.I11[6] bram.I11[7] bram.I11[8] bram.I11[9] bram.I11[10] bram.I11[11] bram.I21[0] bram.I21[1] bram.I21[2] bram.I21[3] bram.I21[4] bram.I21[5] bram.I21[6] bram.I21[7] bram.I21[8] bram.I21[9] bram.I21[10] bram.I21[11] " output="bram_rtl.WDATA_B2_i[11]" add_const_input="false">
          <delay_constant in_port="bram.I11[0] bram.I11[1] bram.I11[2] bram.I11[3] bram.I11[4] bram.I11[5] bram.I11[6] bram.I11[7] bram.I11[8] bram.I11[9] bram.I11[10] bram.I11[11] bram.I21[0] bram.I21[1] bram.I21[2] bram.I21[3] bram.I21[4] bram.I21[5] bram.I21[6] bram.I21[7] bram.I21[8] bram.I21[9] bram.I21[10] bram.I21[11] " out_port="bram_rtl.WDATA_B2_i[11]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_1_42" input="bram.I01[0] bram.I01[1] bram.I01[2] bram.I01[3] bram.I01[4] bram.I01[5] bram.I01[6] bram.I01[7] bram.I01[8] bram.I01[9] bram.I01[10] bram.I01[11] bram.I31[0] bram.I31[1] bram.I31[2] bram.I31[3] bram.I31[4] bram.I31[5] bram.I31[6] bram.I31[7] bram.I31[8] bram.I31[9] bram.I31[10] bram.I31[11] " output="bram_rtl.WDATA_B1_i[11]" add_const_input="false">
          <delay_constant in_port="bram.I01[0] bram.I01[1] bram.I01[2] bram.I01[3] bram.I01[4] bram.I01[5] bram.I01[6] bram.I01[7] bram.I01[8] bram.I01[9] bram.I01[10] bram.I01[11] bram.I31[0] bram.I31[1] bram.I31[2] bram.I31[3] bram.I31[4] bram.I31[5] bram.I31[6] bram.I31[7] bram.I31[8] bram.I31[9] bram.I31[10] bram.I31[11] " out_port="bram_rtl.WDATA_B1_i[11]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_1_41" input="bram.I11[0] bram.I11[1] bram.I11[2] bram.I11[3] bram.I11[4] bram.I11[5] bram.I11[6] bram.I11[7] bram.I11[8] bram.I11[9] bram.I11[10] bram.I11[11] bram.I21[0] bram.I21[1] bram.I21[2] bram.I21[3] bram.I21[4] bram.I21[5] bram.I21[6] bram.I21[7] bram.I21[8] bram.I21[9] bram.I21[10] bram.I21[11] " output="bram_rtl.WDATA_A2_i[11]" add_const_input="false">
          <delay_constant in_port="bram.I11[0] bram.I11[1] bram.I11[2] bram.I11[3] bram.I11[4] bram.I11[5] bram.I11[6] bram.I11[7] bram.I11[8] bram.I11[9] bram.I11[10] bram.I11[11] bram.I21[0] bram.I21[1] bram.I21[2] bram.I21[3] bram.I21[4] bram.I21[5] bram.I21[6] bram.I21[7] bram.I21[8] bram.I21[9] bram.I21[10] bram.I21[11] " out_port="bram_rtl.WDATA_A2_i[11]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_1_40" input="bram.I01[0] bram.I01[1] bram.I01[2] bram.I01[3] bram.I01[4] bram.I01[5] bram.I01[6] bram.I01[7] bram.I01[8] bram.I01[9] bram.I01[10] bram.I01[11] bram.I31[0] bram.I31[1] bram.I31[2] bram.I31[3] bram.I31[4] bram.I31[5] bram.I31[6] bram.I31[7] bram.I31[8] bram.I31[9] bram.I31[10] bram.I31[11] " output="bram_rtl.WDATA_A1_i[11]" add_const_input="false">
          <delay_constant in_port="bram.I01[0] bram.I01[1] bram.I01[2] bram.I01[3] bram.I01[4] bram.I01[5] bram.I01[6] bram.I01[7] bram.I01[8] bram.I01[9] bram.I01[10] bram.I01[11] bram.I31[0] bram.I31[1] bram.I31[2] bram.I31[3] bram.I31[4] bram.I31[5] bram.I31[6] bram.I31[7] bram.I31[8] bram.I31[9] bram.I31[10] bram.I31[11] " out_port="bram_rtl.WDATA_A1_i[11]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_1_39" input="bram.I11[0] bram.I11[1] bram.I11[2] bram.I11[3] bram.I11[4] bram.I11[5] bram.I11[6] bram.I11[7] bram.I11[8] bram.I11[9] bram.I11[10] bram.I11[11] bram.I31[0] bram.I31[1] bram.I31[2] bram.I31[3] bram.I31[4] bram.I31[5] bram.I31[6] bram.I31[7] bram.I31[8] bram.I31[9] bram.I31[10] bram.I31[11] " output="bram_rtl.ADDR_B2_i[9]" add_const_input="false">
          <delay_constant in_port="bram.I11[0] bram.I11[1] bram.I11[2] bram.I11[3] bram.I11[4] bram.I11[5] bram.I11[6] bram.I11[7] bram.I11[8] bram.I11[9] bram.I11[10] bram.I11[11] bram.I31[0] bram.I31[1] bram.I31[2] bram.I31[3] bram.I31[4] bram.I31[5] bram.I31[6] bram.I31[7] bram.I31[8] bram.I31[9] bram.I31[10] bram.I31[11] " out_port="bram_rtl.ADDR_B2_i[9]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_1_38" input="bram.I01[0] bram.I01[1] bram.I01[2] bram.I01[3] bram.I01[4] bram.I01[5] bram.I01[6] bram.I01[7] bram.I01[8] bram.I01[9] bram.I01[10] bram.I01[11] bram.I21[0] bram.I21[1] bram.I21[2] bram.I21[3] bram.I21[4] bram.I21[5] bram.I21[6] bram.I21[7] bram.I21[8] bram.I21[9] bram.I21[10] bram.I21[11] " output="bram_rtl.ADDR_B1_i[9]" add_const_input="false">
          <delay_constant in_port="bram.I01[0] bram.I01[1] bram.I01[2] bram.I01[3] bram.I01[4] bram.I01[5] bram.I01[6] bram.I01[7] bram.I01[8] bram.I01[9] bram.I01[10] bram.I01[11] bram.I21[0] bram.I21[1] bram.I21[2] bram.I21[3] bram.I21[4] bram.I21[5] bram.I21[6] bram.I21[7] bram.I21[8] bram.I21[9] bram.I21[10] bram.I21[11] " out_port="bram_rtl.ADDR_B1_i[9]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_1_37" input="bram.I11[0] bram.I11[1] bram.I11[2] bram.I11[3] bram.I11[4] bram.I11[5] bram.I11[6] bram.I11[7] bram.I11[8] bram.I11[9] bram.I11[10] bram.I11[11] bram.I21[0] bram.I21[1] bram.I21[2] bram.I21[3] bram.I21[4] bram.I21[5] bram.I21[6] bram.I21[7] bram.I21[8] bram.I21[9] bram.I21[10] bram.I21[11] " output="bram_rtl.ADDR_A2_i[9]" add_const_input="false">
          <delay_constant in_port="bram.I11[0] bram.I11[1] bram.I11[2] bram.I11[3] bram.I11[4] bram.I11[5] bram.I11[6] bram.I11[7] bram.I11[8] bram.I11[9] bram.I11[10] bram.I11[11] bram.I21[0] bram.I21[1] bram.I21[2] bram.I21[3] bram.I21[4] bram.I21[5] bram.I21[6] bram.I21[7] bram.I21[8] bram.I21[9] bram.I21[10] bram.I21[11] " out_port="bram_rtl.ADDR_A2_i[9]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_1_36" input="bram.I01[0] bram.I01[1] bram.I01[2] bram.I01[3] bram.I01[4] bram.I01[5] bram.I01[6] bram.I01[7] bram.I01[8] bram.I01[9] bram.I01[10] bram.I01[11] bram.I31[0] bram.I31[1] bram.I31[2] bram.I31[3] bram.I31[4] bram.I31[5] bram.I31[6] bram.I31[7] bram.I31[8] bram.I31[9] bram.I31[10] bram.I31[11] " output="bram_rtl.ADDR_A1_i[9]" add_const_input="false">
          <delay_constant in_port="bram.I01[0] bram.I01[1] bram.I01[2] bram.I01[3] bram.I01[4] bram.I01[5] bram.I01[6] bram.I01[7] bram.I01[8] bram.I01[9] bram.I01[10] bram.I01[11] bram.I31[0] bram.I31[1] bram.I31[2] bram.I31[3] bram.I31[4] bram.I31[5] bram.I31[6] bram.I31[7] bram.I31[8] bram.I31[9] bram.I31[10] bram.I31[11] " out_port="bram_rtl.ADDR_A1_i[9]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_1_35" input="bram.I11[0] bram.I11[1] bram.I11[2] bram.I11[3] bram.I11[4] bram.I11[5] bram.I11[6] bram.I11[7] bram.I11[8] bram.I11[9] bram.I11[10] bram.I11[11] bram.I21[0] bram.I21[1] bram.I21[2] bram.I21[3] bram.I21[4] bram.I21[5] bram.I21[6] bram.I21[7] bram.I21[8] bram.I21[9] bram.I21[10] bram.I21[11] " output="bram_rtl.WDATA_B2_i[10]" add_const_input="false">
          <delay_constant in_port="bram.I11[0] bram.I11[1] bram.I11[2] bram.I11[3] bram.I11[4] bram.I11[5] bram.I11[6] bram.I11[7] bram.I11[8] bram.I11[9] bram.I11[10] bram.I11[11] bram.I21[0] bram.I21[1] bram.I21[2] bram.I21[3] bram.I21[4] bram.I21[5] bram.I21[6] bram.I21[7] bram.I21[8] bram.I21[9] bram.I21[10] bram.I21[11] " out_port="bram_rtl.WDATA_B2_i[10]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_1_34" input="bram.I01[0] bram.I01[1] bram.I01[2] bram.I01[3] bram.I01[4] bram.I01[5] bram.I01[6] bram.I01[7] bram.I01[8] bram.I01[9] bram.I01[10] bram.I01[11] bram.I31[0] bram.I31[1] bram.I31[2] bram.I31[3] bram.I31[4] bram.I31[5] bram.I31[6] bram.I31[7] bram.I31[8] bram.I31[9] bram.I31[10] bram.I31[11] " output="bram_rtl.WDATA_B1_i[10]" add_const_input="false">
          <delay_constant in_port="bram.I01[0] bram.I01[1] bram.I01[2] bram.I01[3] bram.I01[4] bram.I01[5] bram.I01[6] bram.I01[7] bram.I01[8] bram.I01[9] bram.I01[10] bram.I01[11] bram.I31[0] bram.I31[1] bram.I31[2] bram.I31[3] bram.I31[4] bram.I31[5] bram.I31[6] bram.I31[7] bram.I31[8] bram.I31[9] bram.I31[10] bram.I31[11] " out_port="bram_rtl.WDATA_B1_i[10]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_1_33" input="bram.I11[0] bram.I11[1] bram.I11[2] bram.I11[3] bram.I11[4] bram.I11[5] bram.I11[6] bram.I11[7] bram.I11[8] bram.I11[9] bram.I11[10] bram.I11[11] bram.I31[0] bram.I31[1] bram.I31[2] bram.I31[3] bram.I31[4] bram.I31[5] bram.I31[6] bram.I31[7] bram.I31[8] bram.I31[9] bram.I31[10] bram.I31[11] " output="bram_rtl.WDATA_A2_i[10]" add_const_input="false">
          <delay_constant in_port="bram.I11[0] bram.I11[1] bram.I11[2] bram.I11[3] bram.I11[4] bram.I11[5] bram.I11[6] bram.I11[7] bram.I11[8] bram.I11[9] bram.I11[10] bram.I11[11] bram.I31[0] bram.I31[1] bram.I31[2] bram.I31[3] bram.I31[4] bram.I31[5] bram.I31[6] bram.I31[7] bram.I31[8] bram.I31[9] bram.I31[10] bram.I31[11] " out_port="bram_rtl.WDATA_A2_i[10]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_1_32" input="bram.I01[0] bram.I01[1] bram.I01[2] bram.I01[3] bram.I01[4] bram.I01[5] bram.I01[6] bram.I01[7] bram.I01[8] bram.I01[9] bram.I01[10] bram.I01[11] bram.I21[0] bram.I21[1] bram.I21[2] bram.I21[3] bram.I21[4] bram.I21[5] bram.I21[6] bram.I21[7] bram.I21[8] bram.I21[9] bram.I21[10] bram.I21[11] " output="bram_rtl.WDATA_A1_i[10]" add_const_input="false">
          <delay_constant in_port="bram.I01[0] bram.I01[1] bram.I01[2] bram.I01[3] bram.I01[4] bram.I01[5] bram.I01[6] bram.I01[7] bram.I01[8] bram.I01[9] bram.I01[10] bram.I01[11] bram.I21[0] bram.I21[1] bram.I21[2] bram.I21[3] bram.I21[4] bram.I21[5] bram.I21[6] bram.I21[7] bram.I21[8] bram.I21[9] bram.I21[10] bram.I21[11] " out_port="bram_rtl.WDATA_A1_i[10]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_1_31" input="bram.I11[0] bram.I11[1] bram.I11[2] bram.I11[3] bram.I11[4] bram.I11[5] bram.I11[6] bram.I11[7] bram.I11[8] bram.I11[9] bram.I11[10] bram.I11[11] bram.I21[0] bram.I21[1] bram.I21[2] bram.I21[3] bram.I21[4] bram.I21[5] bram.I21[6] bram.I21[7] bram.I21[8] bram.I21[9] bram.I21[10] bram.I21[11] " output="bram_rtl.ADDR_B2_i[8]" add_const_input="false">
          <delay_constant in_port="bram.I11[0] bram.I11[1] bram.I11[2] bram.I11[3] bram.I11[4] bram.I11[5] bram.I11[6] bram.I11[7] bram.I11[8] bram.I11[9] bram.I11[10] bram.I11[11] bram.I21[0] bram.I21[1] bram.I21[2] bram.I21[3] bram.I21[4] bram.I21[5] bram.I21[6] bram.I21[7] bram.I21[8] bram.I21[9] bram.I21[10] bram.I21[11] " out_port="bram_rtl.ADDR_B2_i[8]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_1_30" input="bram.I01[0] bram.I01[1] bram.I01[2] bram.I01[3] bram.I01[4] bram.I01[5] bram.I01[6] bram.I01[7] bram.I01[8] bram.I01[9] bram.I01[10] bram.I01[11] bram.I31[0] bram.I31[1] bram.I31[2] bram.I31[3] bram.I31[4] bram.I31[5] bram.I31[6] bram.I31[7] bram.I31[8] bram.I31[9] bram.I31[10] bram.I31[11] " output="bram_rtl.ADDR_B1_i[8]" add_const_input="false">
          <delay_constant in_port="bram.I01[0] bram.I01[1] bram.I01[2] bram.I01[3] bram.I01[4] bram.I01[5] bram.I01[6] bram.I01[7] bram.I01[8] bram.I01[9] bram.I01[10] bram.I01[11] bram.I31[0] bram.I31[1] bram.I31[2] bram.I31[3] bram.I31[4] bram.I31[5] bram.I31[6] bram.I31[7] bram.I31[8] bram.I31[9] bram.I31[10] bram.I31[11] " out_port="bram_rtl.ADDR_B1_i[8]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_1_29" input="bram.I11[0] bram.I11[1] bram.I11[2] bram.I11[3] bram.I11[4] bram.I11[5] bram.I11[6] bram.I11[7] bram.I11[8] bram.I11[9] bram.I11[10] bram.I11[11] bram.I21[0] bram.I21[1] bram.I21[2] bram.I21[3] bram.I21[4] bram.I21[5] bram.I21[6] bram.I21[7] bram.I21[8] bram.I21[9] bram.I21[10] bram.I21[11] " output="bram_rtl.ADDR_A2_i[8]" add_const_input="false">
          <delay_constant in_port="bram.I11[0] bram.I11[1] bram.I11[2] bram.I11[3] bram.I11[4] bram.I11[5] bram.I11[6] bram.I11[7] bram.I11[8] bram.I11[9] bram.I11[10] bram.I11[11] bram.I21[0] bram.I21[1] bram.I21[2] bram.I21[3] bram.I21[4] bram.I21[5] bram.I21[6] bram.I21[7] bram.I21[8] bram.I21[9] bram.I21[10] bram.I21[11] " out_port="bram_rtl.ADDR_A2_i[8]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_1_28" input="bram.I01[0] bram.I01[1] bram.I01[2] bram.I01[3] bram.I01[4] bram.I01[5] bram.I01[6] bram.I01[7] bram.I01[8] bram.I01[9] bram.I01[10] bram.I01[11] bram.I31[0] bram.I31[1] bram.I31[2] bram.I31[3] bram.I31[4] bram.I31[5] bram.I31[6] bram.I31[7] bram.I31[8] bram.I31[9] bram.I31[10] bram.I31[11] " output="bram_rtl.ADDR_A1_i[8]" add_const_input="false">
          <delay_constant in_port="bram.I01[0] bram.I01[1] bram.I01[2] bram.I01[3] bram.I01[4] bram.I01[5] bram.I01[6] bram.I01[7] bram.I01[8] bram.I01[9] bram.I01[10] bram.I01[11] bram.I31[0] bram.I31[1] bram.I31[2] bram.I31[3] bram.I31[4] bram.I31[5] bram.I31[6] bram.I31[7] bram.I31[8] bram.I31[9] bram.I31[10] bram.I31[11] " out_port="bram_rtl.ADDR_A1_i[8]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_1_27" input="bram.I11[0] bram.I11[1] bram.I11[2] bram.I11[3] bram.I11[4] bram.I11[5] bram.I11[6] bram.I11[7] bram.I11[8] bram.I11[9] bram.I11[10] bram.I11[11] bram.I31[0] bram.I31[1] bram.I31[2] bram.I31[3] bram.I31[4] bram.I31[5] bram.I31[6] bram.I31[7] bram.I31[8] bram.I31[9] bram.I31[10] bram.I31[11] " output="bram_rtl.WDATA_B2_i[9]" add_const_input="false">
          <delay_constant in_port="bram.I11[0] bram.I11[1] bram.I11[2] bram.I11[3] bram.I11[4] bram.I11[5] bram.I11[6] bram.I11[7] bram.I11[8] bram.I11[9] bram.I11[10] bram.I11[11] bram.I31[0] bram.I31[1] bram.I31[2] bram.I31[3] bram.I31[4] bram.I31[5] bram.I31[6] bram.I31[7] bram.I31[8] bram.I31[9] bram.I31[10] bram.I31[11] " out_port="bram_rtl.WDATA_B2_i[9]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_1_26" input="bram.I01[0] bram.I01[1] bram.I01[2] bram.I01[3] bram.I01[4] bram.I01[5] bram.I01[6] bram.I01[7] bram.I01[8] bram.I01[9] bram.I01[10] bram.I01[11] bram.I21[0] bram.I21[1] bram.I21[2] bram.I21[3] bram.I21[4] bram.I21[5] bram.I21[6] bram.I21[7] bram.I21[8] bram.I21[9] bram.I21[10] bram.I21[11] " output="bram_rtl.WDATA_B1_i[9]" add_const_input="false">
          <delay_constant in_port="bram.I01[0] bram.I01[1] bram.I01[2] bram.I01[3] bram.I01[4] bram.I01[5] bram.I01[6] bram.I01[7] bram.I01[8] bram.I01[9] bram.I01[10] bram.I01[11] bram.I21[0] bram.I21[1] bram.I21[2] bram.I21[3] bram.I21[4] bram.I21[5] bram.I21[6] bram.I21[7] bram.I21[8] bram.I21[9] bram.I21[10] bram.I21[11] " out_port="bram_rtl.WDATA_B1_i[9]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_1_25" input="bram.I11[0] bram.I11[1] bram.I11[2] bram.I11[3] bram.I11[4] bram.I11[5] bram.I11[6] bram.I11[7] bram.I11[8] bram.I11[9] bram.I11[10] bram.I11[11] bram.I21[0] bram.I21[1] bram.I21[2] bram.I21[3] bram.I21[4] bram.I21[5] bram.I21[6] bram.I21[7] bram.I21[8] bram.I21[9] bram.I21[10] bram.I21[11] " output="bram_rtl.WDATA_A2_i[9]" add_const_input="false">
          <delay_constant in_port="bram.I11[0] bram.I11[1] bram.I11[2] bram.I11[3] bram.I11[4] bram.I11[5] bram.I11[6] bram.I11[7] bram.I11[8] bram.I11[9] bram.I11[10] bram.I11[11] bram.I21[0] bram.I21[1] bram.I21[2] bram.I21[3] bram.I21[4] bram.I21[5] bram.I21[6] bram.I21[7] bram.I21[8] bram.I21[9] bram.I21[10] bram.I21[11] " out_port="bram_rtl.WDATA_A2_i[9]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_1_24" input="bram.I01[0] bram.I01[1] bram.I01[2] bram.I01[3] bram.I01[4] bram.I01[5] bram.I01[6] bram.I01[7] bram.I01[8] bram.I01[9] bram.I01[10] bram.I01[11] bram.I31[0] bram.I31[1] bram.I31[2] bram.I31[3] bram.I31[4] bram.I31[5] bram.I31[6] bram.I31[7] bram.I31[8] bram.I31[9] bram.I31[10] bram.I31[11] " output="bram_rtl.WDATA_A1_i[9]" add_const_input="false">
          <delay_constant in_port="bram.I01[0] bram.I01[1] bram.I01[2] bram.I01[3] bram.I01[4] bram.I01[5] bram.I01[6] bram.I01[7] bram.I01[8] bram.I01[9] bram.I01[10] bram.I01[11] bram.I31[0] bram.I31[1] bram.I31[2] bram.I31[3] bram.I31[4] bram.I31[5] bram.I31[6] bram.I31[7] bram.I31[8] bram.I31[9] bram.I31[10] bram.I31[11] " out_port="bram_rtl.WDATA_A1_i[9]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_1_23" input="bram.I11[0] bram.I11[1] bram.I11[2] bram.I11[3] bram.I11[4] bram.I11[5] bram.I11[6] bram.I11[7] bram.I11[8] bram.I11[9] bram.I11[10] bram.I11[11] bram.I21[0] bram.I21[1] bram.I21[2] bram.I21[3] bram.I21[4] bram.I21[5] bram.I21[6] bram.I21[7] bram.I21[8] bram.I21[9] bram.I21[10] bram.I21[11] " output="bram_rtl.BE_B2_i[0]" add_const_input="false">
          <delay_constant in_port="bram.I11[0] bram.I11[1] bram.I11[2] bram.I11[3] bram.I11[4] bram.I11[5] bram.I11[6] bram.I11[7] bram.I11[8] bram.I11[9] bram.I11[10] bram.I11[11] bram.I21[0] bram.I21[1] bram.I21[2] bram.I21[3] bram.I21[4] bram.I21[5] bram.I21[6] bram.I21[7] bram.I21[8] bram.I21[9] bram.I21[10] bram.I21[11] " out_port="bram_rtl.BE_B2_i[0]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_1_22" input="bram.I01[0] bram.I01[1] bram.I01[2] bram.I01[3] bram.I01[4] bram.I01[5] bram.I01[6] bram.I01[7] bram.I01[8] bram.I01[9] bram.I01[10] bram.I01[11] bram.I31[0] bram.I31[1] bram.I31[2] bram.I31[3] bram.I31[4] bram.I31[5] bram.I31[6] bram.I31[7] bram.I31[8] bram.I31[9] bram.I31[10] bram.I31[11] " output="bram_rtl.BE_B1_i[0]" add_const_input="false">
          <delay_constant in_port="bram.I01[0] bram.I01[1] bram.I01[2] bram.I01[3] bram.I01[4] bram.I01[5] bram.I01[6] bram.I01[7] bram.I01[8] bram.I01[9] bram.I01[10] bram.I01[11] bram.I31[0] bram.I31[1] bram.I31[2] bram.I31[3] bram.I31[4] bram.I31[5] bram.I31[6] bram.I31[7] bram.I31[8] bram.I31[9] bram.I31[10] bram.I31[11] " out_port="bram_rtl.BE_B1_i[0]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_1_21" input="bram.I11[0] bram.I11[1] bram.I11[2] bram.I11[3] bram.I11[4] bram.I11[5] bram.I11[6] bram.I11[7] bram.I11[8] bram.I11[9] bram.I11[10] bram.I11[11] bram.I31[0] bram.I31[1] bram.I31[2] bram.I31[3] bram.I31[4] bram.I31[5] bram.I31[6] bram.I31[7] bram.I31[8] bram.I31[9] bram.I31[10] bram.I31[11] " output="bram_rtl.BE_A2_i[0]" add_const_input="false">
          <delay_constant in_port="bram.I11[0] bram.I11[1] bram.I11[2] bram.I11[3] bram.I11[4] bram.I11[5] bram.I11[6] bram.I11[7] bram.I11[8] bram.I11[9] bram.I11[10] bram.I11[11] bram.I31[0] bram.I31[1] bram.I31[2] bram.I31[3] bram.I31[4] bram.I31[5] bram.I31[6] bram.I31[7] bram.I31[8] bram.I31[9] bram.I31[10] bram.I31[11] " out_port="bram_rtl.BE_A2_i[0]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_1_20" input="bram.I01[0] bram.I01[1] bram.I01[2] bram.I01[3] bram.I01[4] bram.I01[5] bram.I01[6] bram.I01[7] bram.I01[8] bram.I01[9] bram.I01[10] bram.I01[11] bram.I21[0] bram.I21[1] bram.I21[2] bram.I21[3] bram.I21[4] bram.I21[5] bram.I21[6] bram.I21[7] bram.I21[8] bram.I21[9] bram.I21[10] bram.I21[11] " output="bram_rtl.BE_A1_i[0]" add_const_input="false">
          <delay_constant in_port="bram.I01[0] bram.I01[1] bram.I01[2] bram.I01[3] bram.I01[4] bram.I01[5] bram.I01[6] bram.I01[7] bram.I01[8] bram.I01[9] bram.I01[10] bram.I01[11] bram.I21[0] bram.I21[1] bram.I21[2] bram.I21[3] bram.I21[4] bram.I21[5] bram.I21[6] bram.I21[7] bram.I21[8] bram.I21[9] bram.I21[10] bram.I21[11] " out_port="bram_rtl.BE_A1_i[0]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_1_19" input="bram.I11[0] bram.I11[1] bram.I11[2] bram.I11[3] bram.I11[4] bram.I11[5] bram.I11[6] bram.I11[7] bram.I11[8] bram.I11[9] bram.I11[10] bram.I11[11] bram.I21[0] bram.I21[1] bram.I21[2] bram.I21[3] bram.I21[4] bram.I21[5] bram.I21[6] bram.I21[7] bram.I21[8] bram.I21[9] bram.I21[10] bram.I21[11] " output="bram_rtl.WDATA_B2_i[8]" add_const_input="false">
          <delay_constant in_port="bram.I11[0] bram.I11[1] bram.I11[2] bram.I11[3] bram.I11[4] bram.I11[5] bram.I11[6] bram.I11[7] bram.I11[8] bram.I11[9] bram.I11[10] bram.I11[11] bram.I21[0] bram.I21[1] bram.I21[2] bram.I21[3] bram.I21[4] bram.I21[5] bram.I21[6] bram.I21[7] bram.I21[8] bram.I21[9] bram.I21[10] bram.I21[11] " out_port="bram_rtl.WDATA_B2_i[8]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_1_18" input="bram.I01[0] bram.I01[1] bram.I01[2] bram.I01[3] bram.I01[4] bram.I01[5] bram.I01[6] bram.I01[7] bram.I01[8] bram.I01[9] bram.I01[10] bram.I01[11] bram.I31[0] bram.I31[1] bram.I31[2] bram.I31[3] bram.I31[4] bram.I31[5] bram.I31[6] bram.I31[7] bram.I31[8] bram.I31[9] bram.I31[10] bram.I31[11] " output="bram_rtl.WDATA_B1_i[8]" add_const_input="false">
          <delay_constant in_port="bram.I01[0] bram.I01[1] bram.I01[2] bram.I01[3] bram.I01[4] bram.I01[5] bram.I01[6] bram.I01[7] bram.I01[8] bram.I01[9] bram.I01[10] bram.I01[11] bram.I31[0] bram.I31[1] bram.I31[2] bram.I31[3] bram.I31[4] bram.I31[5] bram.I31[6] bram.I31[7] bram.I31[8] bram.I31[9] bram.I31[10] bram.I31[11] " out_port="bram_rtl.WDATA_B1_i[8]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_1_17" input="bram.I11[0] bram.I11[1] bram.I11[2] bram.I11[3] bram.I11[4] bram.I11[5] bram.I11[6] bram.I11[7] bram.I11[8] bram.I11[9] bram.I11[10] bram.I11[11] bram.I21[0] bram.I21[1] bram.I21[2] bram.I21[3] bram.I21[4] bram.I21[5] bram.I21[6] bram.I21[7] bram.I21[8] bram.I21[9] bram.I21[10] bram.I21[11] " output="bram_rtl.WDATA_A2_i[8]" add_const_input="false">
          <delay_constant in_port="bram.I11[0] bram.I11[1] bram.I11[2] bram.I11[3] bram.I11[4] bram.I11[5] bram.I11[6] bram.I11[7] bram.I11[8] bram.I11[9] bram.I11[10] bram.I11[11] bram.I21[0] bram.I21[1] bram.I21[2] bram.I21[3] bram.I21[4] bram.I21[5] bram.I21[6] bram.I21[7] bram.I21[8] bram.I21[9] bram.I21[10] bram.I21[11] " out_port="bram_rtl.WDATA_A2_i[8]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_1_16" input="bram.I01[0] bram.I01[1] bram.I01[2] bram.I01[3] bram.I01[4] bram.I01[5] bram.I01[6] bram.I01[7] bram.I01[8] bram.I01[9] bram.I01[10] bram.I01[11] bram.I31[0] bram.I31[1] bram.I31[2] bram.I31[3] bram.I31[4] bram.I31[5] bram.I31[6] bram.I31[7] bram.I31[8] bram.I31[9] bram.I31[10] bram.I31[11] " output="bram_rtl.WDATA_A1_i[8]" add_const_input="false">
          <delay_constant in_port="bram.I01[0] bram.I01[1] bram.I01[2] bram.I01[3] bram.I01[4] bram.I01[5] bram.I01[6] bram.I01[7] bram.I01[8] bram.I01[9] bram.I01[10] bram.I01[11] bram.I31[0] bram.I31[1] bram.I31[2] bram.I31[3] bram.I31[4] bram.I31[5] bram.I31[6] bram.I31[7] bram.I31[8] bram.I31[9] bram.I31[10] bram.I31[11] " out_port="bram_rtl.WDATA_A1_i[8]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_1_15" input="bram.I11[0] bram.I11[1] bram.I11[2] bram.I11[3] bram.I11[4] bram.I11[5] bram.I11[6] bram.I11[7] bram.I11[8] bram.I11[9] bram.I11[10] bram.I11[11] bram.I31[0] bram.I31[1] bram.I31[2] bram.I31[3] bram.I31[4] bram.I31[5] bram.I31[6] bram.I31[7] bram.I31[8] bram.I31[9] bram.I31[10] bram.I31[11] " output="bram_rtl.ADDR_B2_i[7]" add_const_input="false">
          <delay_constant in_port="bram.I11[0] bram.I11[1] bram.I11[2] bram.I11[3] bram.I11[4] bram.I11[5] bram.I11[6] bram.I11[7] bram.I11[8] bram.I11[9] bram.I11[10] bram.I11[11] bram.I31[0] bram.I31[1] bram.I31[2] bram.I31[3] bram.I31[4] bram.I31[5] bram.I31[6] bram.I31[7] bram.I31[8] bram.I31[9] bram.I31[10] bram.I31[11] " out_port="bram_rtl.ADDR_B2_i[7]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_1_14" input="bram.I01[0] bram.I01[1] bram.I01[2] bram.I01[3] bram.I01[4] bram.I01[5] bram.I01[6] bram.I01[7] bram.I01[8] bram.I01[9] bram.I01[10] bram.I01[11] bram.I21[0] bram.I21[1] bram.I21[2] bram.I21[3] bram.I21[4] bram.I21[5] bram.I21[6] bram.I21[7] bram.I21[8] bram.I21[9] bram.I21[10] bram.I21[11] " output="bram_rtl.ADDR_B1_i[7]" add_const_input="false">
          <delay_constant in_port="bram.I01[0] bram.I01[1] bram.I01[2] bram.I01[3] bram.I01[4] bram.I01[5] bram.I01[6] bram.I01[7] bram.I01[8] bram.I01[9] bram.I01[10] bram.I01[11] bram.I21[0] bram.I21[1] bram.I21[2] bram.I21[3] bram.I21[4] bram.I21[5] bram.I21[6] bram.I21[7] bram.I21[8] bram.I21[9] bram.I21[10] bram.I21[11] " out_port="bram_rtl.ADDR_B1_i[7]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_1_13" input="bram.I11[0] bram.I11[1] bram.I11[2] bram.I11[3] bram.I11[4] bram.I11[5] bram.I11[6] bram.I11[7] bram.I11[8] bram.I11[9] bram.I11[10] bram.I11[11] bram.I21[0] bram.I21[1] bram.I21[2] bram.I21[3] bram.I21[4] bram.I21[5] bram.I21[6] bram.I21[7] bram.I21[8] bram.I21[9] bram.I21[10] bram.I21[11] " output="bram_rtl.ADDR_A2_i[7]" add_const_input="false">
          <delay_constant in_port="bram.I11[0] bram.I11[1] bram.I11[2] bram.I11[3] bram.I11[4] bram.I11[5] bram.I11[6] bram.I11[7] bram.I11[8] bram.I11[9] bram.I11[10] bram.I11[11] bram.I21[0] bram.I21[1] bram.I21[2] bram.I21[3] bram.I21[4] bram.I21[5] bram.I21[6] bram.I21[7] bram.I21[8] bram.I21[9] bram.I21[10] bram.I21[11] " out_port="bram_rtl.ADDR_A2_i[7]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_1_12" input="bram.I01[0] bram.I01[1] bram.I01[2] bram.I01[3] bram.I01[4] bram.I01[5] bram.I01[6] bram.I01[7] bram.I01[8] bram.I01[9] bram.I01[10] bram.I01[11] bram.I31[0] bram.I31[1] bram.I31[2] bram.I31[3] bram.I31[4] bram.I31[5] bram.I31[6] bram.I31[7] bram.I31[8] bram.I31[9] bram.I31[10] bram.I31[11] " output="bram_rtl.ADDR_A1_i[7]" add_const_input="false">
          <delay_constant in_port="bram.I01[0] bram.I01[1] bram.I01[2] bram.I01[3] bram.I01[4] bram.I01[5] bram.I01[6] bram.I01[7] bram.I01[8] bram.I01[9] bram.I01[10] bram.I01[11] bram.I31[0] bram.I31[1] bram.I31[2] bram.I31[3] bram.I31[4] bram.I31[5] bram.I31[6] bram.I31[7] bram.I31[8] bram.I31[9] bram.I31[10] bram.I31[11] " out_port="bram_rtl.ADDR_A1_i[7]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_1_11" input="bram.I11[0] bram.I11[1] bram.I11[2] bram.I11[3] bram.I11[4] bram.I11[5] bram.I11[6] bram.I11[7] bram.I11[8] bram.I11[9] bram.I11[10] bram.I11[11] bram.I21[0] bram.I21[1] bram.I21[2] bram.I21[3] bram.I21[4] bram.I21[5] bram.I21[6] bram.I21[7] bram.I21[8] bram.I21[9] bram.I21[10] bram.I21[11] " output="bram_rtl.WDATA_B2_i[7]" add_const_input="false">
          <delay_constant in_port="bram.I11[0] bram.I11[1] bram.I11[2] bram.I11[3] bram.I11[4] bram.I11[5] bram.I11[6] bram.I11[7] bram.I11[8] bram.I11[9] bram.I11[10] bram.I11[11] bram.I21[0] bram.I21[1] bram.I21[2] bram.I21[3] bram.I21[4] bram.I21[5] bram.I21[6] bram.I21[7] bram.I21[8] bram.I21[9] bram.I21[10] bram.I21[11] " out_port="bram_rtl.WDATA_B2_i[7]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_1_10" input="bram.I01[0] bram.I01[1] bram.I01[2] bram.I01[3] bram.I01[4] bram.I01[5] bram.I01[6] bram.I01[7] bram.I01[8] bram.I01[9] bram.I01[10] bram.I01[11] bram.I31[0] bram.I31[1] bram.I31[2] bram.I31[3] bram.I31[4] bram.I31[5] bram.I31[6] bram.I31[7] bram.I31[8] bram.I31[9] bram.I31[10] bram.I31[11] " output="bram_rtl.WDATA_B1_i[7]" add_const_input="false">
          <delay_constant in_port="bram.I01[0] bram.I01[1] bram.I01[2] bram.I01[3] bram.I01[4] bram.I01[5] bram.I01[6] bram.I01[7] bram.I01[8] bram.I01[9] bram.I01[10] bram.I01[11] bram.I31[0] bram.I31[1] bram.I31[2] bram.I31[3] bram.I31[4] bram.I31[5] bram.I31[6] bram.I31[7] bram.I31[8] bram.I31[9] bram.I31[10] bram.I31[11] " out_port="bram_rtl.WDATA_B1_i[7]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_1_9" input="bram.I11[0] bram.I11[1] bram.I11[2] bram.I11[3] bram.I11[4] bram.I11[5] bram.I11[6] bram.I11[7] bram.I11[8] bram.I11[9] bram.I11[10] bram.I11[11] bram.I31[0] bram.I31[1] bram.I31[2] bram.I31[3] bram.I31[4] bram.I31[5] bram.I31[6] bram.I31[7] bram.I31[8] bram.I31[9] bram.I31[10] bram.I31[11] " output="bram_rtl.WDATA_A2_i[7]" add_const_input="false">
          <delay_constant in_port="bram.I11[0] bram.I11[1] bram.I11[2] bram.I11[3] bram.I11[4] bram.I11[5] bram.I11[6] bram.I11[7] bram.I11[8] bram.I11[9] bram.I11[10] bram.I11[11] bram.I31[0] bram.I31[1] bram.I31[2] bram.I31[3] bram.I31[4] bram.I31[5] bram.I31[6] bram.I31[7] bram.I31[8] bram.I31[9] bram.I31[10] bram.I31[11] " out_port="bram_rtl.WDATA_A2_i[7]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_1_8" input="bram.I01[0] bram.I01[1] bram.I01[2] bram.I01[3] bram.I01[4] bram.I01[5] bram.I01[6] bram.I01[7] bram.I01[8] bram.I01[9] bram.I01[10] bram.I01[11] bram.I21[0] bram.I21[1] bram.I21[2] bram.I21[3] bram.I21[4] bram.I21[5] bram.I21[6] bram.I21[7] bram.I21[8] bram.I21[9] bram.I21[10] bram.I21[11] " output="bram_rtl.WDATA_A1_i[7]" add_const_input="false">
          <delay_constant in_port="bram.I01[0] bram.I01[1] bram.I01[2] bram.I01[3] bram.I01[4] bram.I01[5] bram.I01[6] bram.I01[7] bram.I01[8] bram.I01[9] bram.I01[10] bram.I01[11] bram.I21[0] bram.I21[1] bram.I21[2] bram.I21[3] bram.I21[4] bram.I21[5] bram.I21[6] bram.I21[7] bram.I21[8] bram.I21[9] bram.I21[10] bram.I21[11] " out_port="bram_rtl.WDATA_A1_i[7]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_1_7" input="bram.I11[0] bram.I11[1] bram.I11[2] bram.I11[3] bram.I11[4] bram.I11[5] bram.I11[6] bram.I11[7] bram.I11[8] bram.I11[9] bram.I11[10] bram.I11[11] bram.I21[0] bram.I21[1] bram.I21[2] bram.I21[3] bram.I21[4] bram.I21[5] bram.I21[6] bram.I21[7] bram.I21[8] bram.I21[9] bram.I21[10] bram.I21[11] " output="bram_rtl.ADDR_B2_i[6]" add_const_input="false">
          <delay_constant in_port="bram.I11[0] bram.I11[1] bram.I11[2] bram.I11[3] bram.I11[4] bram.I11[5] bram.I11[6] bram.I11[7] bram.I11[8] bram.I11[9] bram.I11[10] bram.I11[11] bram.I21[0] bram.I21[1] bram.I21[2] bram.I21[3] bram.I21[4] bram.I21[5] bram.I21[6] bram.I21[7] bram.I21[8] bram.I21[9] bram.I21[10] bram.I21[11] " out_port="bram_rtl.ADDR_B2_i[6]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_1_6" input="bram.I01[0] bram.I01[1] bram.I01[2] bram.I01[3] bram.I01[4] bram.I01[5] bram.I01[6] bram.I01[7] bram.I01[8] bram.I01[9] bram.I01[10] bram.I01[11] bram.I31[0] bram.I31[1] bram.I31[2] bram.I31[3] bram.I31[4] bram.I31[5] bram.I31[6] bram.I31[7] bram.I31[8] bram.I31[9] bram.I31[10] bram.I31[11] " output="bram_rtl.ADDR_B1_i[6]" add_const_input="false">
          <delay_constant in_port="bram.I01[0] bram.I01[1] bram.I01[2] bram.I01[3] bram.I01[4] bram.I01[5] bram.I01[6] bram.I01[7] bram.I01[8] bram.I01[9] bram.I01[10] bram.I01[11] bram.I31[0] bram.I31[1] bram.I31[2] bram.I31[3] bram.I31[4] bram.I31[5] bram.I31[6] bram.I31[7] bram.I31[8] bram.I31[9] bram.I31[10] bram.I31[11] " out_port="bram_rtl.ADDR_B1_i[6]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_1_5" input="bram.I11[0] bram.I11[1] bram.I11[2] bram.I11[3] bram.I11[4] bram.I11[5] bram.I11[6] bram.I11[7] bram.I11[8] bram.I11[9] bram.I11[10] bram.I11[11] bram.I21[0] bram.I21[1] bram.I21[2] bram.I21[3] bram.I21[4] bram.I21[5] bram.I21[6] bram.I21[7] bram.I21[8] bram.I21[9] bram.I21[10] bram.I21[11] " output="bram_rtl.ADDR_A2_i[6]" add_const_input="false">
          <delay_constant in_port="bram.I11[0] bram.I11[1] bram.I11[2] bram.I11[3] bram.I11[4] bram.I11[5] bram.I11[6] bram.I11[7] bram.I11[8] bram.I11[9] bram.I11[10] bram.I11[11] bram.I21[0] bram.I21[1] bram.I21[2] bram.I21[3] bram.I21[4] bram.I21[5] bram.I21[6] bram.I21[7] bram.I21[8] bram.I21[9] bram.I21[10] bram.I21[11] " out_port="bram_rtl.ADDR_A2_i[6]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_1_4" input="bram.I01[0] bram.I01[1] bram.I01[2] bram.I01[3] bram.I01[4] bram.I01[5] bram.I01[6] bram.I01[7] bram.I01[8] bram.I01[9] bram.I01[10] bram.I01[11] bram.I31[0] bram.I31[1] bram.I31[2] bram.I31[3] bram.I31[4] bram.I31[5] bram.I31[6] bram.I31[7] bram.I31[8] bram.I31[9] bram.I31[10] bram.I31[11] " output="bram_rtl.ADDR_A1_i[6]" add_const_input="false">
          <delay_constant in_port="bram.I01[0] bram.I01[1] bram.I01[2] bram.I01[3] bram.I01[4] bram.I01[5] bram.I01[6] bram.I01[7] bram.I01[8] bram.I01[9] bram.I01[10] bram.I01[11] bram.I31[0] bram.I31[1] bram.I31[2] bram.I31[3] bram.I31[4] bram.I31[5] bram.I31[6] bram.I31[7] bram.I31[8] bram.I31[9] bram.I31[10] bram.I31[11] " out_port="bram_rtl.ADDR_A1_i[6]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_1_3" input="bram.I11[0] bram.I11[1] bram.I11[2] bram.I11[3] bram.I11[4] bram.I11[5] bram.I11[6] bram.I11[7] bram.I11[8] bram.I11[9] bram.I11[10] bram.I11[11] bram.I31[0] bram.I31[1] bram.I31[2] bram.I31[3] bram.I31[4] bram.I31[5] bram.I31[6] bram.I31[7] bram.I31[8] bram.I31[9] bram.I31[10] bram.I31[11] " output="bram_rtl.WDATA_B2_i[6]" add_const_input="false">
          <delay_constant in_port="bram.I11[0] bram.I11[1] bram.I11[2] bram.I11[3] bram.I11[4] bram.I11[5] bram.I11[6] bram.I11[7] bram.I11[8] bram.I11[9] bram.I11[10] bram.I11[11] bram.I31[0] bram.I31[1] bram.I31[2] bram.I31[3] bram.I31[4] bram.I31[5] bram.I31[6] bram.I31[7] bram.I31[8] bram.I31[9] bram.I31[10] bram.I31[11] " out_port="bram_rtl.WDATA_B2_i[6]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_1_2" input="bram.I01[0] bram.I01[1] bram.I01[2] bram.I01[3] bram.I01[4] bram.I01[5] bram.I01[6] bram.I01[7] bram.I01[8] bram.I01[9] bram.I01[10] bram.I01[11] bram.I21[0] bram.I21[1] bram.I21[2] bram.I21[3] bram.I21[4] bram.I21[5] bram.I21[6] bram.I21[7] bram.I21[8] bram.I21[9] bram.I21[10] bram.I21[11] " output="bram_rtl.WDATA_B1_i[6]" add_const_input="false">
          <delay_constant in_port="bram.I01[0] bram.I01[1] bram.I01[2] bram.I01[3] bram.I01[4] bram.I01[5] bram.I01[6] bram.I01[7] bram.I01[8] bram.I01[9] bram.I01[10] bram.I01[11] bram.I21[0] bram.I21[1] bram.I21[2] bram.I21[3] bram.I21[4] bram.I21[5] bram.I21[6] bram.I21[7] bram.I21[8] bram.I21[9] bram.I21[10] bram.I21[11] " out_port="bram_rtl.WDATA_B1_i[6]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_1_1" input="bram.I11[0] bram.I11[1] bram.I11[2] bram.I11[3] bram.I11[4] bram.I11[5] bram.I11[6] bram.I11[7] bram.I11[8] bram.I11[9] bram.I11[10] bram.I11[11] bram.I21[0] bram.I21[1] bram.I21[2] bram.I21[3] bram.I21[4] bram.I21[5] bram.I21[6] bram.I21[7] bram.I21[8] bram.I21[9] bram.I21[10] bram.I21[11] " output="bram_rtl.WDATA_A2_i[6]" add_const_input="false">
          <delay_constant in_port="bram.I11[0] bram.I11[1] bram.I11[2] bram.I11[3] bram.I11[4] bram.I11[5] bram.I11[6] bram.I11[7] bram.I11[8] bram.I11[9] bram.I11[10] bram.I11[11] bram.I21[0] bram.I21[1] bram.I21[2] bram.I21[3] bram.I21[4] bram.I21[5] bram.I21[6] bram.I21[7] bram.I21[8] bram.I21[9] bram.I21[10] bram.I21[11] " out_port="bram_rtl.WDATA_A2_i[6]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_1_0" input="bram.I01[0] bram.I01[1] bram.I01[2] bram.I01[3] bram.I01[4] bram.I01[5] bram.I01[6] bram.I01[7] bram.I01[8] bram.I01[9] bram.I01[10] bram.I01[11] bram.I31[0] bram.I31[1] bram.I31[2] bram.I31[3] bram.I31[4] bram.I31[5] bram.I31[6] bram.I31[7] bram.I31[8] bram.I31[9] bram.I31[10] bram.I31[11] " output="bram_rtl.WDATA_A1_i[6]" add_const_input="false">
          <delay_constant in_port="bram.I01[0] bram.I01[1] bram.I01[2] bram.I01[3] bram.I01[4] bram.I01[5] bram.I01[6] bram.I01[7] bram.I01[8] bram.I01[9] bram.I01[10] bram.I01[11] bram.I31[0] bram.I31[1] bram.I31[2] bram.I31[3] bram.I31[4] bram.I31[5] bram.I31[6] bram.I31[7] bram.I31[8] bram.I31[9] bram.I31[10] bram.I31[11] " out_port="bram_rtl.WDATA_A1_i[6]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_47" input="bram.I10[0] bram.I10[1] bram.I10[2] bram.I10[3] bram.I10[4] bram.I10[5] bram.I10[6] bram.I10[7] bram.I10[8] bram.I10[9] bram.I10[10] bram.I10[11] bram.I20[0] bram.I20[1] bram.I20[2] bram.I20[3] bram.I20[4] bram.I20[5] bram.I20[6] bram.I20[7] bram.I20[8] bram.I20[9] bram.I20[10] bram.I20[11] " output="bram_rtl.ADDR_B2_i[5]" add_const_input="false">
          <delay_constant in_port="bram.I10[0] bram.I10[1] bram.I10[2] bram.I10[3] bram.I10[4] bram.I10[5] bram.I10[6] bram.I10[7] bram.I10[8] bram.I10[9] bram.I10[10] bram.I10[11] bram.I20[0] bram.I20[1] bram.I20[2] bram.I20[3] bram.I20[4] bram.I20[5] bram.I20[6] bram.I20[7] bram.I20[8] bram.I20[9] bram.I20[10] bram.I20[11] " out_port="bram_rtl.ADDR_B2_i[5]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_46" input="bram.I00[0] bram.I00[1] bram.I00[2] bram.I00[3] bram.I00[4] bram.I00[5] bram.I00[6] bram.I00[7] bram.I00[8] bram.I00[9] bram.I00[10] bram.I00[11] bram.I30[0] bram.I30[1] bram.I30[2] bram.I30[3] bram.I30[4] bram.I30[5] bram.I30[6] bram.I30[7] bram.I30[8] bram.I30[9] bram.I30[10] bram.I30[11] " output="bram_rtl.ADDR_B1_i[5]" add_const_input="false">
          <delay_constant in_port="bram.I00[0] bram.I00[1] bram.I00[2] bram.I00[3] bram.I00[4] bram.I00[5] bram.I00[6] bram.I00[7] bram.I00[8] bram.I00[9] bram.I00[10] bram.I00[11] bram.I30[0] bram.I30[1] bram.I30[2] bram.I30[3] bram.I30[4] bram.I30[5] bram.I30[6] bram.I30[7] bram.I30[8] bram.I30[9] bram.I30[10] bram.I30[11] " out_port="bram_rtl.ADDR_B1_i[5]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_45" input="bram.I10[0] bram.I10[1] bram.I10[2] bram.I10[3] bram.I10[4] bram.I10[5] bram.I10[6] bram.I10[7] bram.I10[8] bram.I10[9] bram.I10[10] bram.I10[11] bram.I30[0] bram.I30[1] bram.I30[2] bram.I30[3] bram.I30[4] bram.I30[5] bram.I30[6] bram.I30[7] bram.I30[8] bram.I30[9] bram.I30[10] bram.I30[11] " output="bram_rtl.ADDR_A2_i[5]" add_const_input="false">
          <delay_constant in_port="bram.I10[0] bram.I10[1] bram.I10[2] bram.I10[3] bram.I10[4] bram.I10[5] bram.I10[6] bram.I10[7] bram.I10[8] bram.I10[9] bram.I10[10] bram.I10[11] bram.I30[0] bram.I30[1] bram.I30[2] bram.I30[3] bram.I30[4] bram.I30[5] bram.I30[6] bram.I30[7] bram.I30[8] bram.I30[9] bram.I30[10] bram.I30[11] " out_port="bram_rtl.ADDR_A2_i[5]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_44" input="bram.I00[0] bram.I00[1] bram.I00[2] bram.I00[3] bram.I00[4] bram.I00[5] bram.I00[6] bram.I00[7] bram.I00[8] bram.I00[9] bram.I00[10] bram.I00[11] bram.I20[0] bram.I20[1] bram.I20[2] bram.I20[3] bram.I20[4] bram.I20[5] bram.I20[6] bram.I20[7] bram.I20[8] bram.I20[9] bram.I20[10] bram.I20[11] " output="bram_rtl.ADDR_A1_i[5]" add_const_input="false">
          <delay_constant in_port="bram.I00[0] bram.I00[1] bram.I00[2] bram.I00[3] bram.I00[4] bram.I00[5] bram.I00[6] bram.I00[7] bram.I00[8] bram.I00[9] bram.I00[10] bram.I00[11] bram.I20[0] bram.I20[1] bram.I20[2] bram.I20[3] bram.I20[4] bram.I20[5] bram.I20[6] bram.I20[7] bram.I20[8] bram.I20[9] bram.I20[10] bram.I20[11] " out_port="bram_rtl.ADDR_A1_i[5]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_43" input="bram.I10[0] bram.I10[1] bram.I10[2] bram.I10[3] bram.I10[4] bram.I10[5] bram.I10[6] bram.I10[7] bram.I10[8] bram.I10[9] bram.I10[10] bram.I10[11] bram.I20[0] bram.I20[1] bram.I20[2] bram.I20[3] bram.I20[4] bram.I20[5] bram.I20[6] bram.I20[7] bram.I20[8] bram.I20[9] bram.I20[10] bram.I20[11] " output="bram_rtl.WDATA_B2_i[5]" add_const_input="false">
          <delay_constant in_port="bram.I10[0] bram.I10[1] bram.I10[2] bram.I10[3] bram.I10[4] bram.I10[5] bram.I10[6] bram.I10[7] bram.I10[8] bram.I10[9] bram.I10[10] bram.I10[11] bram.I20[0] bram.I20[1] bram.I20[2] bram.I20[3] bram.I20[4] bram.I20[5] bram.I20[6] bram.I20[7] bram.I20[8] bram.I20[9] bram.I20[10] bram.I20[11] " out_port="bram_rtl.WDATA_B2_i[5]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_42" input="bram.I00[0] bram.I00[1] bram.I00[2] bram.I00[3] bram.I00[4] bram.I00[5] bram.I00[6] bram.I00[7] bram.I00[8] bram.I00[9] bram.I00[10] bram.I00[11] bram.I30[0] bram.I30[1] bram.I30[2] bram.I30[3] bram.I30[4] bram.I30[5] bram.I30[6] bram.I30[7] bram.I30[8] bram.I30[9] bram.I30[10] bram.I30[11] " output="bram_rtl.WDATA_B1_i[5]" add_const_input="false">
          <delay_constant in_port="bram.I00[0] bram.I00[1] bram.I00[2] bram.I00[3] bram.I00[4] bram.I00[5] bram.I00[6] bram.I00[7] bram.I00[8] bram.I00[9] bram.I00[10] bram.I00[11] bram.I30[0] bram.I30[1] bram.I30[2] bram.I30[3] bram.I30[4] bram.I30[5] bram.I30[6] bram.I30[7] bram.I30[8] bram.I30[9] bram.I30[10] bram.I30[11] " out_port="bram_rtl.WDATA_B1_i[5]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_41" input="bram.I10[0] bram.I10[1] bram.I10[2] bram.I10[3] bram.I10[4] bram.I10[5] bram.I10[6] bram.I10[7] bram.I10[8] bram.I10[9] bram.I10[10] bram.I10[11] bram.I20[0] bram.I20[1] bram.I20[2] bram.I20[3] bram.I20[4] bram.I20[5] bram.I20[6] bram.I20[7] bram.I20[8] bram.I20[9] bram.I20[10] bram.I20[11] " output="bram_rtl.WDATA_A2_i[5]" add_const_input="false">
          <delay_constant in_port="bram.I10[0] bram.I10[1] bram.I10[2] bram.I10[3] bram.I10[4] bram.I10[5] bram.I10[6] bram.I10[7] bram.I10[8] bram.I10[9] bram.I10[10] bram.I10[11] bram.I20[0] bram.I20[1] bram.I20[2] bram.I20[3] bram.I20[4] bram.I20[5] bram.I20[6] bram.I20[7] bram.I20[8] bram.I20[9] bram.I20[10] bram.I20[11] " out_port="bram_rtl.WDATA_A2_i[5]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_40" input="bram.I00[0] bram.I00[1] bram.I00[2] bram.I00[3] bram.I00[4] bram.I00[5] bram.I00[6] bram.I00[7] bram.I00[8] bram.I00[9] bram.I00[10] bram.I00[11] bram.I30[0] bram.I30[1] bram.I30[2] bram.I30[3] bram.I30[4] bram.I30[5] bram.I30[6] bram.I30[7] bram.I30[8] bram.I30[9] bram.I30[10] bram.I30[11] " output="bram_rtl.WDATA_A1_i[5]" add_const_input="false">
          <delay_constant in_port="bram.I00[0] bram.I00[1] bram.I00[2] bram.I00[3] bram.I00[4] bram.I00[5] bram.I00[6] bram.I00[7] bram.I00[8] bram.I00[9] bram.I00[10] bram.I00[11] bram.I30[0] bram.I30[1] bram.I30[2] bram.I30[3] bram.I30[4] bram.I30[5] bram.I30[6] bram.I30[7] bram.I30[8] bram.I30[9] bram.I30[10] bram.I30[11] " out_port="bram_rtl.WDATA_A1_i[5]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_39" input="bram.I10[0] bram.I10[1] bram.I10[2] bram.I10[3] bram.I10[4] bram.I10[5] bram.I10[6] bram.I10[7] bram.I10[8] bram.I10[9] bram.I10[10] bram.I10[11] bram.I30[0] bram.I30[1] bram.I30[2] bram.I30[3] bram.I30[4] bram.I30[5] bram.I30[6] bram.I30[7] bram.I30[8] bram.I30[9] bram.I30[10] bram.I30[11] " output="bram_rtl.ADDR_B2_i[4]" add_const_input="false">
          <delay_constant in_port="bram.I10[0] bram.I10[1] bram.I10[2] bram.I10[3] bram.I10[4] bram.I10[5] bram.I10[6] bram.I10[7] bram.I10[8] bram.I10[9] bram.I10[10] bram.I10[11] bram.I30[0] bram.I30[1] bram.I30[2] bram.I30[3] bram.I30[4] bram.I30[5] bram.I30[6] bram.I30[7] bram.I30[8] bram.I30[9] bram.I30[10] bram.I30[11] " out_port="bram_rtl.ADDR_B2_i[4]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_38" input="bram.I00[0] bram.I00[1] bram.I00[2] bram.I00[3] bram.I00[4] bram.I00[5] bram.I00[6] bram.I00[7] bram.I00[8] bram.I00[9] bram.I00[10] bram.I00[11] bram.I20[0] bram.I20[1] bram.I20[2] bram.I20[3] bram.I20[4] bram.I20[5] bram.I20[6] bram.I20[7] bram.I20[8] bram.I20[9] bram.I20[10] bram.I20[11] " output="bram_rtl.ADDR_B1_i[4]" add_const_input="false">
          <delay_constant in_port="bram.I00[0] bram.I00[1] bram.I00[2] bram.I00[3] bram.I00[4] bram.I00[5] bram.I00[6] bram.I00[7] bram.I00[8] bram.I00[9] bram.I00[10] bram.I00[11] bram.I20[0] bram.I20[1] bram.I20[2] bram.I20[3] bram.I20[4] bram.I20[5] bram.I20[6] bram.I20[7] bram.I20[8] bram.I20[9] bram.I20[10] bram.I20[11] " out_port="bram_rtl.ADDR_B1_i[4]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_37" input="bram.I10[0] bram.I10[1] bram.I10[2] bram.I10[3] bram.I10[4] bram.I10[5] bram.I10[6] bram.I10[7] bram.I10[8] bram.I10[9] bram.I10[10] bram.I10[11] bram.I20[0] bram.I20[1] bram.I20[2] bram.I20[3] bram.I20[4] bram.I20[5] bram.I20[6] bram.I20[7] bram.I20[8] bram.I20[9] bram.I20[10] bram.I20[11] " output="bram_rtl.ADDR_A2_i[4]" add_const_input="false">
          <delay_constant in_port="bram.I10[0] bram.I10[1] bram.I10[2] bram.I10[3] bram.I10[4] bram.I10[5] bram.I10[6] bram.I10[7] bram.I10[8] bram.I10[9] bram.I10[10] bram.I10[11] bram.I20[0] bram.I20[1] bram.I20[2] bram.I20[3] bram.I20[4] bram.I20[5] bram.I20[6] bram.I20[7] bram.I20[8] bram.I20[9] bram.I20[10] bram.I20[11] " out_port="bram_rtl.ADDR_A2_i[4]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_36" input="bram.I00[0] bram.I00[1] bram.I00[2] bram.I00[3] bram.I00[4] bram.I00[5] bram.I00[6] bram.I00[7] bram.I00[8] bram.I00[9] bram.I00[10] bram.I00[11] bram.I30[0] bram.I30[1] bram.I30[2] bram.I30[3] bram.I30[4] bram.I30[5] bram.I30[6] bram.I30[7] bram.I30[8] bram.I30[9] bram.I30[10] bram.I30[11] " output="bram_rtl.ADDR_A1_i[4]" add_const_input="false">
          <delay_constant in_port="bram.I00[0] bram.I00[1] bram.I00[2] bram.I00[3] bram.I00[4] bram.I00[5] bram.I00[6] bram.I00[7] bram.I00[8] bram.I00[9] bram.I00[10] bram.I00[11] bram.I30[0] bram.I30[1] bram.I30[2] bram.I30[3] bram.I30[4] bram.I30[5] bram.I30[6] bram.I30[7] bram.I30[8] bram.I30[9] bram.I30[10] bram.I30[11] " out_port="bram_rtl.ADDR_A1_i[4]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_35" input="bram.I10[0] bram.I10[1] bram.I10[2] bram.I10[3] bram.I10[4] bram.I10[5] bram.I10[6] bram.I10[7] bram.I10[8] bram.I10[9] bram.I10[10] bram.I10[11] bram.I20[0] bram.I20[1] bram.I20[2] bram.I20[3] bram.I20[4] bram.I20[5] bram.I20[6] bram.I20[7] bram.I20[8] bram.I20[9] bram.I20[10] bram.I20[11] " output="bram_rtl.WDATA_B2_i[4]" add_const_input="false">
          <delay_constant in_port="bram.I10[0] bram.I10[1] bram.I10[2] bram.I10[3] bram.I10[4] bram.I10[5] bram.I10[6] bram.I10[7] bram.I10[8] bram.I10[9] bram.I10[10] bram.I10[11] bram.I20[0] bram.I20[1] bram.I20[2] bram.I20[3] bram.I20[4] bram.I20[5] bram.I20[6] bram.I20[7] bram.I20[8] bram.I20[9] bram.I20[10] bram.I20[11] " out_port="bram_rtl.WDATA_B2_i[4]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_34" input="bram.I00[0] bram.I00[1] bram.I00[2] bram.I00[3] bram.I00[4] bram.I00[5] bram.I00[6] bram.I00[7] bram.I00[8] bram.I00[9] bram.I00[10] bram.I00[11] bram.I30[0] bram.I30[1] bram.I30[2] bram.I30[3] bram.I30[4] bram.I30[5] bram.I30[6] bram.I30[7] bram.I30[8] bram.I30[9] bram.I30[10] bram.I30[11] " output="bram_rtl.WDATA_B1_i[4]" add_const_input="false">
          <delay_constant in_port="bram.I00[0] bram.I00[1] bram.I00[2] bram.I00[3] bram.I00[4] bram.I00[5] bram.I00[6] bram.I00[7] bram.I00[8] bram.I00[9] bram.I00[10] bram.I00[11] bram.I30[0] bram.I30[1] bram.I30[2] bram.I30[3] bram.I30[4] bram.I30[5] bram.I30[6] bram.I30[7] bram.I30[8] bram.I30[9] bram.I30[10] bram.I30[11] " out_port="bram_rtl.WDATA_B1_i[4]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_33" input="bram.I10[0] bram.I10[1] bram.I10[2] bram.I10[3] bram.I10[4] bram.I10[5] bram.I10[6] bram.I10[7] bram.I10[8] bram.I10[9] bram.I10[10] bram.I10[11] bram.I30[0] bram.I30[1] bram.I30[2] bram.I30[3] bram.I30[4] bram.I30[5] bram.I30[6] bram.I30[7] bram.I30[8] bram.I30[9] bram.I30[10] bram.I30[11] " output="bram_rtl.WDATA_A2_i[4]" add_const_input="false">
          <delay_constant in_port="bram.I10[0] bram.I10[1] bram.I10[2] bram.I10[3] bram.I10[4] bram.I10[5] bram.I10[6] bram.I10[7] bram.I10[8] bram.I10[9] bram.I10[10] bram.I10[11] bram.I30[0] bram.I30[1] bram.I30[2] bram.I30[3] bram.I30[4] bram.I30[5] bram.I30[6] bram.I30[7] bram.I30[8] bram.I30[9] bram.I30[10] bram.I30[11] " out_port="bram_rtl.WDATA_A2_i[4]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_32" input="bram.I00[0] bram.I00[1] bram.I00[2] bram.I00[3] bram.I00[4] bram.I00[5] bram.I00[6] bram.I00[7] bram.I00[8] bram.I00[9] bram.I00[10] bram.I00[11] bram.I20[0] bram.I20[1] bram.I20[2] bram.I20[3] bram.I20[4] bram.I20[5] bram.I20[6] bram.I20[7] bram.I20[8] bram.I20[9] bram.I20[10] bram.I20[11] " output="bram_rtl.WDATA_A1_i[4]" add_const_input="false">
          <delay_constant in_port="bram.I00[0] bram.I00[1] bram.I00[2] bram.I00[3] bram.I00[4] bram.I00[5] bram.I00[6] bram.I00[7] bram.I00[8] bram.I00[9] bram.I00[10] bram.I00[11] bram.I20[0] bram.I20[1] bram.I20[2] bram.I20[3] bram.I20[4] bram.I20[5] bram.I20[6] bram.I20[7] bram.I20[8] bram.I20[9] bram.I20[10] bram.I20[11] " out_port="bram_rtl.WDATA_A1_i[4]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_31" input="bram.I10[0] bram.I10[1] bram.I10[2] bram.I10[3] bram.I10[4] bram.I10[5] bram.I10[6] bram.I10[7] bram.I10[8] bram.I10[9] bram.I10[10] bram.I10[11] bram.I20[0] bram.I20[1] bram.I20[2] bram.I20[3] bram.I20[4] bram.I20[5] bram.I20[6] bram.I20[7] bram.I20[8] bram.I20[9] bram.I20[10] bram.I20[11] " output="bram_rtl.ADDR_B2_i[3]" add_const_input="false">
          <delay_constant in_port="bram.I10[0] bram.I10[1] bram.I10[2] bram.I10[3] bram.I10[4] bram.I10[5] bram.I10[6] bram.I10[7] bram.I10[8] bram.I10[9] bram.I10[10] bram.I10[11] bram.I20[0] bram.I20[1] bram.I20[2] bram.I20[3] bram.I20[4] bram.I20[5] bram.I20[6] bram.I20[7] bram.I20[8] bram.I20[9] bram.I20[10] bram.I20[11] " out_port="bram_rtl.ADDR_B2_i[3]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_30" input="bram.I00[0] bram.I00[1] bram.I00[2] bram.I00[3] bram.I00[4] bram.I00[5] bram.I00[6] bram.I00[7] bram.I00[8] bram.I00[9] bram.I00[10] bram.I00[11] bram.I30[0] bram.I30[1] bram.I30[2] bram.I30[3] bram.I30[4] bram.I30[5] bram.I30[6] bram.I30[7] bram.I30[8] bram.I30[9] bram.I30[10] bram.I30[11] " output="bram_rtl.ADDR_B1_i[3]" add_const_input="false">
          <delay_constant in_port="bram.I00[0] bram.I00[1] bram.I00[2] bram.I00[3] bram.I00[4] bram.I00[5] bram.I00[6] bram.I00[7] bram.I00[8] bram.I00[9] bram.I00[10] bram.I00[11] bram.I30[0] bram.I30[1] bram.I30[2] bram.I30[3] bram.I30[4] bram.I30[5] bram.I30[6] bram.I30[7] bram.I30[8] bram.I30[9] bram.I30[10] bram.I30[11] " out_port="bram_rtl.ADDR_B1_i[3]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_29" input="bram.I10[0] bram.I10[1] bram.I10[2] bram.I10[3] bram.I10[4] bram.I10[5] bram.I10[6] bram.I10[7] bram.I10[8] bram.I10[9] bram.I10[10] bram.I10[11] bram.I20[0] bram.I20[1] bram.I20[2] bram.I20[3] bram.I20[4] bram.I20[5] bram.I20[6] bram.I20[7] bram.I20[8] bram.I20[9] bram.I20[10] bram.I20[11] " output="bram_rtl.ADDR_A2_i[3]" add_const_input="false">
          <delay_constant in_port="bram.I10[0] bram.I10[1] bram.I10[2] bram.I10[3] bram.I10[4] bram.I10[5] bram.I10[6] bram.I10[7] bram.I10[8] bram.I10[9] bram.I10[10] bram.I10[11] bram.I20[0] bram.I20[1] bram.I20[2] bram.I20[3] bram.I20[4] bram.I20[5] bram.I20[6] bram.I20[7] bram.I20[8] bram.I20[9] bram.I20[10] bram.I20[11] " out_port="bram_rtl.ADDR_A2_i[3]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_28" input="bram.I00[0] bram.I00[1] bram.I00[2] bram.I00[3] bram.I00[4] bram.I00[5] bram.I00[6] bram.I00[7] bram.I00[8] bram.I00[9] bram.I00[10] bram.I00[11] bram.I30[0] bram.I30[1] bram.I30[2] bram.I30[3] bram.I30[4] bram.I30[5] bram.I30[6] bram.I30[7] bram.I30[8] bram.I30[9] bram.I30[10] bram.I30[11] " output="bram_rtl.ADDR_A1_i[3]" add_const_input="false">
          <delay_constant in_port="bram.I00[0] bram.I00[1] bram.I00[2] bram.I00[3] bram.I00[4] bram.I00[5] bram.I00[6] bram.I00[7] bram.I00[8] bram.I00[9] bram.I00[10] bram.I00[11] bram.I30[0] bram.I30[1] bram.I30[2] bram.I30[3] bram.I30[4] bram.I30[5] bram.I30[6] bram.I30[7] bram.I30[8] bram.I30[9] bram.I30[10] bram.I30[11] " out_port="bram_rtl.ADDR_A1_i[3]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_27" input="bram.I10[0] bram.I10[1] bram.I10[2] bram.I10[3] bram.I10[4] bram.I10[5] bram.I10[6] bram.I10[7] bram.I10[8] bram.I10[9] bram.I10[10] bram.I10[11] bram.I30[0] bram.I30[1] bram.I30[2] bram.I30[3] bram.I30[4] bram.I30[5] bram.I30[6] bram.I30[7] bram.I30[8] bram.I30[9] bram.I30[10] bram.I30[11] " output="bram_rtl.WDATA_B2_i[3]" add_const_input="false">
          <delay_constant in_port="bram.I10[0] bram.I10[1] bram.I10[2] bram.I10[3] bram.I10[4] bram.I10[5] bram.I10[6] bram.I10[7] bram.I10[8] bram.I10[9] bram.I10[10] bram.I10[11] bram.I30[0] bram.I30[1] bram.I30[2] bram.I30[3] bram.I30[4] bram.I30[5] bram.I30[6] bram.I30[7] bram.I30[8] bram.I30[9] bram.I30[10] bram.I30[11] " out_port="bram_rtl.WDATA_B2_i[3]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_26" input="bram.I00[0] bram.I00[1] bram.I00[2] bram.I00[3] bram.I00[4] bram.I00[5] bram.I00[6] bram.I00[7] bram.I00[8] bram.I00[9] bram.I00[10] bram.I00[11] bram.I20[0] bram.I20[1] bram.I20[2] bram.I20[3] bram.I20[4] bram.I20[5] bram.I20[6] bram.I20[7] bram.I20[8] bram.I20[9] bram.I20[10] bram.I20[11] " output="bram_rtl.WDATA_B1_i[3]" add_const_input="false">
          <delay_constant in_port="bram.I00[0] bram.I00[1] bram.I00[2] bram.I00[3] bram.I00[4] bram.I00[5] bram.I00[6] bram.I00[7] bram.I00[8] bram.I00[9] bram.I00[10] bram.I00[11] bram.I20[0] bram.I20[1] bram.I20[2] bram.I20[3] bram.I20[4] bram.I20[5] bram.I20[6] bram.I20[7] bram.I20[8] bram.I20[9] bram.I20[10] bram.I20[11] " out_port="bram_rtl.WDATA_B1_i[3]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_25" input="bram.I10[0] bram.I10[1] bram.I10[2] bram.I10[3] bram.I10[4] bram.I10[5] bram.I10[6] bram.I10[7] bram.I10[8] bram.I10[9] bram.I10[10] bram.I10[11] bram.I20[0] bram.I20[1] bram.I20[2] bram.I20[3] bram.I20[4] bram.I20[5] bram.I20[6] bram.I20[7] bram.I20[8] bram.I20[9] bram.I20[10] bram.I20[11] " output="bram_rtl.WDATA_A2_i[3]" add_const_input="false">
          <delay_constant in_port="bram.I10[0] bram.I10[1] bram.I10[2] bram.I10[3] bram.I10[4] bram.I10[5] bram.I10[6] bram.I10[7] bram.I10[8] bram.I10[9] bram.I10[10] bram.I10[11] bram.I20[0] bram.I20[1] bram.I20[2] bram.I20[3] bram.I20[4] bram.I20[5] bram.I20[6] bram.I20[7] bram.I20[8] bram.I20[9] bram.I20[10] bram.I20[11] " out_port="bram_rtl.WDATA_A2_i[3]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_24" input="bram.I00[0] bram.I00[1] bram.I00[2] bram.I00[3] bram.I00[4] bram.I00[5] bram.I00[6] bram.I00[7] bram.I00[8] bram.I00[9] bram.I00[10] bram.I00[11] bram.I30[0] bram.I30[1] bram.I30[2] bram.I30[3] bram.I30[4] bram.I30[5] bram.I30[6] bram.I30[7] bram.I30[8] bram.I30[9] bram.I30[10] bram.I30[11] " output="bram_rtl.WDATA_A1_i[3]" add_const_input="false">
          <delay_constant in_port="bram.I00[0] bram.I00[1] bram.I00[2] bram.I00[3] bram.I00[4] bram.I00[5] bram.I00[6] bram.I00[7] bram.I00[8] bram.I00[9] bram.I00[10] bram.I00[11] bram.I30[0] bram.I30[1] bram.I30[2] bram.I30[3] bram.I30[4] bram.I30[5] bram.I30[6] bram.I30[7] bram.I30[8] bram.I30[9] bram.I30[10] bram.I30[11] " out_port="bram_rtl.WDATA_A1_i[3]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_23" input="bram.I10[0] bram.I10[1] bram.I10[2] bram.I10[3] bram.I10[4] bram.I10[5] bram.I10[6] bram.I10[7] bram.I10[8] bram.I10[9] bram.I10[10] bram.I10[11] bram.I20[0] bram.I20[1] bram.I20[2] bram.I20[3] bram.I20[4] bram.I20[5] bram.I20[6] bram.I20[7] bram.I20[8] bram.I20[9] bram.I20[10] bram.I20[11] " output="bram_rtl.ADDR_B2_i[2]" add_const_input="false">
          <delay_constant in_port="bram.I10[0] bram.I10[1] bram.I10[2] bram.I10[3] bram.I10[4] bram.I10[5] bram.I10[6] bram.I10[7] bram.I10[8] bram.I10[9] bram.I10[10] bram.I10[11] bram.I20[0] bram.I20[1] bram.I20[2] bram.I20[3] bram.I20[4] bram.I20[5] bram.I20[6] bram.I20[7] bram.I20[8] bram.I20[9] bram.I20[10] bram.I20[11] " out_port="bram_rtl.ADDR_B2_i[2]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_22" input="bram.I00[0] bram.I00[1] bram.I00[2] bram.I00[3] bram.I00[4] bram.I00[5] bram.I00[6] bram.I00[7] bram.I00[8] bram.I00[9] bram.I00[10] bram.I00[11] bram.I30[0] bram.I30[1] bram.I30[2] bram.I30[3] bram.I30[4] bram.I30[5] bram.I30[6] bram.I30[7] bram.I30[8] bram.I30[9] bram.I30[10] bram.I30[11] " output="bram_rtl.ADDR_B1_i[2]" add_const_input="false">
          <delay_constant in_port="bram.I00[0] bram.I00[1] bram.I00[2] bram.I00[3] bram.I00[4] bram.I00[5] bram.I00[6] bram.I00[7] bram.I00[8] bram.I00[9] bram.I00[10] bram.I00[11] bram.I30[0] bram.I30[1] bram.I30[2] bram.I30[3] bram.I30[4] bram.I30[5] bram.I30[6] bram.I30[7] bram.I30[8] bram.I30[9] bram.I30[10] bram.I30[11] " out_port="bram_rtl.ADDR_B1_i[2]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_21" input="bram.I10[0] bram.I10[1] bram.I10[2] bram.I10[3] bram.I10[4] bram.I10[5] bram.I10[6] bram.I10[7] bram.I10[8] bram.I10[9] bram.I10[10] bram.I10[11] bram.I30[0] bram.I30[1] bram.I30[2] bram.I30[3] bram.I30[4] bram.I30[5] bram.I30[6] bram.I30[7] bram.I30[8] bram.I30[9] bram.I30[10] bram.I30[11] " output="bram_rtl.ADDR_A2_i[2]" add_const_input="false">
          <delay_constant in_port="bram.I10[0] bram.I10[1] bram.I10[2] bram.I10[3] bram.I10[4] bram.I10[5] bram.I10[6] bram.I10[7] bram.I10[8] bram.I10[9] bram.I10[10] bram.I10[11] bram.I30[0] bram.I30[1] bram.I30[2] bram.I30[3] bram.I30[4] bram.I30[5] bram.I30[6] bram.I30[7] bram.I30[8] bram.I30[9] bram.I30[10] bram.I30[11] " out_port="bram_rtl.ADDR_A2_i[2]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_20" input="bram.I00[0] bram.I00[1] bram.I00[2] bram.I00[3] bram.I00[4] bram.I00[5] bram.I00[6] bram.I00[7] bram.I00[8] bram.I00[9] bram.I00[10] bram.I00[11] bram.I20[0] bram.I20[1] bram.I20[2] bram.I20[3] bram.I20[4] bram.I20[5] bram.I20[6] bram.I20[7] bram.I20[8] bram.I20[9] bram.I20[10] bram.I20[11] " output="bram_rtl.ADDR_A1_i[2]" add_const_input="false">
          <delay_constant in_port="bram.I00[0] bram.I00[1] bram.I00[2] bram.I00[3] bram.I00[4] bram.I00[5] bram.I00[6] bram.I00[7] bram.I00[8] bram.I00[9] bram.I00[10] bram.I00[11] bram.I20[0] bram.I20[1] bram.I20[2] bram.I20[3] bram.I20[4] bram.I20[5] bram.I20[6] bram.I20[7] bram.I20[8] bram.I20[9] bram.I20[10] bram.I20[11] " out_port="bram_rtl.ADDR_A1_i[2]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_19" input="bram.I10[0] bram.I10[1] bram.I10[2] bram.I10[3] bram.I10[4] bram.I10[5] bram.I10[6] bram.I10[7] bram.I10[8] bram.I10[9] bram.I10[10] bram.I10[11] bram.I20[0] bram.I20[1] bram.I20[2] bram.I20[3] bram.I20[4] bram.I20[5] bram.I20[6] bram.I20[7] bram.I20[8] bram.I20[9] bram.I20[10] bram.I20[11] " output="bram_rtl.WDATA_B2_i[2]" add_const_input="false">
          <delay_constant in_port="bram.I10[0] bram.I10[1] bram.I10[2] bram.I10[3] bram.I10[4] bram.I10[5] bram.I10[6] bram.I10[7] bram.I10[8] bram.I10[9] bram.I10[10] bram.I10[11] bram.I20[0] bram.I20[1] bram.I20[2] bram.I20[3] bram.I20[4] bram.I20[5] bram.I20[6] bram.I20[7] bram.I20[8] bram.I20[9] bram.I20[10] bram.I20[11] " out_port="bram_rtl.WDATA_B2_i[2]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_18" input="bram.I00[0] bram.I00[1] bram.I00[2] bram.I00[3] bram.I00[4] bram.I00[5] bram.I00[6] bram.I00[7] bram.I00[8] bram.I00[9] bram.I00[10] bram.I00[11] bram.I30[0] bram.I30[1] bram.I30[2] bram.I30[3] bram.I30[4] bram.I30[5] bram.I30[6] bram.I30[7] bram.I30[8] bram.I30[9] bram.I30[10] bram.I30[11] " output="bram_rtl.WDATA_B1_i[2]" add_const_input="false">
          <delay_constant in_port="bram.I00[0] bram.I00[1] bram.I00[2] bram.I00[3] bram.I00[4] bram.I00[5] bram.I00[6] bram.I00[7] bram.I00[8] bram.I00[9] bram.I00[10] bram.I00[11] bram.I30[0] bram.I30[1] bram.I30[2] bram.I30[3] bram.I30[4] bram.I30[5] bram.I30[6] bram.I30[7] bram.I30[8] bram.I30[9] bram.I30[10] bram.I30[11] " out_port="bram_rtl.WDATA_B1_i[2]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_17" input="bram.I10[0] bram.I10[1] bram.I10[2] bram.I10[3] bram.I10[4] bram.I10[5] bram.I10[6] bram.I10[7] bram.I10[8] bram.I10[9] bram.I10[10] bram.I10[11] bram.I20[0] bram.I20[1] bram.I20[2] bram.I20[3] bram.I20[4] bram.I20[5] bram.I20[6] bram.I20[7] bram.I20[8] bram.I20[9] bram.I20[10] bram.I20[11] " output="bram_rtl.WDATA_A2_i[2]" add_const_input="false">
          <delay_constant in_port="bram.I10[0] bram.I10[1] bram.I10[2] bram.I10[3] bram.I10[4] bram.I10[5] bram.I10[6] bram.I10[7] bram.I10[8] bram.I10[9] bram.I10[10] bram.I10[11] bram.I20[0] bram.I20[1] bram.I20[2] bram.I20[3] bram.I20[4] bram.I20[5] bram.I20[6] bram.I20[7] bram.I20[8] bram.I20[9] bram.I20[10] bram.I20[11] " out_port="bram_rtl.WDATA_A2_i[2]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_16" input="bram.I00[0] bram.I00[1] bram.I00[2] bram.I00[3] bram.I00[4] bram.I00[5] bram.I00[6] bram.I00[7] bram.I00[8] bram.I00[9] bram.I00[10] bram.I00[11] bram.I30[0] bram.I30[1] bram.I30[2] bram.I30[3] bram.I30[4] bram.I30[5] bram.I30[6] bram.I30[7] bram.I30[8] bram.I30[9] bram.I30[10] bram.I30[11] " output="bram_rtl.WDATA_A1_i[2]" add_const_input="false">
          <delay_constant in_port="bram.I00[0] bram.I00[1] bram.I00[2] bram.I00[3] bram.I00[4] bram.I00[5] bram.I00[6] bram.I00[7] bram.I00[8] bram.I00[9] bram.I00[10] bram.I00[11] bram.I30[0] bram.I30[1] bram.I30[2] bram.I30[3] bram.I30[4] bram.I30[5] bram.I30[6] bram.I30[7] bram.I30[8] bram.I30[9] bram.I30[10] bram.I30[11] " out_port="bram_rtl.WDATA_A1_i[2]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_15" input="bram.I10[0] bram.I10[1] bram.I10[2] bram.I10[3] bram.I10[4] bram.I10[5] bram.I10[6] bram.I10[7] bram.I10[8] bram.I10[9] bram.I10[10] bram.I10[11] bram.I30[0] bram.I30[1] bram.I30[2] bram.I30[3] bram.I30[4] bram.I30[5] bram.I30[6] bram.I30[7] bram.I30[8] bram.I30[9] bram.I30[10] bram.I30[11] " output="bram_rtl.ADDR_B2_i[1]" add_const_input="false">
          <delay_constant in_port="bram.I10[0] bram.I10[1] bram.I10[2] bram.I10[3] bram.I10[4] bram.I10[5] bram.I10[6] bram.I10[7] bram.I10[8] bram.I10[9] bram.I10[10] bram.I10[11] bram.I30[0] bram.I30[1] bram.I30[2] bram.I30[3] bram.I30[4] bram.I30[5] bram.I30[6] bram.I30[7] bram.I30[8] bram.I30[9] bram.I30[10] bram.I30[11] " out_port="bram_rtl.ADDR_B2_i[1]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_14" input="bram.I00[0] bram.I00[1] bram.I00[2] bram.I00[3] bram.I00[4] bram.I00[5] bram.I00[6] bram.I00[7] bram.I00[8] bram.I00[9] bram.I00[10] bram.I00[11] bram.I20[0] bram.I20[1] bram.I20[2] bram.I20[3] bram.I20[4] bram.I20[5] bram.I20[6] bram.I20[7] bram.I20[8] bram.I20[9] bram.I20[10] bram.I20[11] " output="bram_rtl.ADDR_B1_i[1]" add_const_input="false">
          <delay_constant in_port="bram.I00[0] bram.I00[1] bram.I00[2] bram.I00[3] bram.I00[4] bram.I00[5] bram.I00[6] bram.I00[7] bram.I00[8] bram.I00[9] bram.I00[10] bram.I00[11] bram.I20[0] bram.I20[1] bram.I20[2] bram.I20[3] bram.I20[4] bram.I20[5] bram.I20[6] bram.I20[7] bram.I20[8] bram.I20[9] bram.I20[10] bram.I20[11] " out_port="bram_rtl.ADDR_B1_i[1]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_13" input="bram.I10[0] bram.I10[1] bram.I10[2] bram.I10[3] bram.I10[4] bram.I10[5] bram.I10[6] bram.I10[7] bram.I10[8] bram.I10[9] bram.I10[10] bram.I10[11] bram.I20[0] bram.I20[1] bram.I20[2] bram.I20[3] bram.I20[4] bram.I20[5] bram.I20[6] bram.I20[7] bram.I20[8] bram.I20[9] bram.I20[10] bram.I20[11] " output="bram_rtl.ADDR_A2_i[1]" add_const_input="false">
          <delay_constant in_port="bram.I10[0] bram.I10[1] bram.I10[2] bram.I10[3] bram.I10[4] bram.I10[5] bram.I10[6] bram.I10[7] bram.I10[8] bram.I10[9] bram.I10[10] bram.I10[11] bram.I20[0] bram.I20[1] bram.I20[2] bram.I20[3] bram.I20[4] bram.I20[5] bram.I20[6] bram.I20[7] bram.I20[8] bram.I20[9] bram.I20[10] bram.I20[11] " out_port="bram_rtl.ADDR_A2_i[1]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_12" input="bram.I00[0] bram.I00[1] bram.I00[2] bram.I00[3] bram.I00[4] bram.I00[5] bram.I00[6] bram.I00[7] bram.I00[8] bram.I00[9] bram.I00[10] bram.I00[11] bram.I30[0] bram.I30[1] bram.I30[2] bram.I30[3] bram.I30[4] bram.I30[5] bram.I30[6] bram.I30[7] bram.I30[8] bram.I30[9] bram.I30[10] bram.I30[11] " output="bram_rtl.ADDR_A1_i[1]" add_const_input="false">
          <delay_constant in_port="bram.I00[0] bram.I00[1] bram.I00[2] bram.I00[3] bram.I00[4] bram.I00[5] bram.I00[6] bram.I00[7] bram.I00[8] bram.I00[9] bram.I00[10] bram.I00[11] bram.I30[0] bram.I30[1] bram.I30[2] bram.I30[3] bram.I30[4] bram.I30[5] bram.I30[6] bram.I30[7] bram.I30[8] bram.I30[9] bram.I30[10] bram.I30[11] " out_port="bram_rtl.ADDR_A1_i[1]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_11" input="bram.I10[0] bram.I10[1] bram.I10[2] bram.I10[3] bram.I10[4] bram.I10[5] bram.I10[6] bram.I10[7] bram.I10[8] bram.I10[9] bram.I10[10] bram.I10[11] bram.I20[0] bram.I20[1] bram.I20[2] bram.I20[3] bram.I20[4] bram.I20[5] bram.I20[6] bram.I20[7] bram.I20[8] bram.I20[9] bram.I20[10] bram.I20[11] " output="bram_rtl.WDATA_B2_i[1]" add_const_input="false">
          <delay_constant in_port="bram.I10[0] bram.I10[1] bram.I10[2] bram.I10[3] bram.I10[4] bram.I10[5] bram.I10[6] bram.I10[7] bram.I10[8] bram.I10[9] bram.I10[10] bram.I10[11] bram.I20[0] bram.I20[1] bram.I20[2] bram.I20[3] bram.I20[4] bram.I20[5] bram.I20[6] bram.I20[7] bram.I20[8] bram.I20[9] bram.I20[10] bram.I20[11] " out_port="bram_rtl.WDATA_B2_i[1]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_10" input="bram.I00[0] bram.I00[1] bram.I00[2] bram.I00[3] bram.I00[4] bram.I00[5] bram.I00[6] bram.I00[7] bram.I00[8] bram.I00[9] bram.I00[10] bram.I00[11] bram.I30[0] bram.I30[1] bram.I30[2] bram.I30[3] bram.I30[4] bram.I30[5] bram.I30[6] bram.I30[7] bram.I30[8] bram.I30[9] bram.I30[10] bram.I30[11] " output="bram_rtl.WDATA_B1_i[1]" add_const_input="false">
          <delay_constant in_port="bram.I00[0] bram.I00[1] bram.I00[2] bram.I00[3] bram.I00[4] bram.I00[5] bram.I00[6] bram.I00[7] bram.I00[8] bram.I00[9] bram.I00[10] bram.I00[11] bram.I30[0] bram.I30[1] bram.I30[2] bram.I30[3] bram.I30[4] bram.I30[5] bram.I30[6] bram.I30[7] bram.I30[8] bram.I30[9] bram.I30[10] bram.I30[11] " out_port="bram_rtl.WDATA_B1_i[1]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_9" input="bram.I10[0] bram.I10[1] bram.I10[2] bram.I10[3] bram.I10[4] bram.I10[5] bram.I10[6] bram.I10[7] bram.I10[8] bram.I10[9] bram.I10[10] bram.I10[11] bram.I30[0] bram.I30[1] bram.I30[2] bram.I30[3] bram.I30[4] bram.I30[5] bram.I30[6] bram.I30[7] bram.I30[8] bram.I30[9] bram.I30[10] bram.I30[11] " output="bram_rtl.WDATA_A2_i[1]" add_const_input="false">
          <delay_constant in_port="bram.I10[0] bram.I10[1] bram.I10[2] bram.I10[3] bram.I10[4] bram.I10[5] bram.I10[6] bram.I10[7] bram.I10[8] bram.I10[9] bram.I10[10] bram.I10[11] bram.I30[0] bram.I30[1] bram.I30[2] bram.I30[3] bram.I30[4] bram.I30[5] bram.I30[6] bram.I30[7] bram.I30[8] bram.I30[9] bram.I30[10] bram.I30[11] " out_port="bram_rtl.WDATA_A2_i[1]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_8" input="bram.I00[0] bram.I00[1] bram.I00[2] bram.I00[3] bram.I00[4] bram.I00[5] bram.I00[6] bram.I00[7] bram.I00[8] bram.I00[9] bram.I00[10] bram.I00[11] bram.I20[0] bram.I20[1] bram.I20[2] bram.I20[3] bram.I20[4] bram.I20[5] bram.I20[6] bram.I20[7] bram.I20[8] bram.I20[9] bram.I20[10] bram.I20[11] " output="bram_rtl.WDATA_A1_i[1]" add_const_input="false">
          <delay_constant in_port="bram.I00[0] bram.I00[1] bram.I00[2] bram.I00[3] bram.I00[4] bram.I00[5] bram.I00[6] bram.I00[7] bram.I00[8] bram.I00[9] bram.I00[10] bram.I00[11] bram.I20[0] bram.I20[1] bram.I20[2] bram.I20[3] bram.I20[4] bram.I20[5] bram.I20[6] bram.I20[7] bram.I20[8] bram.I20[9] bram.I20[10] bram.I20[11] " out_port="bram_rtl.WDATA_A1_i[1]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_7" input="bram.I10[0] bram.I10[1] bram.I10[2] bram.I10[3] bram.I10[4] bram.I10[5] bram.I10[6] bram.I10[7] bram.I10[8] bram.I10[9] bram.I10[10] bram.I10[11] bram.I20[0] bram.I20[1] bram.I20[2] bram.I20[3] bram.I20[4] bram.I20[5] bram.I20[6] bram.I20[7] bram.I20[8] bram.I20[9] bram.I20[10] bram.I20[11] " output="bram_rtl.ADDR_B2_i[0]" add_const_input="false">
          <delay_constant in_port="bram.I10[0] bram.I10[1] bram.I10[2] bram.I10[3] bram.I10[4] bram.I10[5] bram.I10[6] bram.I10[7] bram.I10[8] bram.I10[9] bram.I10[10] bram.I10[11] bram.I20[0] bram.I20[1] bram.I20[2] bram.I20[3] bram.I20[4] bram.I20[5] bram.I20[6] bram.I20[7] bram.I20[8] bram.I20[9] bram.I20[10] bram.I20[11] " out_port="bram_rtl.ADDR_B2_i[0]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_6" input="bram.I00[0] bram.I00[1] bram.I00[2] bram.I00[3] bram.I00[4] bram.I00[5] bram.I00[6] bram.I00[7] bram.I00[8] bram.I00[9] bram.I00[10] bram.I00[11] bram.I30[0] bram.I30[1] bram.I30[2] bram.I30[3] bram.I30[4] bram.I30[5] bram.I30[6] bram.I30[7] bram.I30[8] bram.I30[9] bram.I30[10] bram.I30[11] " output="bram_rtl.ADDR_B1_i[0]" add_const_input="false">
          <delay_constant in_port="bram.I00[0] bram.I00[1] bram.I00[2] bram.I00[3] bram.I00[4] bram.I00[5] bram.I00[6] bram.I00[7] bram.I00[8] bram.I00[9] bram.I00[10] bram.I00[11] bram.I30[0] bram.I30[1] bram.I30[2] bram.I30[3] bram.I30[4] bram.I30[5] bram.I30[6] bram.I30[7] bram.I30[8] bram.I30[9] bram.I30[10] bram.I30[11] " out_port="bram_rtl.ADDR_B1_i[0]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_5" input="bram.I10[0] bram.I10[1] bram.I10[2] bram.I10[3] bram.I10[4] bram.I10[5] bram.I10[6] bram.I10[7] bram.I10[8] bram.I10[9] bram.I10[10] bram.I10[11] bram.I20[0] bram.I20[1] bram.I20[2] bram.I20[3] bram.I20[4] bram.I20[5] bram.I20[6] bram.I20[7] bram.I20[8] bram.I20[9] bram.I20[10] bram.I20[11] " output="bram_rtl.ADDR_A2_i[0]" add_const_input="false">
          <delay_constant in_port="bram.I10[0] bram.I10[1] bram.I10[2] bram.I10[3] bram.I10[4] bram.I10[5] bram.I10[6] bram.I10[7] bram.I10[8] bram.I10[9] bram.I10[10] bram.I10[11] bram.I20[0] bram.I20[1] bram.I20[2] bram.I20[3] bram.I20[4] bram.I20[5] bram.I20[6] bram.I20[7] bram.I20[8] bram.I20[9] bram.I20[10] bram.I20[11] " out_port="bram_rtl.ADDR_A2_i[0]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_4" input="bram.I00[0] bram.I00[1] bram.I00[2] bram.I00[3] bram.I00[4] bram.I00[5] bram.I00[6] bram.I00[7] bram.I00[8] bram.I00[9] bram.I00[10] bram.I00[11] bram.I30[0] bram.I30[1] bram.I30[2] bram.I30[3] bram.I30[4] bram.I30[5] bram.I30[6] bram.I30[7] bram.I30[8] bram.I30[9] bram.I30[10] bram.I30[11] " output="bram_rtl.ADDR_A1_i[0]" add_const_input="false">
          <delay_constant in_port="bram.I00[0] bram.I00[1] bram.I00[2] bram.I00[3] bram.I00[4] bram.I00[5] bram.I00[6] bram.I00[7] bram.I00[8] bram.I00[9] bram.I00[10] bram.I00[11] bram.I30[0] bram.I30[1] bram.I30[2] bram.I30[3] bram.I30[4] bram.I30[5] bram.I30[6] bram.I30[7] bram.I30[8] bram.I30[9] bram.I30[10] bram.I30[11] " out_port="bram_rtl.ADDR_A1_i[0]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_3" input="bram.I10[0] bram.I10[1] bram.I10[2] bram.I10[3] bram.I10[4] bram.I10[5] bram.I10[6] bram.I10[7] bram.I10[8] bram.I10[9] bram.I10[10] bram.I10[11] bram.I30[0] bram.I30[1] bram.I30[2] bram.I30[3] bram.I30[4] bram.I30[5] bram.I30[6] bram.I30[7] bram.I30[8] bram.I30[9] bram.I30[10] bram.I30[11] " output="bram_rtl.WDATA_B2_i[0]" add_const_input="false">
          <delay_constant in_port="bram.I10[0] bram.I10[1] bram.I10[2] bram.I10[3] bram.I10[4] bram.I10[5] bram.I10[6] bram.I10[7] bram.I10[8] bram.I10[9] bram.I10[10] bram.I10[11] bram.I30[0] bram.I30[1] bram.I30[2] bram.I30[3] bram.I30[4] bram.I30[5] bram.I30[6] bram.I30[7] bram.I30[8] bram.I30[9] bram.I30[10] bram.I30[11] " out_port="bram_rtl.WDATA_B2_i[0]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_2" input="bram.I00[0] bram.I00[1] bram.I00[2] bram.I00[3] bram.I00[4] bram.I00[5] bram.I00[6] bram.I00[7] bram.I00[8] bram.I00[9] bram.I00[10] bram.I00[11] bram.I20[0] bram.I20[1] bram.I20[2] bram.I20[3] bram.I20[4] bram.I20[5] bram.I20[6] bram.I20[7] bram.I20[8] bram.I20[9] bram.I20[10] bram.I20[11] " output="bram_rtl.WDATA_B1_i[0]" add_const_input="false">
          <delay_constant in_port="bram.I00[0] bram.I00[1] bram.I00[2] bram.I00[3] bram.I00[4] bram.I00[5] bram.I00[6] bram.I00[7] bram.I00[8] bram.I00[9] bram.I00[10] bram.I00[11] bram.I20[0] bram.I20[1] bram.I20[2] bram.I20[3] bram.I20[4] bram.I20[5] bram.I20[6] bram.I20[7] bram.I20[8] bram.I20[9] bram.I20[10] bram.I20[11] " out_port="bram_rtl.WDATA_B1_i[0]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_1" input="bram.I10[0] bram.I10[1] bram.I10[2] bram.I10[3] bram.I10[4] bram.I10[5] bram.I10[6] bram.I10[7] bram.I10[8] bram.I10[9] bram.I10[10] bram.I10[11] bram.I20[0] bram.I20[1] bram.I20[2] bram.I20[3] bram.I20[4] bram.I20[5] bram.I20[6] bram.I20[7] bram.I20[8] bram.I20[9] bram.I20[10] bram.I20[11] " output="bram_rtl.WDATA_A2_i[0]" add_const_input="false">
          <delay_constant in_port="bram.I10[0] bram.I10[1] bram.I10[2] bram.I10[3] bram.I10[4] bram.I10[5] bram.I10[6] bram.I10[7] bram.I10[8] bram.I10[9] bram.I10[10] bram.I10[11] bram.I20[0] bram.I20[1] bram.I20[2] bram.I20[3] bram.I20[4] bram.I20[5] bram.I20[6] bram.I20[7] bram.I20[8] bram.I20[9] bram.I20[10] bram.I20[11] " out_port="bram_rtl.WDATA_A2_i[0]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <mux name="II_0_0" input="bram.I00[0] bram.I00[1] bram.I00[2] bram.I00[3] bram.I00[4] bram.I00[5] bram.I00[6] bram.I00[7] bram.I00[8] bram.I00[9] bram.I00[10] bram.I00[11] bram.I30[0] bram.I30[1] bram.I30[2] bram.I30[3] bram.I30[4] bram.I30[5] bram.I30[6] bram.I30[7] bram.I30[8] bram.I30[9] bram.I30[10] bram.I30[11] " output="bram_rtl.WDATA_A1_i[0]" add_const_input="false">
          <delay_constant in_port="bram.I00[0] bram.I00[1] bram.I00[2] bram.I00[3] bram.I00[4] bram.I00[5] bram.I00[6] bram.I00[7] bram.I00[8] bram.I00[9] bram.I00[10] bram.I00[11] bram.I30[0] bram.I30[1] bram.I30[2] bram.I30[3] bram.I30[4] bram.I30[5] bram.I30[6] bram.I30[7] bram.I30[8] bram.I30[9] bram.I30[10] bram.I30[11] " out_port="bram_rtl.WDATA_A1_i[0]" max="2.58858e-10" min="8.2864e-11"/>
        </mux>
        <!-- tile non-fabric connections -->
        <!--  PL Connection Map -->
        <!--  73   72  71  70  69 ... 67 ............  35 ............ 0 -->
        <!--  INIT ENA REN CLK    WEN          ADDR           DATA       -->
        <complete name="bram_clk_in" input="bram.clk" output="clk_opt.I"/>
        <!-- 16:4 -->
        <direct name="direct_RAM_ID_i_i" input="bram.RAM_ID_i" output="bram_rtl.RAM_ID_i"/>
        <!-- Preload feedthrough signals (not all feedthrough connections) -->
        <direct name="direct_pl_data_return" input="bram.PL_DATA_IN" output="bram.PL_DATA_OUT"/>
        <direct name="direct_pl_init_i" input="bram.PL_IN[73:73]" output="bram_rtl.PL_INIT_i"/>
        <direct name="direct_pl_ena_i" input="bram.PL_IN[72:72]" output="bram_rtl.PL_ENA_i"/>
        <direct name="direct_pl_ren_i" input="bram.PL_IN[71:71]" output="bram_rtl.PL_REN_i"/>
        <direct name="direct_pl_clk_i" input="bram.PL_IN[70:70]" output="bram_rtl.PL_CLK_i"/>
        <direct name="direct_pl_wen_i" input="bram.PL_IN[69:68]" output="bram_rtl.PL_WEN_i"/>
        <direct name="direct_pl_addr_i" input="bram.PL_IN[67:36]" output="bram_rtl.PL_ADDR_i"/>
        <direct name="direct_pl_data_i" input="bram.PL_IN[35:0]" output="bram_rtl.PL_DATA_i"/>
        <direct name="direct_pl_init_o" output="bram.PL_OUT[73:73]" input="bram_rtl.PL_INIT_o"/>
        <direct name="direct_pl_ena_o" output="bram.PL_OUT[72:72]" input="bram_rtl.PL_ENA_o"/>
        <direct name="direct_pl_ren_o" output="bram.PL_OUT[71:71]" input="bram_rtl.PL_REN_o"/>
        <direct name="direct_pl_clk_o" output="bram.PL_OUT[70:70]" input="bram_rtl.PL_CLK_o"/>
        <direct name="direct_pl_wen_o" output="bram.PL_OUT[69:68]" input="bram_rtl.PL_WEN_o"/>
        <direct name="direct_pl_addr_o" output="bram.PL_OUT[67:36]" input="bram_rtl.PL_ADDR_o"/>
        <direct name="direct_pl_data_o" output="bram.PL_OUT[35:0]" input="bram_rtl.PL_DATA_o"/>
        <direct name="direct_sc_in_i" input="bram.sc_in[43:0]" output="bram_rtl.sc_in"/>
        <direct name="direct_sc_out_o" input="bram_rtl.sc_out" output="bram.sc_out[43:0]"/>
        <direct name="direct_si_mmff" input="bram.sc_in[47:44]" output="ff_wrap.sc_in"/>
        <direct name="direct_so_mmff" input="ff_wrap.sc_out" output="bram.sc_out[47:44]"/>
        <!-- internal connections -->
        <direct name="bram_clk_a1" input="clk_opt[0].O" output="bram_rtl.CLK_A1_i"/>
        <direct name="bram_clk_b1" input="clk_opt[1].O" output="bram_rtl.CLK_B1_i"/>
        <direct name="bram_clk_a2" input="clk_opt[2].O" output="bram_rtl.CLK_A2_i"/>
        <direct name="bram_clk_b2" input="clk_opt[3].O" output="bram_rtl.CLK_B2_i"/>
        <direct name="clk_a1" input="clk_opt[0].O" output="ff_wrap.clock[0]"/>
        <direct name="clk_b1" input="clk_opt[1].O" output="ff_wrap.clock[1]"/>
        <direct name="clk_a2" input="clk_opt[2].O" output="ff_wrap.clock[2]"/>
        <direct name="clk_b2" input="clk_opt[3].O" output="ff_wrap.clock[3]"/>
        <mux name="reset_a1" input="sr_opt[0].O sr_opt[1].O sr_opt[2].O sr_opt[3].O" output="ff_wrap.reset[0]" add_const_input="false"/>
        <mux name="reset_b1" input="sr_opt[0].O sr_opt[1].O sr_opt[2].O sr_opt[3].O" output="ff_wrap.reset[1]" add_const_input="false"/>
        <mux name="reset_a2" input="sr_opt[0].O sr_opt[1].O sr_opt[2].O sr_opt[3].O" output="ff_wrap.reset[2]" add_const_input="false"/>
        <mux name="reset_b2" input="sr_opt[0].O sr_opt[1].O sr_opt[2].O sr_opt[3].O" output="ff_wrap.reset[3]" add_const_input="false"/>
        <direct name="direct11a" input="bram_rtl.RDATA_A1_o" output="ff_wrap.rdata_a1"/>
        <direct name="direct12a" input="bram_rtl.RDATA_B1_o" output="ff_wrap.rdata_b1"/>
        <direct name="direct35a" input="bram_rtl.RDATA_A2_o" output="ff_wrap.rdata_a2"/>
        <direct name="direct36a" input="bram_rtl.RDATA_B2_o" output="ff_wrap.rdata_b2"/>
        <mux name="direct13a" input="flush_opt.O[0] flush_opt.O[1]" output="bram_rtl.FLUSH1_i" add_const_input="false"/>
        <mux name="direct37a" input="flush_opt.O[0] flush_opt.O[1]" output="bram_rtl.FLUSH2_i" add_const_input="false"/>
      </interconnect>
    </pb_type>
    <!-- bram -->
  </complexblocklist>
  <layout tileable="true" through_channel="true">
    <fixed_layout name="castor4x4_homogeneous" width="8" height="8">
      <!--Default perimeter to 'io' blocks (then add 'EMPTY' blocks at corners)-->
      <row type="io_top" starty="H-2" priority="90"/>
      <row type="io_bottom" starty="1" priority="91"/>
      <col type="io_right" startx="W-2" priority="92"/>
      <col type="io_left" startx="1" priority="93"/>
      <single type="io_right_top" x="6" y="6" priority="94"/>
      <single type="io_right_bottom" x="6" y="1" priority="95"/>
      <corners type="EMPTY" priority="100"/>
      <row type="EMPTY" starty="H-1" priority="101"/>
      <col type="EMPTY" startx="W-1" priority="102"/>
      <row type="EMPTY" starty="0" priority="103"/>
      <col type="EMPTY" startx="0" priority="104"/>
      <!--Default to clb-->
      <fill type="clb" priority="10"/>
    </fixed_layout>
    <fixed_layout name="castor10x8_heterogeneous" width="12" height="10">
      <!--Default perimeter to 'io' blocks (then add 'EMPTY' blocks at corners)-->
      <row type="io_top" starty="H-2" priority="90"/>
      <row type="io_bottom" starty="1" priority="91"/>
      <col type="io_right" startx="W-2" priority="92"/>
      <col type="io_left" startx="1" priority="93"/>
      <single type="io_right_top" x="10" y="8" priority="94"/>
      <single type="io_right_bottom" x="10" y="1" priority="95"/>
      <corners type="EMPTY" priority="100"/>
      <row type="EMPTY" starty="H-1" priority="101"/>
      <col type="EMPTY" startx="W-1" priority="102"/>
      <row type="EMPTY" starty="0" priority="103"/>
      <col type="EMPTY" startx="0" priority="104"/>
      <!--Default to clb-->
      <fill type="clb" priority="10"/>
      <!--Insert DSP column(s)-->
      <region type="dsp" startx="4" endx="4" starty="2" endy="H-3" priority="30"/>
      <!--Insert BRAM column(s)-->
      <region type="bram" startx="7" endx="7" starty="2" endy="H-3" priority="30"/>
    </fixed_layout>
    <fixed_layout name="castor82x68_heterogeneous" width="84" height="70">
      <!--Default perimeter to 'io' blocks (then add 'EMPTY' blocks at corners)-->
      <row type="io_top" starty="H-2" priority="90"/>
      <row type="io_bottom" starty="1" priority="91"/>
      <col type="io_right" startx="W-2" priority="92"/>
      <col type="io_left" startx="1" priority="93"/>
      <single type="io_right_top" x="82" y="68" priority="94"/>
      <single type="io_right_bottom" x="82" y="1" priority="95"/>
      <corners type="EMPTY" priority="100"/>
      <row type="EMPTY" starty="H-1" priority="101"/>
      <col type="EMPTY" startx="W-1" priority="102"/>
      <row type="EMPTY" starty="0" priority="103"/>
      <col type="EMPTY" startx="0" priority="104"/>
      <!--Default to clb-->
      <fill type="clb" priority="10"/>
      <!--Insert DSP column(s)-->
      <col type="dsp" startx="15" starty="2" priority="20"/>
      <col type="dsp" startx="23" starty="2" priority="20"/>
      <col type="dsp" startx="31" starty="2" priority="20"/>
      <col type="dsp" startx="39" starty="2" priority="20"/>
      <col type="dsp" startx="47" starty="2" priority="20"/>
      <col type="dsp" startx="55" starty="2" priority="20"/>
      <col type="dsp" startx="63" starty="2" priority="20"/>
      <!--Insert BRAM column(s)-->
      <col type="bram" startx="19" starty="2" priority="20"/>
      <col type="bram" startx="27" starty="2" priority="20"/>
      <col type="bram" startx="35" starty="2" priority="20"/>
      <col type="bram" startx="43" starty="2" priority="20"/>
      <col type="bram" startx="51" starty="2" priority="20"/>
      <col type="bram" startx="59" starty="2" priority="20"/>
      <col type="bram" startx="67" starty="2" priority="20"/>
    </fixed_layout>
    <fixed_layout name="3x3" width="5" height="5">
      <!--Default to clb-->
      <fill type="clb" priority="10"/>
      <!--Default perimeter to 'io' blocks (then add 'EMPTY' blocks at corners)-->
      <row type="io_top" starty="H-2" priority="90"/>
      <row type="io_bottom" starty="1" priority="91"/>
      <col type="io_right" startx="W-2" priority="92"/>
      <col type="io_left" startx="1" priority="93"/>
      <corners type="EMPTY" priority="100"/>
      <row type="EMPTY" starty="H-1" priority="101"/>
      <col type="EMPTY" startx="W-1" priority="102"/>
      <row type="EMPTY" starty="0" priority="103"/>
      <col type="EMPTY" startx="0" priority="104"/>
    </fixed_layout>
    <fixed_layout name="6x6b" width="10" height="10">
      <!--Default to clb-->
      <fill type="clb" priority="1"/>
      <!--Insert DSP column(s)-->
      <col type="dsp" startx="3" starty="2" priority="30"/>
      <!--Insert DSP column(s)-->
      <col type="bram" startx="6" starty="2" priority="30"/>
      <!--Default perimeter to 'io' blocks (then add 'EMPTY' blocks at corners)-->
      <row type="io_top" starty="H-2" priority="90"/>
      <row type="io_bottom" starty="1" priority="91"/>
      <col type="io_right" startx="W-2" priority="92"/>
      <col type="io_left" startx="1" priority="93"/>
      <corners type="EMPTY" priority="100"/>
      <row type="EMPTY" starty="H-1" priority="101"/>
      <col type="EMPTY" startx="W-1" priority="102"/>
      <row type="EMPTY" starty="0" priority="103"/>
      <col type="EMPTY" startx="0" priority="104"/>
    </fixed_layout>
    <fixed_layout name="12x12" width="16" height="16">
      <!--Mini Castor array complete with DSP and BRAM-->
      <!--Perimeter of 'io' blocks with 'EMPTY' blocks at corners-->
      <row type="io_top" starty="H-2" priority="90"/>
      <row type="io_bottom" starty="1" priority="91"/>
      <col type="io_right" startx="W-2" priority="92"/>
      <col type="io_left" startx="1" priority="93"/>
      <corners type="EMPTY" priority="100"/>
      <row type="EMPTY" starty="H-1" priority="101"/>
      <col type="EMPTY" startx="W-1" priority="102"/>
      <row type="EMPTY" starty="0" priority="103"/>
      <col type="EMPTY" startx="0" priority="104"/>
      <!--Default to clb-->
      <fill type="clb" priority="10"/>
      <!--Overlay with 'dsp'-->
      <col type="dsp" startx="3" starty="2" priority="30"/>
      <col type="dsp" startx="9" starty="2" priority="30"/>
      <!--Overlay with 'bram'-->
      <col type="bram" startx="6" starty="2" priority="20"/>
      <col type="bram" startx="12" starty="2" priority="20"/>
    </fixed_layout>
    <fixed_layout name="36x36b" width="40" height="40">
      <!--Medium array with double BRAM: enough to run aes_decrypt-->
      <!--Perimeter of 'io' blocks with 'EMPTY' blocks at corners-->
      <row type="io_top" starty="H-2" priority="90"/>
      <row type="io_bottom" starty="1" priority="91"/>
      <col type="io_right" startx="W-2" priority="92"/>
      <col type="io_left" startx="1" priority="93"/>
      <corners type="EMPTY" priority="100"/>
      <row type="EMPTY" starty="H-1" priority="101"/>
      <col type="EMPTY" startx="W-1" priority="102"/>
      <row type="EMPTY" starty="0" priority="103"/>
      <col type="EMPTY" startx="0" priority="104"/>
      <!--Fill with 'clb'-->
      <fill type="clb" priority="10"/>
      <!--Overlay with 'bram'-->
      <col type="bram" startx="3" starty="2" priority="20"/>
      <col type="bram" startx="6" starty="2" priority="20"/>
      <col type="bram" startx="9" starty="2" priority="20"/>
      <col type="bram" startx="12" starty="2" priority="20"/>
      <col type="bram" startx="15" starty="2" priority="20"/>
      <col type="bram" startx="18" starty="2" priority="20"/>
      <col type="bram" startx="21" starty="2" priority="20"/>
      <col type="bram" startx="24" starty="2" priority="20"/>
      <col type="bram" startx="27" starty="2" priority="20"/>
      <col type="bram" startx="30" starty="2" priority="20"/>
      <col type="bram" startx="33" starty="2" priority="20"/>
      <col type="bram" startx="36" starty="2" priority="20"/>
    </fixed_layout>
    <fixed_layout name="40x40" width="44" height="44">
      <!--Default to clb-->
      <fill type="clb" priority="1"/>
      <!--Default perimeter to 'io' blocks (then add 'EMPTY' blocks at corners)-->
      <row type="io_top" starty="H-2" priority="90"/>
      <row type="io_bottom" starty="1" priority="91"/>
      <col type="io_right" startx="W-2" priority="92"/>
      <col type="io_left" startx="1" priority="93"/>
      <corners type="EMPTY" priority="100"/>
      <row type="EMPTY" starty="H-1" priority="101"/>
      <col type="EMPTY" startx="W-1" priority="102"/>
      <row type="EMPTY" starty="0" priority="103"/>
      <col type="EMPTY" startx="0" priority="104"/>
    </fixed_layout>
    <fixed_layout name="96x90" width="100" height="94">
      <!--Full-size Castor array-->
      <!--Perimeter of 'io' blocks with 'EMPTY' blocks at corners-->
      <row type="io_top" starty="H-2" priority="90"/>
      <row type="io_bottom" starty="1" priority="91"/>
      <col type="io_right" startx="W-2" priority="92"/>
      <col type="io_left" startx="1" priority="93"/>
      <corners type="EMPTY" priority="100"/>
      <row type="EMPTY" starty="H-1" priority="101"/>
      <col type="EMPTY" startx="W-1" priority="102"/>
      <row type="EMPTY" starty="0" priority="103"/>
      <col type="EMPTY" startx="0" priority="104"/>
      <!--Fill with 'clb'-->
      <fill type="clb" priority="10"/>
      <!--Overlay with 'dsp'-->
      <col type="dsp" startx="3" starty="2" priority="30"/>
      <col type="dsp" startx="9" starty="2" priority="30"/>
      <col type="dsp" startx="15" starty="2" priority="30"/>
      <col type="dsp" startx="21" starty="2" priority="30"/>
      <col type="dsp" startx="27" starty="2" priority="30"/>
      <col type="dsp" startx="33" starty="2" priority="30"/>
      <col type="dsp" startx="39" starty="2" priority="30"/>
      <col type="dsp" startx="45" starty="2" priority="30"/>
      <col type="dsp" startx="51" starty="2" priority="30"/>
      <col type="dsp" startx="57" starty="2" priority="30"/>
      <col type="dsp" startx="63" starty="2" priority="30"/>
      <col type="dsp" startx="69" starty="2" priority="30"/>
      <col type="dsp" startx="75" starty="2" priority="30"/>
      <col type="dsp" startx="81" starty="2" priority="30"/>
      <col type="dsp" startx="87" starty="2" priority="30"/>
      <col type="dsp" startx="93" starty="2" priority="30"/>
      <!--Overlay with 'bram'-->
      <col type="bram" startx="6" starty="2" priority="20"/>
      <col type="bram" startx="12" starty="2" priority="20"/>
      <col type="bram" startx="18" starty="2" priority="20"/>
      <col type="bram" startx="24" starty="2" priority="20"/>
      <col type="bram" startx="30" starty="2" priority="20"/>
      <col type="bram" startx="36" starty="2" priority="20"/>
      <col type="bram" startx="42" starty="2" priority="20"/>
      <col type="bram" startx="48" starty="2" priority="20"/>
      <col type="bram" startx="54" starty="2" priority="20"/>
      <col type="bram" startx="60" starty="2" priority="20"/>
      <col type="bram" startx="66" starty="2" priority="20"/>
      <col type="bram" startx="72" starty="2" priority="20"/>
      <col type="bram" startx="78" starty="2" priority="20"/>
      <col type="bram" startx="84" starty="2" priority="20"/>
      <col type="bram" startx="90" starty="2" priority="20"/>
      <col type="bram" startx="96" starty="2" priority="20"/>
    </fixed_layout>
  </layout>
</architecture>
