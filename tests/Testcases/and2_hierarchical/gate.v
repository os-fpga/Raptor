/* Generated by Yosys 0.18+10 (git sha1 f797bf10a, gcc 11.2.0-7ubuntu2 -fPIC -Os) */

module and2(a, b, c, clk, reset);
  input a;
  input b;
  output c;
  input clk;
  input reset;
  (* keep = 32'h00000001 *)
  wire _0_;
  (* keep = 32'h00000001 *)
  wire _1_;
  (* keep = 32'h00000001 *)
  wire _2_;
  wire _3_;
  (* src = "/home/alain/RapidSilicon/Raptor/yosys_verific_rs/yosys/install/share/yosys/rapidsilicon/genesis3/ffs_map.v:19.64-19.66" *)
  wire _4_;
  (* src = "/home/alain/RapidSilicon/Raptor/tests/Testcases/and2_compact/./rtl/and2.v:14" *)
  (* src = "/home/alain/RapidSilicon/Raptor/tests/Testcases/and2_compact/./rtl/and2.v:14" *)
  wire a;
  (* src = "/home/alain/RapidSilicon/Raptor/tests/Testcases/and2_compact/./rtl/and2.v:15" *)
  (* src = "/home/alain/RapidSilicon/Raptor/tests/Testcases/and2_compact/./rtl/and2.v:15" *)
  wire b;
  (* keep = 32'h00000001 *)
  (* src = "/home/alain/RapidSilicon/Raptor/tests/Testcases/and2_compact/./rtl/and2.v:18" *)
  (* keep = 32'h00000001 *)
  (* src = "/home/alain/RapidSilicon/Raptor/tests/Testcases/and2_compact/./rtl/and2.v:18" *)
  wire c;
  (* keep = 32'h00000001 *)
  (* src = "/home/alain/RapidSilicon/Raptor/tests/Testcases/and2_compact/./rtl/and2.v:16" *)
  (* keep = 32'h00000001 *)
  (* src = "/home/alain/RapidSilicon/Raptor/tests/Testcases/and2_compact/./rtl/and2.v:16" *)
  wire clk;
  (* src = "/home/alain/RapidSilicon/Raptor/tests/Testcases/and2_compact/./rtl/and2.v:17" *)
  (* src = "/home/alain/RapidSilicon/Raptor/tests/Testcases/and2_compact/./rtl/and2.v:17" *)
  wire reset;
  (* module_not_derived = 32'h00000001 *)
  (* src = "/home/alain/RapidSilicon/Raptor/yosys_verific_rs/yosys/install/share/yosys/rapidsilicon/genesis3/ffs_map.v:19.11-19.68" *)
  dffre _5_ (
    .C(clk),
    .D(_3_),
    .E(1'h1),
    .Q(c),
    .R(_4_)
  );
  \$lut  #(
    .LUT(4'h8),
    .WIDTH(32'h00000002)
  ) _6_ (
    .A({ b, a }),
    .Y(_3_)
  );
  \$lut  #(
    .LUT(2'h1),
    .WIDTH(32'h00000001)
  ) _7_ (
    .A(reset),
    .Y(_4_)
  );
  assign _0_ = c;
  assign _1_ = c;
  assign _2_ = c;
endmodule

module top (a, b, c, clk, reset);
 input a;
  input b;
  output c;
  input clk;
  input reset;

   and2 myand (.a(a),.b(b),.c(c),.clk(clk),.reset(reset));
  
 
endmodule
